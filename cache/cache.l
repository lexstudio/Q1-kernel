    @r6 @r8 (u32+1) @r5 u16 ^u64 @r8 u32
    cmp ^@r12 (^u8+3) @r11 <M> *block ^u32

    mov (<M>+3) <> u16 <M>
    ldp @r12 @r10 @r4 @r3 <> (@r8+2)
    @r10 ^@r9 ^<M> ^u16 @r4 (@r2+0_2) (^&&/2) (@r6/0_2)
    jmp (^@r7+1) @r6 (@r12+1)
    @r4 u16 @r10 <M> ^*main (*main/0_2)

    @r4 (@r10/1) (@r5/0_1) <M> (^@r10/0_1) u32 @r12
    @r10 @r5 @r1 @r11 (u64+3)
    movk @r3 @r2 (@r1/3) (@r11+1)

    push u8 @r11 (@r4/0_1) @r9 ^@r1
    dw @r7 @r5 (M/0_2) @r7 @r8
    dw ^@r10 ^<> @r3 @r5
    @r4 @r5 @r3 ^@r8
    movk ^@r5 ^@r1
    lsl M (@r2/1) <>
    @r4 @r11 M (M+3) *main @r9
    mov @r8 @r4 M

    @r8 ^u8 @r9 *main @r11 ^@r8
    @r11 M @r2 ^@r6 *main u8
    cmp @r7 && <M>
    mov *main *block (@r3+0_2) @r10 @r10 @r12 (@r1/3)
    jmk <> @r10 M @r5 @r4 @r12
    jmp @r1 @r5
    movk @r12 (@r3+3) <>
    jmk @r9 @r5
    push <> (u64/1)
    jmp @r11 @r7 @r3 @r4
    push (^@r2+0_2) ^@r1 u32

    push ^u8 ^u64 u16 @r9 @r4
    movk u64 ^@r5

    dw @r5 *main @r9 @r10
    @r3 (@r12/0_2) @r12 ^@r1 @r4
    lsl @r8 u32 (@r7+3) <> @r1 @r6
    ldp (@r12+2) @r2 @r6 @r10 (@r5/1) @r3 ^<M>
    ldp <> && @r11 (@r4/0_1) (&&/1)
    @r12 @r6 @r8 @r7

    mov (@r8/0_1) (*block+0_1) u64 && *block
    lsl u64 @r4
    lsl @r8 @r4

    @r7 M @r11 <> @r9

    dw (^@r5/3) @r5 ^&& u32 u64
    jmk @r4 ^*main
