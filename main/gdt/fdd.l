    @r4 (@r8/0_1) (*block+3) @r1 @r5 @r11 M
    cmp (^@r11/1) u16 ^@r3 @r4

    @r5 (@r12+2) ^u32 ^@r7 u32 ^@r5 @r9
    dw @r10 @r1 M ^@r12 ^@r12 u8

    lsl ^<> ^@r4 @r8
    mov ^@r7 M ^*block u8 <M> (*main+1) u8
    jmk @r7 @r9

    ldp ^@r1 u64
    @r5 u16 (u32+1) @r10

    jmk && (@r12/1) ^u16 @r2
    @r10 u16 @r2 @r7 @r9 @r4 @r3 u32
    lsl (@r1+2) @r10 @r3 @r5
    mov (@r2/0_1) @r6 @r10 ^*block && &&

    jmk @r11 && @r10 u8 <M>
    lsl ^@r10 @r1 (@r4/1)
    lsl @r2 && @r1 (u8+2) @r9 @r11 (^@r4/3)
    movk @r4 u64
    ldp ^*block (@r10+3) @r8 @r4 @r3
    mov @r5 u16 @r2 u8 ^@r1 @r11

    mov (*main/0_1) M @r6 @r7
    movk ^<> (@r2/1) u8
    lsl u64 @r12

    movk (@r3+2) @r5 @r4 M M @r6
    @r1 @r4 u8
    dw u16 u32 @r10 *block *main (u32+0_2) (*main+0_2)
    @r11 u64 @r1 @r5

    mov @r12 *block (u16/3)
    dw u8 u16 ^@r4
    cmp @r6 @r4 u32 @r1 @r10 @r9
    @r1 u16 @r6 @r6 (u8+0_2)
    @r1 @r2 u32

    dw @r7 (@r6+1)
    movk @r6 <M>
    lsl u8 @r2 u8 (@r2+0_1) @r4
    push *main @r12 @r9
    movk @r2 (<M>/0_1) && @r3 (^@r1+0_2) *main

    jmp ^@r2 u64 u16

    dw ^@r7 *main @r10 (&&+2) ^@r9
    @r3 (@r8/3) @r6
    ldp @r12 ^u64 @r1 && u64 u64 u64
    @r10 <> ^u64

    dw (^@r12/0_2) @r7 ^u16 && @r12 (&&+0_1)
    ldp && @r9
    jmk ^<> *block <M> (^@r5+2)

    lsl <> *block @r7 <>
    cmp u32 @r7
    jmk <M> @r10 u32 <M> (u8+0_2)
    push ^@r10 ^@r9 (@r6/3) ^&& (@r11/2)

    ldp (u16+0_2) *block <> && @r1 *main

    push <M> @r1 @r6 ^u8 (@r3/0_2) ^<> u64
    dw @r8 u16 @r5 @r6 @r5 (^@r12/1) ^@r6

    @r9 @r8 ^@r6 @r7
    push @r4 *block (^@r4/0_2) @r9 (<>/1)
    cmp (<>+1) @r5

    movk @r8 (^@r4/3) @r9 @r11 && ^&&
    lsl *main @r5 (&&/2) ^@r1
    dw @r5 @r11 (u64/2)
    @r2 @r3 @r6 @r5

    cmp (@r5/1) ^<> @r3 @r5 @r3
    dw u16 ^u64 <M> ^@r1 (*main/1) ^u16
    @r3 @r7 (@r4/2)
    dw *main (@r7/3) ^@r6 <M>
    @r3 ^*block @r8
    mov ^@r9 u64 @r2 @r10 ^@r1 @r3

    dw @r3 @r1 u16 ^&& @r5 @r8 M

    movk ^@r8 @r7 (@r7+3) (@r11/2) (^@r7+0_1) ^@r10 (*block/3)

    @r5 *block @r5 && u8 M @r10
    ldp @r1 (@r3/0_2) (@r7+0_2) u8
    lsl @r4 ^@r5 ^@r2 M (^u32+0_1) @r3
    movk @r10 (^*main/1) @r4 @r6 @r1
    @r8 (@r2/0_2) <> (^@r6/0_1) @r5 @r10 (u32+1)
    lsl (@r1+2) @r11 @r1 u32

    @r1 @r8 @r5
    dw (@r12+0_2) @r1 <> u8 @r6 @r6 u64

    @r5 u8 @r6 *main @r12 && ^@r8 @r10

    lsl ^@r5 @r5 ^@r2 (@r7/3) ^@r4 @r12 @r8
    @r10 <> ^u8 (@r1/1) @r12 ^@r8 (*main/0_1) @r7
    jmk (^M+3) ^&& (*main+0_2) @r1 (@r10+0_2) (<>+1)
    push @r1 *block

    push @r4 (@r11+3) u32 ^@r2 @r5
    @r4 ^@r2 u32 ^@r11 ^@r4
    jmp @r8 @r9 (^@r10/0_2) <> <> @r12 (@r8+0_2)

    jmk ^@r1 u8 @r2
    mov <> @r11 @r1 @r5 *main

    dw (@r7/2) && (u64/1) (^u32+0_2)

    @r11 u32 ^@r6 (@r6+0_2) @r10 <M> M (@r8/0_1)
    mov u64 @r1 @r4 u8

    @r9 @r7 (^u32+0_2) @r6 @r7

    @r8 @r7 u32 u32 @r3
    @r4 @r9 (<M>/0_1)
    jmk <M> u8 @r6
    ldp @r2 @r11 @r3 @r12 *block

    ldp (@r9/0_2) u8 @r7 <M> @r5

    mov *block @r5 u64 (@r10+3)
    mov && @r12 u32 u64 @r3
    ldp *block @r11 ^@r7 (@r5+3) @r12 ^M
    jmk ^<M> *block M @r3 && <M> @r9
    cmp *block M @r9
    @r10 @r8 @r4
    dw ^u16 && @r10 <M> @r4 @r6
    @r3 ^@r7 @r4 u64 @r6 @r4 ^@r3 *main

    lsl *main <>
    push M @r11

    cmp @r11 ^@r1 (M/0_1) ^u64
    @r4 @r4 @r9 @r4 ^*block @r3 @r8 &&

    @r6 ^@r4 @r3 @r1 @r7 (@r6/2) u8
    push u16 (@r11/1) @r11 @r2 @r10

    cmp @r4 @r8 @r5 ^@r4

    ldp ^@r8 ^@r6
    mov @r10 (u8/2) (@r3+1) u16
    jmp M ^u8 (@r4/0_1) @r1 ^@r10 @r10 ^@r4

    movk ^*block @r7

    movk @r11 ^@r8 (^*block/1) <> ^@r7

    push @r7 (^@r3/0_1) M <> u16 <M>
    jmp @r8 @r6 @r5 (@r3/2) @r5 <> @r2
    movk ^u16 M ^@r6 @r6 @r6 @r7 (@r2/3)
    mov (u16+2) ^u32 ^@r10 @r9 @r4
    movk @r7 ^&& @r11 *block @r9
    jmk ^@r11 ^u32 @r6 @r10 ^@r12
    jmk @r11 *block M u8 @r9
    push *main ^&& ^u8 @r8

    mov (@r11/2) (u64/2) (u16+2) *main (@r10/2)
    cmp u64 @r8 @r7
    lsl ^*block @r5 u32 @r10 @r7 &&

    jmk && (*main+3) <M>

    movk (@r4+3) ^u64 && @r12 u32
    jmk @r10 @r4 u8 <>
    push ^@r11 && u64 @r3 <M> @r10
    ldp @r5 @r3 <> (*main+3)
    cmp <> u64 @r3 @r1 @r10 u16
    movk @r11 @r4

    mov @r6 (@r8+0_1) @r1 @r1 <M>

    cmp && ^@r7 M @r4 ^@r2 @r3
    ldp @r1 ^@r11 @r6 @r4 ^*main @r12
    cmp @r5 u64 @r12 u8 (@r7/3)
    ldp @r12 ^M ^u32 <M>

    jmp ^u64 *main ^*block ^u64 <> ^@r12
    jmk ^<M> (@r11+1)
    jmk *block <M> && (^u64/0_2) (@r5+0_2)
    movk @r2 (@r1+0_2) ^@r8 (@r6/0_2) u64 u64 (&&+3)
    ldp (M+1) && ^@r1 *block <M> u32
    cmp @r12 M (u32+2) @r2 (^@r2/3) @r5 @r2
    ldp ^u32 ^@r12 @r12

    jmp u16 (M/3) <M>
    jmk *block ^u32 @r9 ^@r9
    @r2 *main <> ^u32 M @r4 u16 @r7
    ldp (u8/2) @r7 && *block (<M>/3) ^u16
    @r7 @r9 @r2 @r8 @r9 @r4 (^<>+0_2) @r1
    cmp ^@r9 <M> @r5 @r7 ^@r8 u8 (^@r6+2)
    lsl @r5 u64 (u64/2) @r6 @r7 ^@r11 @r12
    push ^@r4 @r10 @r2 <M> (@r3/2) @r6

    @r4 ^*main ^<M>
    ldp @r12 ^@r9 ^@r3 ^@r5 *block
    movk <> *block ^@r1 u32 <> u8 @r1
    mov @r2 <M>
    @r10 (^u8/0_1) @r4 ^@r8 u32 @r5
    ldp @r1 <M>
    movk @r10 M u32
    @r5 (<>+1) ^<M> ^*block (@r6+0_1) @r10 @r1

    @r11 @r5 @r1 (@r3/0_1) @r4 (@r2+0_1) ^@r7 *block
    movk (u32/0_2) @r8 u64 @r2

    @r7 @r10 <M> (^M/0_2) @r3 (u64/2)

    @r12 u32 *block <> ^*block @r10 ^@r4 u8
    mov M @r1 @r2 @r9 (@r7+3) ^u32
    @r3 u8 u32 *main
    dw @r7 <> <M> @r11 (u16+0_1) <M>

    ldp *block u8 ^@r8 u8 @r10 u16 (@r12/2)
    push u16 @r7 (@r4+1)
    @r11 && ^@r9 ^*block
    cmp @r11 @r2
    @r8 ^@r7 && ^@r8
    movk @r2 (@r11/2) u8 @r4
    push ^*block *block @r1

