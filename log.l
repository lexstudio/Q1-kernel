    jmp (<M>/2) @r11 <> @r5 ^@r4 @r4 &&
    movk ^@r11 @r5 &&
    push @r8 @r9 (^@r3+1) @r4
    jmp @r4 ^@r9 ^u32 (^@r3+3) M @r7 u16

    mov <> M *block @r10
    movk u32 u32
    movk ^u8 (^@r6+2) M u64 &&

    @r4 ^M @r8 (@r11+2) @r4 ^@r12
    @r1 @r8 @r1 ^@r3 @r2
    jmp (M+1) ^@r10
    @r6 @r10 @r1 u16

    @r6 @r5 ^@r9 @r9 (@r8+0_2) @r11 (u8+1)
    mov ^*main u32 ^@r10 <M> u8 *block *main
    mov ^&& @r2 (^<>/0_1) u64 @r5 @r12
    jmk @r5 <>
    push @r11 @r6
    jmk ^@r12 @r4 *block
    @r2 @r1 (@r10+0_1) M @r10
    mov ^u16 ^@r4 @r4 (u64/1) <M> (&&+0_2)
    push <> u64 @r2

    lsl (@r7/3) (u32/0_1) u32 @r4 @r12 ^@r10
    movk @r4 @r1 @r10 u32 u8 @r1 (u32/3)
    jmk (<M>/2) &&

    ldp M && @r11

    push *block (u64+0_2) u8 u64
    ldp u16 @r4 (^u16+3) u16 <>
    @r3 ^@r1 @r1
    ldp ^@r8 u8 u8 @r2 (^@r4/1)

    jmk @r8 @r8 M (^&&+0_1) @r5 @r4

    dw (&&/2) @r9

    lsl @r8 @r12
    ldp ^@r1 <M> (@r7+0_1)
    movk u32 (@r4/3) @r1 ^@r5 @r3
    cmp ^u16 (<>/1) u8
    jmk @r5 @r12
    mov (^@r6+3) u16 ^u64 ^@r8 (@r3/3) @r12 (&&+1)
    push ^<M> ^u64

    push @r7 u16 @r10 u16 u64

    movk (^<>/2) (@r3+3) u32 M (@r9+3)

    ldp @r5 ^u16 @r10 @r1 @r2 ^u8
    ldp @r1 (u64/1) *main @r10 @r8 (&&+1) ^@r1

    ldp ^<> @r7 @r9 @r4 <> u8
    lsl (@r2/0_2) <> @r12
    @r1 @r8 @r11
    @r3 @r2 M @r10 ^@r7
    mov ^@r12 ^<M> ^@r7 <>
    @r1 ^u8 ^@r12 @r2 @r7 ^@r12 (@r7+3)

    movk @r12 (^u64+3) ^@r11 && @r5 <>
    lsl (u64/3) <M> u32 u8 M <M> (u8/1)
    jmp (@r5/3) @r3
    push *main @r8 ^u16 u64 (@r5+1) @r9
    cmp && @r12 @r12 @r11 u32 (^*main+3)
    @r10 u16 @r8 @r11 <M>

    @r12 @r2 u64 @r1 @r3
    ldp <M> *block ^@r10
    mov @r3 @r12 @r12 (@r8+0_1) u16 (<M>/2) @r12
    cmp ^@r12 u32 (@r4+1)
    cmp (^@r1/0_2) @r5 @r12 (^M/2) @r7 (@r6+1) @r1
    cmp @r11 u16 && @r3 ^u16

    push ^u64 @r12 ^@r5 (@r10+0_1) (*block+1)
    cmp @r7 ^@r3 M u16
    mov @r11 ^@r12 (@r9/0_2)
    @r3 ^@r10 @r6 ^*main ^*main ^@r12 @r12 @r5
    push @r6 *main u64 u16 u32
    jmk (@r12/2) <> (u32+1) @r9 (^@r1/2) *main ^@r4

    ldp ^@r12 (@r7/2)

    jmp <> ^@r1 @r7 @r1 (*main+0_2) ^&& (u8/2)
    cmp @r9 @r3 && @r1 @r6 (@r2/3)
    lsl <> @r4 u64 *block *block <>
    @r10 @r7 &&
    @r1 (@r1+0_1) u8 ^@r8 @r4 (@r5/1) (@r2/0_1) *block
    jmk *main <> u16 u16 @r10 (*block+3) ^@r1
    @r6 u8 @r9
    @r7 (@r2/2) @r11 *main @r11
    @r3 u32 (@r8+0_2) @r8

    movk ^@r6 (@r8/1) *main (@r8/0_1) *main *main
    push @r6 ^@r12 ^@r10 @r11 <> @r3 *block
    dw ^@r9 u32 *block &&
    @r1 @r5 *main @r3 u32 @r4 @r7
    cmp ^@r5 ^@r7 u8 @r4 @r7
    @r3 u32 ^u64 @r4
    dw @r5 && u16 @r2
    cmp @r9 @r7
    movk @r3 ^*main @r1 u32 (@r1+3) @r4 @r7

    @r11 @r2 (u32/1) ^@r1 <> @r2 @r11 @r12
    jmk @r9 (^@r10+3) M

    cmp u8 @r11 (@r9/0_1) (@r6/0_2) ^u16 ^*main @r5
    jmp ^@r4 ^@r9 ^@r1 <M>
    @r5 @r7 u64 (^M/0_1) @r12 (<M>+0_1) @r6 ^<>

    dw @r1 @r9 M u8 *main

    @r2 @r10 <M> M @r9 ^u16
    jmk @r10 <> ^@r4 @r2 *block ^u64

    ldp (u16+0_1) *block *main @r7
    mov ^@r2 ^@r6

    @r11 @r12 *main ^@r10 ^@r7 (M+0_1) u16
    ldp (@r7+0_1) M @r7 ^*main @r1 *block
    dw @r5 ^@r8 @r9 && @r7
    @r3 (u32+0_2) @r8 M @r1

    @r1 @r1 (@r7+0_2) ^@r4 <M> @r7 @r2 @r4
    @r5 (@r2+1) ^u64 *main @r8

    jmk @r8 @r4 @r10 &&
    push @r5 @r12 (@r1+2) ^@r5 ^@r12 <> u32
    mov ^@r9 *block ^u16 @r9 @r7
    jmp *main ^@r1 u16 *block @r6 ^<>
    dw @r8 @r12 @r3 @r3 (@r2/3) @r4
    jmk u16 @r8 @r1 (@r3/0_2) (^<>+0_1) (@r6/1) @r3
    movk (^@r3/2) @r1 @r3 u32 ^@r6 @r2
    dw (^u16+0_1) @r10 @r4 @r11 u16 (<M>/1)

    push ^*block ^@r3
    push @r7 @r10

    lsl ^M *block @r11
    @r8 ^@r11 @r11 u32 (@r5+0_2) M @r9

    mov ^@r10 <M> @r7 (^@r1+0_2) @r9
    mov ^u16 @r7 @r3 (u8/1) @r5
    jmk @r5 <M> ^u64 M @r10

    jmk u8 u64
    ldp u8 @r3 (@r1/0_2) @r12 (<M>/3) (u32+1)
    push @r6 M @r11

    lsl ^&& (@r3+2) u16 ^@r2 @r6 (@r9+2)
    push @r11 ^@r2 @r11 u32 @r2
