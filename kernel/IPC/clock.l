entry:
    @r5 @r3 ^@r2 (u16/1)

    lsl u32 (&&/2) ^*block (*main+0_1)
    @r9 M ^*main @r2 ^@r11

    dw @r2 *block @r3

    movk @r3 ^*main @r3 && u32 (@r10+1) (^@r5/3)
    @r10 *main ^@r5 @r9 ^<> @r6
    dw M ^@r12 (<M>+1)

    dw @r8 (<>+2)
    @r1 u64 ^u8 @r9 (@r5+2) ^@r7
    @r7 u32 @r2 ^<>
    @r2 @r8 <> (u16+0_2)
    jmk @r2 (^@r1+0_1) ^@r4 u8
    lsl u16 u8

    movk (<M>+1) ^M @r2 @r2 @r10 ^*main

    @r4 @r6 ^@r7
    jmk (@r7/2) && @r10
    dw @r4 ^@r10 <M>
    movk @r6 @r6
    push (u8+1) @r9 *main u16 @r9
    @r7 *main (u32/1) @r5 @r7 @r4 u8 u16
    ldp @r1 <> @r4 (<>+3) @r11 u32 (@r9/1)
    mov @r12 u8 @r5 (@r1+0_2) ^u64 <> (^@r8+1)
    lsl @r10 @r4 (*block/0_2)
    @r5 ^@r12 @r4
    dw (@r10+3) && u32 @r1
    @r9 ^u64 @r7 *block (^<M>+2)
    push (^@r3/0_1) u8 @r10 @r2 u64

    @r11 @r9 @r11 <M> M ^u64 M @r5

    jmk @r6 && @r6 ^*main @r5 @r4 @r11
    mov @r4 @r8 ^&&

    @r9 @r4 @r9 @r6
    jmp ^<M> ^@r4 (@r9+0_1) <M>
    push @r11 u8 @r11 @r2 (*block/0_1) @r7 u8

    mov @r12 (<>+0_2) @r3
    jmk (^u8+1) u8 (@r2/1)
    dw u64 (^@r1+3)
    movk (*block/0_2) (@r5+1) @r2 <M> <> ^u64 @r7
    mov @r9 ^@r10 @r8 @r9

    lsl ^@r9 @r5 <M>

    cmp ^&& u16 u8
    cmp @r5 (*main/0_2) @r3 (u32/0_1) u32 ^u64 (@r10/2)
    @r10 @r10 @r12

    mov @r6 @r5 @r2

    @r8 ^<M> (@r3+2) ^@r10 (u64+2) ^@r8
    jmp @r10 ^u64 ^@r9 <M> u32 u32
    @r4 u64 @r12 *main (^@r7+0_1) u32
    cmp @r8 @r6 ^@r5 @r12 &&
    jmk u32 @r8
    mov (M+0_1) *main @r2 @r4 ^<>
    @r1 @r4 && @r5
    movk u32 u32 (u32/0_1) ^*main @r3 @r5

    @r5 ^M @r8

    @r3 u8 && *block

    dw @r7 && @r10 @r10 @r4 ^@r4 u64
    push u32 @r11 u16
    jmp @r10 @r4 ^u64 @r11 @r11 *main (^u64/3)
    mov @r12 u8
    mov @r7 ^@r9 *main @r2 *main @r4
    jmk (@r10+3) (u16/1) ^u16 (@r9+2) u32
    movk u32 u32
    movk <M> (^u8/0_2) ^*main @r8 ^@r3 <M> u16
    jmk ^@r7 (u64/2) ^&& <M> @r1 *block
    cmp ^<M> (*block+2) @r1 @r7 u16
    mov ^&& u8 @r8
    dw u64 (@r12+0_2) (@r12+0_1)
    @r4 u64 @r8 @r11

    ldp @r9 <M> @r12 @r12 @r12 ^@r4 @r6
    mov @r6 @r10 M u16 @r9 (<>/1)
    push <> ^@r11 @r1 ^u32

    @r10 @r7 (u32+1)

    push (@r6/2) *block ^@r10 ^u16
    lsl @r12 <M> @r4 ^u8 @r5
    jmp ^*block u32 ^@r5
    jmk ^M @r7
    jmp u32 u8 <M> @r8 u16 @r2 *main

    push @r7 M *block @r2
    jmk @r2 ^@r10 (@r12+3) @r11

    jmp @r5 ^*main @r3 *block ^@r12 <M> @r7
    mov <M> ^@r11 M ^@r9 @r4
    @r5 ^@r9 (@r6/0_1) ^@r8
    push *main u32
    movk @r10 ^@r7 u16 ^@r9 @r10
    dw && <M> (@r9+1) && M
    ldp @r4 *main @r7 <M> (^<>/1)
    jmp @r3 (@r4+1) @r12 @r8 @r8 ^@r2 @r9

    jmp @r5 @r9
    mov @r7 @r1 (*block+0_1) (&&+3)
    ldp (@r12/2) @r12 ^u32
    mov *block (@r9/3)
    push @r7 *block @r8 ^@r6 ^@r9
    @r3 (&&+2) (@r3/1) @r3 @r11 u8 u32 M

    mov (u8+0_1) && u64
    movk @r2 @r12 *block @r11

    movk @r12 @r10 ^*main *main @r1 &&
    cmp (@r6/1) @r10 *main *main @r3 ^*main ^&&
    jmp @r9 (@r11/0_1) u16 @r6 @r11 @r3
    cmp @r5 u64 @r7
    lsl @r4 u16
    ldp *main @r7
    movk @r1 @r11 @r5 ^&&
    dw @r12 @r4 ^<> @r11

    cmp @r2 (u8+3) @r11 u32 @r12
    jmp (@r1/1) @r2 @r7 @r6 u8 (*main/0_1) @r8
    @r12 @r8 u64 ^@r4 (@r6+2) *main @r9 (@r8+0_1)
    cmp ^@r2 (@r8/0_2) u8

    @r5 @r12 <M>
    ldp @r3 *block ^*block ^@r12 (M/0_2)

    push @r4 (u32/1) @r4

    jmk ^<M> @r10 (@r8/1) @r4 u64 (<M>/0_2) *main
    mov (u32/3) u16 @r10 u16 ^u16 && *main
    mov <M> @r11 && (<>/1) u16 ^&&
    jmk @r7 @r11 *block @r3 @r3 @r10 M
    ldp <> (^@r5/3) @r2 u16 u16 u16

    lsl @r10 ^@r9

    jmk @r6 @r10 u64 <> @r5
    lsl u64 @r4 @r9 u8 <>

    cmp @r10 @r1 && @r7 ^@r11 (@r12+0_1) *block
    mov @r7 @r12 && (@r3/0_1) u64 (@r2+3)

    ldp *main @r7 ^&& @r6 ^u16

    movk <M> (@r2+3) (^M+1)

    jmk && (u32/2) ^@r12 @r1 @r1 (u64+0_2) u64
    @r6 (^@r7/1) ^@r11 <M> @r2
    @r3 <M> <M> u32 (@r12+3) @r10 ^*block
    push @r11 <M>
    dw *block @r10 @r3 (<M>/1) ^*block @r1
    lsl M ^@r7 M @r9 @r7
    @r9 u64 @r2 ^u16
    dw @r7 (&&/2) M && u32 @r6 ^@r5
    movk @r3 ^@r1 ^@r8 u8 u16 ^&& ^<>

    jmk (<M>+0_2) <> (@r1/0_1)
    jmp @r5 @r12 @r9

    dw (u16/3) && (^@r8/0_2) @r10 && u16
    ldp @r3 @r9

    @r3 *block @r2 @r12 ^u8 u32

    @r1 u16 (u32/0_2) @r9 u8 @r5
    dw *main (@r7+1) ^u16 (*block+1) @r3

    push @r3 @r11 *block u64 u16 @r7 (u8+0_1)

    movk && <M> u16 u32 &&

    ldp @r6 ^&& *main M
    mov u64 u8 ^u16 @r3 @r7
    dw @r5 @r6 *main (^@r7+0_2) @r7
    push (@r4/1) @r10 @r12 @r5
    @r10 @r12 (^u32+0_1) @r10 ^@r8 (&&/0_1)
    @r10 (*main/2) <M> @r1 <M> <M> ^u64
    jmk ^*main @r5 @r11 @r8 <> @r4 (@r3+2)

    jmp @r5 ^@r5

    cmp u8 M <>
    @r6 @r9 @r4 M <M>
    jmp M (@r2/0_1) (@r7/0_2) ^@r4
    @r3 @r12 ^u8 ^&& @r8 ^@r10 (^@r10+1) @r9
    push u8 ^@r10 @r12 @r8 *main

    @r5 u16 (@r11/1) (^@r3+1) @r12 u32 @r9 u16

    movk ^@r6 @r10 <M> u16 @r5 ^@r6 @r9
    dw *block @r7 ^&&
    lsl @r4 (^@r4/0_1) @r6 && M *main

    jmp (@r4+2) @r7

    @r5 @r10 @r4 <>

    ldp @r4 @r3 ^M ^*block *main

    @r8 ^@r3 (M/0_2) @r7 @r5 u8 (@r10+0_1)
    lsl ^u8 @r3 @r6
    @r7 @r9 <>

    movk u64 @r4 ^@r8 (^@r6/1) @r10

    jmk ^@r7 (^*block+2) (<>/1)
    @r8 u32 *main @r2 <M> <M>

    mov @r2 @r9 <M>

    @r12 @r7 u16 ^@r2 @r12 *main u32
    ldp <M> ^@r3 @r6
    mov u64 *block &&
    lsl @r12 @r10 @r9

    ldp ^@r3 @r9 @r1 u64 u32 <M> @r9
    movk *block ^@r11 @r12 ^@r4 @r12 (^@r11+1) @r11
    ldp ^&& @r8
    lsl *block u64
    mov <M> *block
    movk @r12 M *main @r11 u8 @r4 @r8

    ldp @r11 ^<> (u64/2) (@r11+0_1) @r6

    jmk (&&+1) *main @r1 ^@r7 && *main
    dw @r3 u32 u16 @r12 @r1 <M> *main
    mov (*main/1) (u32+3) u64
    push M <> u16 @r1 u8 M

    mov @r4 (@r9/2) u64 (<>+3) (u16+1)

    dw @r1 u32 &&
    jmp ^@r12 u8 (@r8+3)

    jmp @r1 @r12 u8
    dw ^@r2 @r12 (^@r9+1) @r6 @r9 @r2

    cmp (@r1+2) @r1 ^u64 <> (@r3+0_2) <M>
    @r12 && && && (^<>/0_1) *main

    cmp @r9 (@r1/2) <> *main
    dw ^@r2 @r7 (^@r2+0_2) u16 u8

    jmk <> ^@r1 ^@r7 @r5 @r4 u8 ^@r10
    jmp ^@r3 @r7 (^@r3/3) @r10 @r1
    cmp @r11 @r11

    jmp && @r5 @r3 (M/0_2) ^u32 ^*main u64

    push *block u16 u16 (^u16+0_1) @r2
    jmp @r9 @r6 (u8+2) u32 *block @r7
    push @r12 *main @r4 @r9 @r6 (@r8+3)
    dw *block @r8 ^@r3 u16 (^@r11/3) @r5 ^@r1
    push @r2 u16 ^u64 ^@r11 (@r6/0_1) @r6 @r8
    cmp (u16+0_2) ^@r12 @r12 *main *block (@r12/0_1) (@r6/0_1)
    push M (^u32+2) ^@r5
    ldp (@r6/0_2) *main ^*block *main
    jmp u64 u32 (@r9/3) @r2 (@r12+3) @r12

    @r7 (^*main/1) ^@r1 ^*block

    jmk @r8 ^u16
    lsl (^M/0_2) @r1 ^*main

    lsl (@r4/2) ^@r10 (@r12+0_1) @r6 u32 ^@r7 @r7

    cmp ^@r10 @r6

    movk ^u8 (<>/0_1)

    @r12 @r4 @r5
    jmp u64 u8 @r1 @r8 (@r12/2) u64 u64

    mov @r12 @r11 u8 *main

    @r1 @r9 *block

