entry:

    mov ^M @r10 @r2 @r6 @r3

    movk *main && @r9 @r1 (@r7/2) (@r10/3) @r1

    mov @r2 ^&& u16 @r9 @r11 @r1
    cmp @r12 && (*main+0_2) && && (^u8/2) u64

    cmp @r3 ^*main
    lsl @r2 <M> u8 @r3 M
    jmp @r2 *main @r8
    lsl @r9 (u64/0_2) u16 @r7 *block

    movk ^@r7 @r12 (u16/3) (u8/0_2)
    dw ^@r5 @r9 u16

    ldp ^u32 <M>
    @r4 ^u32 ^@r8 @r5 u32
    jmp @r11 <> @r2 && ^<M> ^@r10 ^<M>
    push *block *block @r12
    @r9 <M> u64
    @r12 u16 u16 @r1
    push (@r3/1) && ^@r7 @r3 u16 (^@r7+0_1) (u32/2)
    cmp ^M ^<M> @r8 u8 ^M <>
    @r4 *block @r7 *main ^@r12
    ldp ^*main (@r9/1)

    movk @r10 <> (*block+0_1)
    ldp ^@r4 (M/0_1) @r12 ^&& <M>

    movk ^@r1 <M> @r9 @r11 @r4 @r4
    push @r10 ^@r3 @r8
    @r2 u64 u16 ^u8 <> (u8+3) ^@r9
    @r11 (@r12/3) @r10 @r10 u64 ^&&

    @r3 (@r7+1) @r3 ^@r11
    mov <> @r1
    ldp ^@r3 u32 @r7
    @r2 u16 (u8+2) @r2 u64
    jmp @r4 <> @r5

    jmp @r2 (^@r11+0_1) @r7 u8
    @r4 @r2 <M> ^@r7
    dw @r9 (@r5+0_1) u64 ^@r2 ^u64 @r1
    push && @r4 (@r7/0_1) M
    dw *main <> @r4
    @r4 ^&& && u16 (^@r4/3)

    movk *main <> (@r3/0_2) ^*block
    jmk *block @r3 ^@r4

    @r7 ^@r10 @r5
    push u16 ^@r12 @r5 (@r8+1) ^*main
    cmp M ^@r5 @r12 (^@r1/2) u16 (@r12/0_2) @r12
    lsl @r4 ^&& (@r7+0_1) ^@r9 u32 u32
    @r9 <M> ^@r10 @r8
    jmk u32 ^@r11 u16 @r12 @r5 *block (&&/0_2)
    ldp && @r10 @r12 (<>+0_1) @r12 ^M

    @r1 ^M *main (@r4/1) @r11 u16 *main

    dw <M> && @r8
    lsl && u16 ^u32 *block

    @r6 ^<> @r10

    cmp @r2 @r5 @r11 @r12 (@r12/1) ^&& ^@r1
    dw ^*block @r11 u8 @r12
    ldp *block ^@r8 ^@r5 @r1 u8 u16

    @r7 @r10 @r7
    dw M @r12
    dw ^@r6 && ^@r8 @r8 <M> @r8
    @r8 @r4 @r5 @r5 @r11 (@r11+3)
    push @r11 u64
    ldp u16 ^u64 *main @r12 u32 <>
    mov ^@r9 u8 @r12 ^@r2 (M+0_2)

    push ^@r5 @r4 (^&&/3) M
    cmp ^@r12 (@r10/3) <M>
    cmp <M> u64

    @r5 @r5 <M> (@r2+1) M (@r12+0_2) ^*main
    lsl (u32+1) (@r2+3) (@r11+2) (@r4+2) (@r12+0_2) ^&& (^u64/3)
    push @r12 @r12 <M> <M>
    @r7 (@r10/3) ^<M> @r7 &&
    cmp (@r11+0_1) u32 (@r9/2)
    jmp @r1 @r4 @r2 u16 @r5 &&

    jmk M u32
    dw @r12 ^u32 @r12 @r11
    @r11 @r9 @r12 *block (@r1/0_1)
    ldp (@r2+2) (@r12+0_2) @r8
    lsl @r8 @r12 (@r12/1) && @r3 u8
    push @r3 @r8
    movk && *block (<M>/2) ^u32 @r9
    push ^*block M @r7 @r3 @r4 @r12 u32
    @r2 (@r1+3) ^@r3 *main

    jmk ^<> *main (@r4+1) ^<M> u8

    jmp u8 (@r7+3) @r1 *main @r6 u32
    @r8 u64 <M>

    ldp @r3 @r4 *block @r8 @r3 (@r6+1) ^u8
    lsl ^u16 @r2 *block
    @r1 ^@r12 @r5 u8 ^@r7 <M> ^*main u16
    lsl @r7 @r5
    push @r11 ^@r5 @r7 u64
    movk (@r5/1) && <> u32 u64
    movk @r7 @r8 (@r5/1)

    jmp u16 ^@r2 @r6 @r2 u32 @r9
    jmk ^@r7 @r3 M u16 ^@r10 ^@r1
    jmp && ^@r2
    @r2 (^u32+2) @r3 M @r6 @r7 u32 (@r2+0_1)
    jmp <> @r5 u32 ^u32 ^*main
    @r4 (^@r5/1) @r4 ^@r12 @r9 <M>

    cmp M (&&/3) (@r4/0_1) <M> @r6 u8 *main

    jmp @r1 && ^&& @r8 u8

    push *block u32
    cmp (u16+0_1) @r8 @r1 ^<>
    dw @r5 u8 (*block/1) u32 ^@r1 u16 @r12

    dw @r2 ^&& ^u8 @r9 @r7 u16
    cmp @r5 ^M @r5 u16 ^@r12 @r6 @r2
    @r8 M @r8 @r8 @r12
    jmk && @r1 *main (@r12+2)
    movk *block ^@r4
    dw ^M @r6 ^@r6 (^@r1+0_1)
    push @r1 @r3 ^&&
    @r6 <M> @r10 @r5 ^@r2 ^*main ^@r1
    mov @r8 @r1 @r1 u16 @r6
    push u32 && @r6 @r7 @r12 (@r12/2) ^<M>
    mov (u32/2) ^@r6 @r11 @r8

    ldp u8 <M> (@r6+0_1) @r10 @r6 ^<M>
    jmk @r8 @r10 *main @r3 u8 u16 (@r6/0_1)
    push ^@r12 @r3 (*block/1)

    @r11 *main @r7 @r11 @r7 <> @r10 @r7

    lsl && u16
    mov @r2 @r4 @r6

    jmp @r6 ^<> ^@r10 @r6 ^@r7 ^M
    @r7 @r3 @r10

    cmp u16 ^@r12 ^@r7 ^u8

    mov @r8 (@r3+1) u8

    mov ^@r10 @r1 M @r6 u64 (M+0_2)

    lsl u32 @r8 *main
    mov (^@r10+3) ^&& u32 @r1 ^@r6 @r1 ^@r6
    cmp (u16/2) *block && (@r7+2) @r10 ^*block ^u32
    movk ^M @r2 @r3 ^u64 ^*main

    @r7 ^*main @r9
    mov && ^&& @r1 <M>

    dw @r7 @r8
    ldp M @r3 (u64/1) @r7 (M/0_1) ^@r5

    jmk *block @r9 ^@r12 ^&& @r4 u32
    cmp @r5 @r1
    jmp (^*block/2) u32 u64
    lsl ^u64 @r3 <M> ^@r9 ^@r10 *main <M>

    @r8 ^@r11 u16 M u64
    movk ^@r12 @r5 @r7 u32
    @r9 (*main+1) @r2

    @r12 @r11 @r1

    mov ^*block @r4 (<>+1) <M> (@r9/1) (^M/0_2) (^M/0_1)

    dw ^*main *main @r1
    jmp @r6 ^u8 ^<M> @r1 (*block+1)

    mov u16 @r1

    movk M (@r9/3) ^<> ^@r4
    ldp (&&/2) @r1 u32 ^@r4 u32
    push u64 u8 <> @r10 <M> @r1 *block
    movk (M+3) *main @r4 @r10 @r8
    @r11 @r3 (<>/0_1) @r2 @r5 (@r7/0_2) ^<> (@r11/0_1)
    jmk u32 @r10 && @r7 u32
    dw @r6 @r6 u32 (@r9/3)
    jmp @r11 @r6 ^@r10 ^@r1
    mov (@r10/3) (@r9+3) <>

    jmp @r11 && @r2 u16 (@r4/0_1) && u16

    mov u32 @r4 @r7 @r1 ^@r7

    jmk @r4 && @r6 ^u8 (^@r11/1) @r11

    cmp u16 <> @r2 (@r10+1) && M ^@r9

    @r10 @r11 @r10 (@r12+0_1) @r12 *main
    lsl @r4 (@r7+0_1) @r8 @r10 @r6

    dw (^@r11/0_2) u16 <> <> (^u64/1)
    mov @r2 @r3 @r12 @r3 @r8 u16 @r10

    jmp @r11 @r7 @r5 @r10 @r5 (&&/2) ^*block
    mov (@r4+1) @r9 ^u32 @r12 ^@r8 ^<M>

    mov @r12 <> @r1 @r1 *block

    cmp (@r4/1) (@r12+3) @r3 M
    jmp u16 u16 (^*main/0_1)

    movk u64 ^u32 @r11
    mov @r6 @r12
    jmk && @r1 ^@r6 u8 && @r7
    dw @r6 (&&/0_1) ^@r2 ^@r11 (*block+3) *main
    movk && @r11 @r11 @r8 *block (@r4/2) &&

    dw u32 (&&/1) (@r2/3) @r2
    cmp @r6 @r11 @r12 u64 u64 u64
    mov ^u16 ^*block *main @r10

    cmp @r7 (M/1)
    movk (^@r6+1) @r2 @r10 @r4 @r7 ^@r11
    jmk ^@r12 @r3 (@r4/3) @r10 u32 && @r3

    @r11 @r10 @r2 (u32+2)
    @r8 @r10 ^u32

    ldp *main *main u64 M ^@r10 ^@r9

    mov (@r12/1) ^u32 @r5
    lsl @r10 (<>+3) ^@r8 @r11
    @r6 *main ^u32 u32 @r7 && u32 (@r2+1)

    cmp @r8 ^@r5 @r8 M @r10 M &&
    push @r12 @r9
    @r8 (<M>/2) @r11 (M/1) u8 u16 <M>

    ldp M @r12 u64 (@r5/0_1) M
    jmp @r10 @r12 (@r12+0_1) (<M>+2) @r5
    jmk (M/0_1) *block (u8+2) u16 @r6
    movk @r5 @r1 u16 u16
    lsl ^@r10 ^@r9 @r7 M @r3
    @r6 @r12 u16 (*main+2)
    push ^*main (^M/3)
    lsl @r9 @r12 @r8 @r6 (@r12+2) @r4

    lsl ^@r5 @r5 && u64 u16
    mov u32 <> ^u16

    dw @r11 u32 u64
    ldp @r6 <M> *block @r5 *main *main

    jmk @r11 <M> ^<> @r10 u64 @r5 ^@r10

    movk @r1 (@r3+2) (*main+0_1) <>
    @r5 @r4 (@r1/0_2) ^@r7 u16 *block
    @r8 (u32+1) @r7 u8
    ldp (@r5/0_2) M @r12 u64
    jmp ^@r2 @r8

    @r12 (@r8/2) @r11 @r2 @r6 M (M+1) (M/0_2)
    dw ^M (u8+0_1) u16 (@r4+3) u8

    @r10 ^@r8 *block u64 @r4
    dw *main (@r12/0_2) u8 u32
    jmp <M> && @r8 @r4 *main ^@r6 <M>
    dw @r10 <M> @r4
    @r11 @r5 <M> u64
    dw u8 <M> @r10 *block @r12
    ldp u8 @r7 @r12 @r4 (^@r2+2) @r1 @r4

    dw @r2 @r12 (@r3/2) @r4 @r6 @r7 @r8
    jmk @r5 @r10 u8 (u32+0_1) @r6
    movk @r2 @r6 @r6 ^@r3 u16 &&
    cmp @r8 @r3 @r10 *block @r8 <> @r7
    dw *block (@r11+1) *main (&&/3) ^@r10 @r10 @r9
    lsl ^<M> ^u8
    mov @r3 ^@r2 @r1 M ^@r10 <M>
    ldp u32 && <M> u16 @r8

    movk ^@r4 @r10 *main @r3 @r2
    jmp u64 (@r10/0_1) @r3 *main <> @r5 @r5
    mov (u64+0_1) ^@r2 (<>/2) ^<M> @r7 ^@r9 (@r5/0_2)
    ldp (*main/1) @r11 <> @r10 @r10
    jmk M @r12 *block
    @r3 *block @r8 && @r3 ^@r2 (u64/0_2)
    lsl @r1 @r12

    mov M ^@r2 @r10 ^<> *main
    movk u16 u64 (u16/0_1) @r8 ^@r6 @r11 u64
    lsl @r2 @r12 @r4 @r8 @r11
    push ^*main (^&&+3) <M>
    ldp ^*block @r12 u8
    push @r5 @r12 @r11
    dw @r8 (u64+0_1) (^@r11/0_2) (u16/0_2) @r7 (u64+1)
    jmp ^@r12 <M> (@r9+0_2) u32 @r2 u64
    @r3 @r7 @r2 (@r10/2) u8 u64
    @r2 (@r3/0_2) @r1 @r1 && && @r12

    movk @r9 ^@r2 @r10 @r4 @r5 ^@r6 @r12
    ldp u16 ^u64

    @r1 <M> @r5

    @r4 u32 @r4 *block u16
    jmk (u32+0_1) @r10 @r8 @r5 @r9
    push ^&& @r6 u8 ^@r5 @r7
    dw @r8 (@r6/0_2) u16
    @r1 M u32 @r11
    jmk @r3 M u16 (^u16/0_2) <> @r11
    cmp (@r10+0_2) @r12 u64 <> @r8 *block @r9
    jmk @r1 @r8 <> (^u64/0_2)
    @r1 @r12 ^u16 u64 <M> ^&&

    mov ^*main @r9 u64 @r1 (@r4/0_1) @r10 <M>

    dw <M> u32 @r7 @r8
    ldp ^@r7 @r3 (@r5+0_2) (*block+1)
    jmp @r1 @r11 @r11
    @r9 <M> u64 (<M>/1) ^<>
    dw u64 (u32/1) *block <> <> ^M *main
    @r12 (&&+1) @r6 @r3 <> ^u8 *main u64
    @r2 ^@r9 @r10 (*main/3)
    push <M> *block u32 @r10 <>
    dw <> (u8+0_2) ^*block @r11 @r7
    movk @r1 ^@r3 ^<> @r4 @r2 @r6

    push ^u16 ^@r2
    jmp @r11 ^@r8 @r3 @r1 <> ^@r7 u16

    movk u16 ^M @r10 u64 M (@r11+1) @r1
    dw *main (u64/3) u64

    ldp @r8 (u32/0_1) && (*main+0_1) && ^u16
    movk @r2 u8 ^@r4 @r11
    jmp *main @r2 ^u8 @r8 (@r4+1) <> @r1
    @r8 @r11 u8 @r6
    push ^&& (^@r11+2) ^@r12 <M> *main @r9 ^*block
    @r10 u32 ^@r7 @r6 *block (u64/2) (^@r1/0_1) @r11
    mov (^@r4+1) @r8 @r7
    lsl @r11 @r3 @r7

    jmk @r9 *main @r10
    ldp ^@r5 <> (<>+0_2)
    cmp @r7 (*block+0_1) ^&& ^@r8
    dw u64 <M> *main
    @r2 && @r7 @r10
    movk M @r6 @r4 (&&+0_1)
    lsl @r1 ^<> @r1 *main @r8 (@r3+0_2)
    push @r11 *main (^M+3) ^<> u32 ^M <>

    dw *block ^@r2 ^u32
    dw <> (@r11/0_2) u64 ^@r2
    ldp @r4 (M+2)
    dw (u32/3) (@r8+3) @r6 ^@r4 @r6 ^@r3 (@r9+0_2)
    movk u32 <M> @r9 (<>/1) @r12

    push @r8 u64 u8
    @r9 ^@r11 *block (@r8+0_1) u16
    lsl (^u64/2) (@r12/1) <> (M/3)

    jmp <M> @r7 u64 @r5 (@r12/1) (@r7+3) ^@r9

    push @r3 (@r9/2) @r5 @r12 @r6

    lsl ^@r7 *main u64

    dw u8 ^<M>

    @r3 (^u16+0_2) u8 (*block/0_1) u8

    @r9 ^u64 ^*main (*main/1) (@r7+0_2) @r8 @r6
    mov (@r5/3) (@r11/2)
    lsl ^*block @r10 M
    mov ^@r11 ^@r9 <M> (<M>+3)

    jmp u32 @r3 ^@r3 (@r6/3)
    @r7 ^@r4 u8 (@r9+1) ^@r5 u32
    @r10 @r4 ^<> u32 (u32+0_1) @r3

    @r2 *block (^M/3) (@r11/1) (&&/0_1) @r5 @r6 @r2
    push @r4 && M

    lsl <> @r9 (@r6/0_1) @r3
    movk @r7 @r10 ^u8 *block <>

    @r6 ^<> ^@r12 @r6 M
    jmp @r11 @r6 @r8 (@r5/1) @r5 @r6
    cmp @r4 *main u8
    @r9 u32 @r4 ^&& @r11 u16

    push @r6 @r10 (@r8+3) *block ^&& u32 ^&&
    @r12 @r5 @r12 @r9 && (<M>/0_1)

    movk @r9 && (@r12+1) (^@r8+0_2)

    ldp @r3 u16 @r8 *block

    cmp (u32+0_2) <> (@r11/0_2) @r10 M
    @r6 @r2 (&&/0_2) @r3 ^<> <>
    push <> @r9 ^u32 @r11 @r7
    push @r6 u32 u32 @r6 *main ^@r4
    cmp @r4 ^@r6 (u16+3) *block &&
    cmp @r2 @r2 @r4 (@r12+2) M @r12
    movk @r10 M (@r12+1) (@r2/1) u64 @r3
    ldp ^&& @r10 ^<M> (@r1/2) u8 *block
    jmk @r9 && u32 @r4 (^u32/0_2) @r1 @r7
    movk ^M (@r1/0_2) <> ^@r1 *main @r5
    lsl (@r4+2) && u8
    cmp u64 (&&/1) u16 @r12 u16 (^M/2) @r6
    dw u64 (u64+1) <M>
    cmp @r5 (^@r12+3) (@r1+0_1) ^u8 M (u8/0_1)
    @r6 <> @r7 && @r9 u64 (^u64/0_2) ^u32

    push u32 <M> @r9 @r4 @r7 (@r6+2)
    jmk u16 u8 @r12 @r10 @r12 @r1
    dw @r1 @r10 M (u64+1) u16 @r8 <>
    lsl (^<M>/0_2) @r10 @r8 *block ^u32 @r2
    lsl ^*main ^u8
    movk <> @r1 (u32/0_2) ^@r6 u8 u16 @r3
    @r11 (@r6/3) @r4 M @r11 u32 <> *block
    push @r11 (^<M>+0_2) @r8 M <> @r1 (@r1/3)
    movk ^*main @r8 @r2 @r4
    dw @r4 *block ^@r8 @r6 ^u16 (^@r11+0_1)

    @r7 ^*main ^u64
    @r7 (*block/2) (@r1+3) u32 u32

    @r4 (@r5+2) @r11
    mov <> @r5
    jmk @r7 @r11
    ldp @r5 (@r3/0_2)

    @r1 (<>/0_1) ^@r2 @r4 u16 @r10
    @r4 M <>
    movk <M> ^@r12 @r6 ^@r10
    jmp ^*main @r1 <> M (u16+2) (u32/3)
    lsl u8 @r7 <M> @r7
    jmk @r3 && u32 @r1 @r3
    movk ^<> (u32+2)
    dw u64 u8 ^@r8 @r7 M @r9
    jmp ^@r1 @r3

    cmp ^M ^@r9 @r10 <> <M>
    jmp && @r11
    @r6 <> @r10 @r10 ^@r7
    cmp (u32/1) ^@r3 ^@r12 @r9
    jmk @r11 ^&& @r6 @r1 ^u16
    jmk @r8 ^@r3 @r10
    ldp u16 @r4
    jmp (*block+3) @r10
    cmp ^M ^@r7 u8 @r1 u16 <> (&&/3)

    dw ^@r5 @r12 @r12

    jmp @r11 *main
    dw u8 u32
    lsl u32 @r4 @r12 (@r7/0_2) @r8 @r5 @r9

    lsl (@r4+0_2) @r4 @r4

    cmp && @r7 (&&/0_1) @r1 (@r2+3) @r6 <M>

    jmp *main u16 ^@r8 ^@r7
    movk @r2 @r6 *main @r4 ^@r9 @r7 ^<>

    lsl (@r11/0_2) @r8 (^@r4+3) *main @r11 @r6
    jmk @r7 ^u8
    lsl u32 (@r6/1) @r6 @r12 *main u16

    dw (^u64/1) @r11 M M @r9 (@r9/1)
    @r9 <M> @r1 (^<M>/1) u16 @r3 @r9 (@r9+3)

    cmp @r5 <M> @r10 (^@r9+0_2) ^@r8 ^@r2 (@r9+3)
    jmp @r3 @r12 (@r3+3) (^M/3) *main
    @r10 <> <> u64 ^u64
    push <> @r3 @r4 ^u64 (@r1/3) @r3 M

    dw u8 (<>+1)
    @r4 *block ^@r10 (u64+0_2)

    @r6 ^@r5 @r11
    jmk u8 (^M+1) (@r3/1)
    dw (@r2+0_2) (@r8/2) @r1 @r8 @r2 && *main
    @r2 <> (^@r5/1) ^*main

    jmk u64 *main (&&/2) (@r4+3) <M>
    lsl @r9 <M> u16 u32
    jmk M @r9 *main (@r9+0_2)
    movk @r3 (u8+2) &&
    mov (^@r5+1) ^&& @r12 u32 ^@r7 @r8
    dw <> @r1 *block ^@r12 @r1 u8 @r5
    ldp *block ^@r6 ^@r10 ^@r7 @r3 *block ^@r1
    push u64 && @r2 ^M @r9 *block
    @r8 (^@r11+3) *block (<>/0_2)
    cmp @r6 (@r5/2)
    mov && u32 (^@r8+1) M
    @r4 && @r1 (^@r7/0_1) ^@r6 ^@r4
    lsl u8 @r12 @r5

    lsl ^u8 ^M @r4 u16 ^M
    ldp u8 @r6 ^@r12 ^u16 *main
    ldp (@r3/2) u16 ^<> ^@r1 ^<>

    movk <> ^M @r8 u64 <> @r3
    mov @r3 ^@r11
    jmk @r10 M ^M @r7 (@r3+0_1)
    dw @r3 *block (u64+2)
    jmp ^@r9 @r6
    ldp (<>+0_2) @r5 *block &&

    movk u32 u64 @r10 *main @r8 @r7
    push @r5 @r6 (u16+1) M (^@r7/1) <>
    lsl && *block u16 @r3 *main <>

    @r9 ^@r11 (@r6/2) ^u64
    jmk *main @r8 && @r6 @r4
    mov <M> (u32+1) M
    @r3 u32 ^*main *block @r9
    jmk *block (@r7/2) ^*block ^@r9 && ^@r9 @r4

    dw u8 (*main/0_1) @r5 @r5 @r11 @r7

    jmp M ^<M> *block
    movk ^u32 @r11 (@r3/0_2) @r6 <M>
    dw (@r6+0_2) @r3 ^@r1
    jmp u64 *block

    lsl @r1 @r3 ^u64 <M> ^@r7 ^@r5
    @r7 <M> @r10 <M> <> @r4 @r4 *block

    push @r11 @r5 <M> <M> ^@r7 && &&
    dw ^@r8 @r5 (u64+3) u64 u32 @r11
    mov @r10 ^@r12 ^M (^u64+0_2)

    @r5 u64 @r9 ^@r11 @r12 @r12
    cmp @r2 ^u16 &&

    lsl *block @r5 u64 <> ^@r4
    dw <M> ^*block && ^M
    movk (@r8+2) <> @r9 ^<> @r9 u64 @r10
    movk @r9 && M ^<> <>

    dw u16 @r3 @r11 u64 (@r9/1) *block
    @r10 @r3 @r3 u8

    movk @r8 (&&+0_1) @r11 @r4
    movk @r7 ^u64 ^@r7 @r1
    @r2 @r5 u16 @r10 (&&/1) (@r9/1)
    push <> @r1 <M> u64 (u8+0_1) @r4 u16

    @r7 @r12 <M>
    push u8 @r8 *main ^@r11 @r9
    jmp @r4 (&&/2)
    jmk @r2 u32
    jmk ^&& (^&&+3) (@r1+0_1) (^@r7/3) &&

    cmp @r9 (@r12/0_1)
    mov @r12 u16 u16 (^@r10+1) @r11

    @r5 @r7 @r2 <M> ^*main

    @r10 && @r10 @r7 (@r3/1)
    @r11 ^@r4 ^<> *main <M>
    mov (&&/1) (*block+1) @r4
    @r1 @r11 @r7 @r11 @r12 u16 @r6
    ldp @r8 u32 @r7
    @r4 <> ^@r1 @r6

    jmk u8 u64
    movk M ^u32 @r11 @r12
    mov @r3 @r3 M && @r2 <M>
    mov u32 @r5 @r9 *block u32
    mov @r8 @r12 &&
    @r9 (u8/2) @r12 *main
    jmp u16 @r1 <M> @r9 ^@r4
    cmp @r8 ^@r1
    dw ^@r1 (*main+1) (^@r12/0_2) ^<>
    jmk @r6 u64 (u32+3) @r9 *block @r6 (@r5+0_1)

    @r2 ^u16 *block @r10 @r9 ^*main @r6 @r12
    lsl ^<M> <> @r6 u32 (&&+1)

    @r1 ^u16 ^*main

    jmp (*block/2) ^@r5 u32 && u32 ^@r10 u16
    @r3 @r1 @r2 u8 ^<M>
    mov && @r9 @r10 ^@r1 @r10 u16 @r3

    mov @r1 @r7
    jmp (<M>/3) @r4 @r2
    movk ^@r3 u16 M @r5 @r7
    jmk M (*main+2) <M> u64
    lsl (@r9/0_1) @r11 @r3 u16 <M> (&&/2)
    movk @r8 *block && M @r6 ^@r3
    mov (*main/1) @r11 @r4
    movk M ^u64
    ldp (^@r12/1) (^*main+2) u32
    jmp @r9 ^@r12 (@r9/0_2) ^*block @r9
    @r12 @r8 u32 && M @r2 @r7

    mov (^*block/0_1) @r1
    dw ^<> @r10 @r2 && ^@r7
    jmk u32 <> u32
    jmk ^u16 *main @r12 @r12 @r3
    movk (<M>+0_2) ^&&
    lsl && @r12 u64 @r10 @r12 ^u64 @r3
    dw ^*main @r1 @r2 @r3 && @r10 @r6
    movk @r2 ^@r5
    ldp @r8 (@r7/0_2) u16 *main u16 ^*block ^<>
    ldp *block @r10 ^u8 (@r11+1) ^@r12 @r7

    jmk @r7 (*block/1) u64 @r11 @r2 @r9 (*block+2)
    dw @r3 (<M>/0_2)

    cmp ^<M> (u64+2) ^@r10 @r10
    lsl (@r12+1) @r7 @r2 (@r9/2) (@r1/1)

    jmp u32 @r8 && (@r2/0_2) u8 M u16
    mov @r6 (*main/3)
    mov @r2 ^@r11 u32 *block ^u32 u64
    movk (@r6/3) @r6 u64 u8
    ldp u16 (u8+0_2) (^@r6/3) @r4 ^@r10
    jmk (<>+0_1) *block (@r7+0_2) u64 ^*main @r11 @r7

    @r10 u16 *block ^@r8 <M> ^@r7 u8

    jmp u32 @r10 u8 @r12
    cmp (@r12/2) u16
    cmp @r8 (^@r9+0_1) @r2 @r9 (^@r12/3) @r12 @r7
    lsl u32 @r5 @r3 @r11

