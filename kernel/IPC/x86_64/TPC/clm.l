    cmp *block ^<> u32 <> @r8 *block

    @r2 M <M>

    push @r6 && u16 (u32/2) && *main (@r3/3)

    ldp <M> *main
    push @r12 ^@r11 (&&/2) @r9

    cmp ^@r11 @r4 ^M *block
    ldp <M> (&&/2) @r8 ^@r9 @r9
    lsl @r4 *block @r4 (^<M>/3)
    movk ^@r2 @r5 ^@r3
    jmk @r5 u16 <> @r1 ^<M> @r11
    movk (@r8/1) @r1 (*block+2)
    movk @r2 @r8 ^@r3 @r10 (u16/3) u8

    @r7 u32 M (u16+2) ^*main u16

    dw @r1 ^@r1 @r1 ^M @r7 @r9
    dw @r10 u8 ^u16 <> u32
    @r2 @r10 @r12
    jmp u64 @r8
    movk (@r7+0_2) (@r1+1) <M> *main && u32 &&
    dw u8 @r10 u16 @r8 ^@r11 M

    push && @r7 u8
    movk ^@r11 @r6 (@r5+0_2) u64

    ldp (^@r3+0_2) @r2 u16 ^u64 @r8 @r6
    mov @r2 <M>

    ldp <> && M

    cmp *block (@r6+1) (@r8+3) @r11

    @r9 @r6 @r6 ^<M> @r5

    cmp *block M (u16/1)
    @r5 @r2 @r6 ^@r6
    ldp (@r7+3) u64 @r7
    jmp (@r7+0_2) (^@r3+1)

    movk (^<M>+0_1) <M> (@r10/2)

    dw @r3 @r8 ^&& @r5 ^u64
    jmp u32 u16 *main @r12
    push u8 (M/0_2)
    dw <> *main @r2
    lsl u8 (@r3+0_2)
    lsl ^M ^*block u64 @r3 <M> (^u16+0_1) M
    cmp @r1 @r9
    jmk M && @r1 <> @r3 *block
    @r1 <M> *main @r3 ^M

    lsl *block u32 @r8

    movk u8 <M>
    ldp M (^@r4/1) @r5

    mov @r5 ^@r6 @r10
    jmp <> @r5 u64 ^@r2
    movk (@r7+3) ^@r11 u8 @r8 &&
    jmk <> ^@r4 (@r1+2) (M/0_2) (^@r8+0_1) @r1
    cmp <> @r10 (^u8+2)
    @r2 @r12 ^@r3 @r3 <M> @r1
    ldp (@r3+1) @r7 <M> ^@r11 <> @r12 ^@r7

    ldp @r9 @r4 @r11 (@r10+2) @r12
    jmk @r8 u32 @r11 @r5 *main (@r12+2)

    cmp @r7 <> (^@r10+3) ^*main
    cmp @r8 u16 @r2 <M>

    jmk <> @r6 ^u32 (u64+2) @r2 (<>+3)
    jmp u64 ^&& u64 @r11 @r11 @r6 <>

    @r10 u8 M @r9 @r7 && @r5 ^M
    movk @r5 @r2 (^@r1/0_1) @r11 @r9 @r9 @r10
    lsl ^*block && <> @r3 (^@r4/2) (@r5/2)
    jmp (@r11/1) (M+1) M @r8 @r6 (@r3+0_1)
    @r2 @r12 M
    ldp @r4 @r5 @r6 (@r11+1)

    ldp @r5 &&
    lsl u8 @r9 <M> <M>
    dw ^@r7 ^&& (@r1/0_1) (@r2+2) <M> (@r3+2)
    push *main @r5 @r8
    push @r3 ^@r9 @r12
    @r3 u16 M @r9 ^u64 (@r4+3) u32 @r10

    dw ^@r5 && @r4
    @r10 *block @r4 &&

    mov M @r11 ^@r2 M ^@r2
    jmp (u64/0_2) &&

    mov @r1 && M

    cmp && (^@r4+1) ^@r10 @r3
    @r5 ^@r7 *block
    @r5 @r2 (@r6+2) @r1 u8 &&
    jmk u16 (@r11+3) @r7 ^@r5 ^u64
    movk u16 u16 *block (@r4/3)
    ldp (^@r6/3) @r11 @r12 M ^@r2 <>
    @r7 @r3 M @r11 *block
    mov && (^@r6+0_2) (^u32+1)

    ldp @r9 ^@r2 u32 @r3 (^@r3+0_1)
    ldp (@r2+1) (*block/2) @r7 @r4
    jmp ^@r9 @r5 @r2 (@r7/3) @r5 ^@r4

    jmp *block @r9 u32 @r11 ^*main
    ldp @r7 <> *block ^*block <> @r8 @r9
    ldp *main (M/0_2) (u16/2) M @r4

    @r7 u64 <> ^@r2 @r9
    ldp u16 ^@r4 (*block+1) (^@r12+2) @r3
    ldp @r9 ^u32
    ldp (@r8/3) @r3

    push *main @r8

    @r11 ^u32 <M> @r7 @r4 ^&& u32
    movk @r2 *block @r3 ^@r5 @r1 @r2 @r1
    push @r5 ^u32
    cmp u64 <M> (@r9+2) <M>

    mov <> && @r1 @r8 @r7 u32
    lsl @r3 *main @r8 <M> ^@r6
    push <> (u16+0_2) ^@r10 u16
    jmk <M> (@r7+0_1)
    jmp ^u8 @r11 M @r8
    @r6 @r7 (@r1+2) @r10 @r12 *main @r8 @r12
    jmk (@r6/2) u64 @r4 *main @r6 @r11 ^@r7
    mov (@r3+1) && ^@r8 (@r10/1) (@r12/0_2) ^M ^<>
    jmp M (@r10/0_1)
    jmp (@r9+3) (*main+1)

    dw (^@r10/0_1) @r12
    mov @r10 (@r10/2) (@r1/3) M <> (u16/3)
    movk (@r5+0_1) @r9
    push (<M>+0_1) ^M <> @r6
    lsl @r11 ^@r7 (u16+2) ^u8

    @r4 && <M>
    movk @r12 @r8 u8 @r1 u8 @r2 @r9

    ldp @r3 @r2 @r4
    @r4 (@r5+2) @r8 @r4

    ldp *block @r5 @r12 (^@r6+0_1) ^<> @r1
    @r10 ^u16 u16 (u32/0_1) ^@r7 @r5
    push <> u32 <> @r4 @r9
    jmp @r2 @r3
    jmp (@r7/1) @r12 M @r9 @r1 (@r8+3)
    jmp <M> @r12 @r8
    jmp @r5 u16 ^<> ^u64 ^@r7 @r12 @r2

    cmp (@r6+0_2) *main @r4 ^@r12 <> u16
    ldp (@r4/2) @r1 ^M <M> @r10 (@r10+0_1)
    jmk <> (@r12+1)
    mov <> @r8 (u64+2)
    movk <> ^<> ^@r8 (@r10+0_2) M (@r7/1) ^&&
    lsl ^@r10 u8 <M> M
    movk @r9 @r7 ^u32 @r8
    @r7 ^@r12 @r10
    cmp u8 ^@r11 ^<M>

    cmp @r12 @r11
    @r7 M ^@r7 @r2 u16 u32
    cmp @r3 ^<M> u16 <> M ^*main @r7

    cmp @r9 <M> @r5 (*main/2) M ^@r7
    push ^@r1 <>
    push @r6 @r11 @r8 *block
    ldp <> (@r1+3) @r2 &&
    jmp u16 u64 ^@r8 ^@r6 @r3 @r6 @r2
    mov M ^@r2 @r11 ^@r7 M
    movk @r2 u32 @r4
    jmk (&&/2) u8 (@r2+0_2) (u8/0_1) @r6 <M> u64
    lsl @r3 @r5 (*main+0_1) (^@r4+0_2) *block
    lsl ^@r7 @r2
    dw u16 (^@r9/1) @r1
    @r9 (u32+0_2) (@r9/1) ^@r12 @r10 ^@r12
    push ^@r12 ^@r9 ^&&
    ldp @r11 ^u16 <>
    mov @r8 @r2 M @r12 *block @r6 &&
    mov (@r5/1) ^u64 (^@r12/1) ^@r5 ^u64 @r7 &&
    lsl @r6 (u64/0_2) ^@r8
    dw <M> u32 && @r1 @r4 <> @r11
    cmp (@r3/2) u8

    ldp M (^*block/0_2) u64 ^@r10 (u64+3) @r5 @r8
    @r10 <> ^@r1
    @r2 @r9 *main (u64+3) u64
    ldp @r3 *block <>
    lsl @r1 @r8
    push (@r9/0_1) @r4 @r3 M *main @r1 @r9
    mov (<M>+0_1) (M+2) u32
    jmp u16 @r5 @r10 @r5 (u64+2)
    push (^*main/1) @r6 @r9

    @r12 @r11 @r1 ^@r3 @r12
    movk @r2 @r3 <M>
    lsl @r2 @r5 M u16 u64 (^@r4+3)

    jmp (u16/0_1) ^@r1 <M>
    jmp ^*block (*block+3) (u16/1) @r12 *block @r1 u64
    cmp *main <M>

    mov u32 (@r5+0_1) ^&& (@r3/1) @r1 @r8

    @r9 <> M
    push @r4 @r8 @r10 @r8 (u8+0_1) @r9
    @r12 @r11 ^@r7 u8
    mov @r8 u32 ^&& @r5
    jmp <M> M *main
    @r7 @r7 u16 (^@r7/3) @r9 *main

    movk @r10 && @r8 @r7 @r4 @r12
    @r2 @r2 @r7 @r7
    jmp (<M>+0_1) @r12

    jmk @r12 u8 *main
    mov M *main @r7 && ^*block
    movk ^@r12 *main ^@r3

    movk u32 @r5 u8 (@r2/0_2) @r11
    lsl (@r9+0_2) M
    push ^@r1 @r8 @r9
    ldp @r12 <M> u16 ^@r2 @r5 @r11
    jmk (^M/1) (@r5/0_2) @r3 ^@r6 (u16/3)
    dw ^@r4 (@r5+3) @r7 u64
    ldp @r5 (@r7+0_1) ^u16 (@r6+3) u16 u16
    cmp ^@r8 ^@r12 <> ^@r6 u16 *block

    cmp @r2 @r9
    @r6 @r11 <> u64 (@r8/0_2) @r7 (&&/2)
    lsl *main (@r9+2) <>

    ldp ^@r10 @r11 u32 @r5 @r11

    cmp u32 *main ^@r4 u32 @r12
    mov @r9 *block @r2
    lsl ^@r7 @r6 *block (^@r2/0_1) @r11 @r2
    push ^<M> ^@r4 && @r1

    mov @r4 @r7 <> u32 u8
    ldp (@r7+0_1) (<M>+2) @r8 @r9
    ldp ^@r7 ^*main @r10 @r8
    @r9 (^@r4+2) ^@r12 ^@r1 @r12
    push ^@r12 @r1 u64 *block @r6

    @r5 *main (^u8+1) @r7 @r4

    mov @r4 @r10 <>
    push (^*main/0_2) (^@r12/0_1) @r9
    mov *main *main @r6 @r7
    movk @r9 @r8 @r5 @r6

    cmp ^@r3 ^@r12 u64 && u64
    movk ^&& u64 (^@r10+1)
    ldp <M> @r5 @r11 @r4 (@r3+1) (@r5+2)

    lsl *block && ^@r11 @r9

    ldp @r7 (@r6/0_1) ^*block u8 (^*main/3)
    cmp ^@r5 (@r4/0_2) M

    cmp (@r4/2) (u64/1) *main u8 *block
    movk ^u32 *block @r3
    push ^M @r8 (u8/0_2) ^@r5 && ^u64 u64
    ldp @r2 @r2
    @r2 u16 *main (@r2/1) u64 && (^@r4+2)
    lsl @r11 u8 @r8

    push *main (u64/1) @r2 <M>
    lsl (^<M>/0_1) ^@r11 *block @r3 (^@r5+1) ^@r2 @r6
    dw (u16+3) u64 @r4 @r7
    cmp u8 u8 *block @r2 <M> M

    @r8 @r1 @r4 <M> ^@r11 @r9 (@r5/0_2)

    ldp @r8 @r12 @r3 <> <>
    cmp (^u8/0_2) *main @r6

    lsl *block (u64/0_2) @r9 (&&+3)

    mov ^@r9 <>
    jmp <M> (u64/3) @r9 ^@r10 u16 @r5 ^*block

    lsl ^@r12 (@r8+0_1)

    jmp (*main+3) @r7 @r6 @r12 (u8+0_2) *main
    @r2 @r7 ^u8 @r1
    ldp ^@r11 ^<M>
    push (u8/2) @r3 @r7 u64 (@r1+1) (@r4+0_2)

    cmp (*main/0_2) @r8 ^@r11 u16

    movk u16 @r12 @r8

    dw M M @r12 <M> u8 ^@r3 @r8
    jmk @r1 ^M *block ^@r12 ^u32

    jmk <M> (u8/3) u32 ^<M>
    push (@r10/1) && ^@r9 @r1 (*main/0_1) @r1 <M>
    jmk @r7 ^@r6 *main (@r11/2) u8
    @r6 ^u64 <M>
    @r5 (@r4+0_2) @r1 && (@r10+1) @r6
    @r6 u16 M @r9 && <M>
    jmk ^@r6 M

    push *block <> @r8 ^u8 ^<M> ^*main
    movk u32 @r9 @r8 *main && (@r11/0_2) @r9

    cmp @r12 *block
    dw @r1 @r2 @r12 && (^@r6/0_1)

    dw @r12 (u16/0_2) @r9 ^@r8
    mov @r12 (@r2/3) <M> ^@r7 @r8 <> ^@r2
    @r4 u64 @r8 ^u16 (^M/0_2)
    movk @r2 u16 @r2
    jmk @r6 u16 (@r6/0_1) @r10

    jmp *main ^@r4
    mov u64 ^*main ^&& @r10 ^@r4
    push @r11 @r1 && @r3 (u8+1) ^@r6 @r2
    movk ^@r8 @r5
    jmk @r5 @r7 (^@r4/0_1) <M> (@r10+3) <M> u16
    jmp @r5 @r12 @r12
    ldp u64 @r10 (M/2) u64 *main
    dw <> ^@r6 &&

    @r12 u8 (^@r8/0_1) *main
    mov @r5 @r7 @r8 (<M>/0_1) @r6 @r7 *block
    mov (u32+1) (@r4/3) (@r2/0_2) && @r8

    @r7 @r8 u16 @r8 u8 ^u64 (u32+0_1) (@r10/1)
    ldp ^*block @r8 @r5 u64 @r4 u8 <M>
    movk u64 @r4 (u8/1) @r10 <M> @r7 @r2
    mov @r3 @r10 ^<M> <M> ^@r6
    jmk @r8 && @r9
    mov @r6 @r12 <M> ^@r9
    lsl <> @r12 ^M ^@r4
    @r9 @r4 <M> (&&/1) ^*block
    jmk u32 (@r11+0_2) @r1
    @r11 <> ^@r4 @r5 ^@r10
    @r11 @r5 (@r5/0_1) *block u64 *main

    jmp u16 u16 @r3 M u32 u16

    jmk @r7 @r3 @r11

    ldp *main u8 (@r3/2) ^<>
    ldp *main @r12 <M>
    mov @r2 @r9 <M> <M> ^@r1

    lsl (M+3) @r11
    @r3 @r8 <M> @r1 @r6 <M> ^@r10
    mov u8 @r1 @r7 ^u64

    jmk ^<> @r1 @r2
    mov *main ^*block

    mov @r5 @r3

    push (^@r5+1) @r7 <M>

    jmk @r8 @r4 @r9
    ldp @r6 <> u16 u64 @r3 @r10
    cmp (<M>+1) *main
    ldp M @r7 @r9 @r7 && ^M @r3

    movk (*main+0_2) @r2 @r9 @r7 ^@r6
    movk @r2 @r12 @r8 u8 && ^@r6
    @r4 u16 *main
    @r6 @r11 ^@r8 u32 *block @r11 &&

    jmp @r2 && ^@r4 @r4 u32
    jmk @r10 u64 M u16
    jmk <> u16 @r6 <M> ^@r10
    push @r12 u32 @r9 (u64+0_1) u8
    lsl u16 @r6 M M
    @r4 @r6 (^*block/0_1) *main @r8 <> ^@r11 @r4

    jmp ^u64 @r10 @r4 @r7

    lsl @r1 <> <M>
    jmp M @r4 u64 && ^@r11 @r2 @r5
    lsl @r8 u64 @r6
    cmp @r12 @r1 *block
    dw ^<> *main
    push <> ^@r7 @r10 (u16/2)

    lsl @r10 (@r10/2) ^<M> @r4
    jmp (@r8+2) @r7 @r1 && @r12
    jmk @r9 ^@r7 ^@r12 @r6

    push @r1 @r9 ^@r12 @r2
    cmp (&&/0_2) @r9 <M> u16

    @r4 (^@r1+3) @r8 u32 @r4 <M>
    lsl u16 (^@r7/1) (@r1+1) @r4 (^&&/1) && @r12
    push @r7 @r9 @r6 (@r2+3) @r7

    dw @r9 @r5 @r10 && *block u64 @r6

    lsl @r12 ^M *main (@r1/3) @r10
    push (@r7+1) (^*main+1) @r11 M @r8 u8
    push <M> u64 @r11 *main ^@r6 @r9 @r11
    @r3 ^u8 <> @r12
    jmk *main @r1 ^*main @r12 *block
    jmk u8 (<>+0_1) ^@r5 ^@r1 ^@r10 ^@r6
    @r12 ^u16 u64 @r7 (@r8+0_2) ^<> <M> @r9

    lsl (*main/0_1) ^*block <M> u8 u16
    lsl <> u32 (u16/1) @r10

    mov && && (@r2/3) && u32 u16 u16
    ldp @r2 (u64/0_2)

    @r11 @r12 ^@r12 M
    @r3 @r3 u16

    push <M> u8 ^u64
    lsl <M> @r11 @r4 @r4
    jmk ^@r7 @r2 @r2 @r1 @r4 ^@r5 u16
    cmp *main <> @r11 @r12
    mov @r9 @r1
    @r9 <M> (u8/1) u32 (@r1+0_2) <M> ^@r10
    @r11 u8 @r4 @r6 (u16+1)

    ldp ^@r4 ^@r11 @r12 @r5 *main
    dw u32 && (*main/0_2) ^*block
    @r7 ^*main <> @r3 @r8 @r2
    ldp u64 ^@r7 @r4 @r11
    @r11 ^&& ^<M>
    ldp (@r6/0_1) @r2
    push (<M>/3) @r11 ^<M> u64 u8 ^u16
    jmp u32 @r7 ^@r4

    dw @r11 ^u32

