    lsl @r3 (@r12+2) @r8 u64
    movk @r3 <> (&&+3) <M> u64
    dw @r12 @r2 (<M>/0_1) u8
    mov ^@r5 ^@r4 u64 @r4 @r6 <M> (@r8+3)

    ldp && @r7 u32 ^u64
    cmp && @r1 && *main @r10 (@r2+3)

    mov *block M M (*main/0_2)
    movk @r10 *block @r7

    dw ^@r12 (@r4+3) @r10 u16 *block *block u16
    dw @r3 @r1 @r1 ^@r1 (u32/0_1) <>
    @r12 @r8 @r12 M *block @r4

    jmk @r5 ^@r10 <M> <>
    dw ^M ^@r1 @r5 ^@r10

    ldp @r1 (@r4+1) u64
    cmp ^@r7 @r8 (<M>+0_1)
    cmp (^@r7+3) @r9 *block @r9
    ldp (@r9/0_1) u32 @r6 @r6 (@r11+0_1) (<M>+1) <M>

    dw (<M>/3) @r12 @r8 ^@r2 *block

    movk @r9 @r1 *main (M/0_2)
    jmp u64 && ^<> ^@r10 (@r8+0_2)

    jmp (^*main/0_1) @r4 @r8 ^@r9 ^@r10 @r11
    @r5 ^&& u64 ^@r4 *main @r3
    lsl (@r5/0_2) <M> *block
    jmk ^@r4 u16 @r12 (@r7+3) @r12
    movk <M> @r4 M *main && ^u64 @r7

    @r7 @r7 ^@r11 <M> M @r7

    mov <M> ^*main (@r10+0_1) *block
    @r4 (@r12+0_2) *main @r8 @r10

    push <M> @r5 @r11 @r8 ^@r12 @r11
    cmp && <>
    ldp @r3 @r5 && u64 @r5 @r4 M

    mov @r6 M @r12 @r3
    @r6 @r10 @r3

    ldp @r8 @r4 @r3 ^<> && u32 @r8

    jmk @r8 ^u64 (@r7/0_2) u16
    @r2 *block @r7 @r4 @r1 ^u32 @r2
    movk ^@r9 (@r11/0_2) <M> u8 @r1 (@r2+0_2)
    @r7 @r11 <> ^@r1 ^@r7 @r3 u8 (u64+0_1)
    lsl @r12 <M> (u64+1) ^@r1 @r10 u64 @r2
    mov <> && @r9
    mov (@r5+3) @r6 (@r3+1)

    @r9 @r11 @r5

    mov @r3 @r11 ^@r9 @r2
    lsl ^@r9 @r11 @r7 @r8 (@r3+0_2) ^&&
    movk ^<M> ^u16
    jmp @r2 (<>/0_2) ^@r6
    movk @r6 *main ^@r2 ^*block @r10 ^@r5 @r5

    jmp *main @r12 @r3 @r9 (@r2+0_2) @r2 @r10
    dw @r11 u32 u16

    @r2 ^@r1 @r5 <M> ^@r1 @r7 u32 (^u8+0_2)

    ldp ^u64 u8 (@r5+0_2) <> @r12
    ldp @r1 (<>/1) u8
    @r12 ^*block @r3 u64
    push (u32+0_1) ^@r6 *main
    dw (@r3/0_1) (@r9/3) ^@r6 @r3
    ldp <M> (M+3)

    @r2 @r8 *main
    jmp @r10 ^<> && @r7 @r11 @r7 (^M/1)

    mov u64 ^@r6
    jmp @r6 ^@r10 ^@r5 (@r8+3) ^@r2 (@r8/2)
    @r4 ^u64 @r3 (u32/0_2) *block M ^&&
    push ^u32 @r12 @r9 *block M ^u16
    @r5 u64 @r7
    ldp ^&& ^@r1 @r12 (*block+0_1) @r6 <> @r8

    jmk @r2 ^@r11 @r6 @r11

    jmp ^@r6 (@r1/0_2) @r3 ^*block @r11 @r6
    mov <> *main

    movk u8 (@r11+2)
    lsl @r7 <M>
    lsl ^u32 (@r12+0_1)
    mov && @r11 ^u64 @r2
    @r3 @r7 ^@r5 @r9 (@r10/1) u32 @r7

    push @r3 && (^@r5+3) u8 @r9

    ldp u8 <M> u8 @r6 @r4 u32
    @r3 @r9 ^@r11
    ldp ^@r11 *block
    push @r10 ^M ^M u16
    lsl @r1 @r10 (@r7/2)
    @r12 @r5 (@r12/3) ^@r6 ^@r12 &&
    @r1 @r5 <> (<M>/3) @r8 ^M (@r12+1) ^@r4

    @r4 *block (^*main+0_1) @r2 @r3

    jmk @r12 (@r9+1) @r5 ^u8 (@r11/1) @r2 @r7
    dw u64 @r4 (u32/2) @r10 M ^@r10 u16
    dw @r1 (@r10/0_1) <M> ^@r6 @r3 @r1

    lsl ^u32 u8 @r2 @r6
    lsl @r7 M (@r3+2) @r3
    jmp ^*main ^@r5
    push @r10 @r7 @r4 @r1
    jmk ^u16 u8 @r4 M @r2 && (*block+0_2)
    mov M ^@r11 @r2 @r9 @r12 ^@r1 @r7

    push <M> M @r4 <>

    dw (u8+0_1) M (^@r12+0_2) @r8
    cmp @r7 @r3 (u32/0_2) @r9 && *main
    @r9 @r5 <M> *main ^u32 @r4

    push ^<> ^@r6 @r4 *block
    push @r8 @r3 (@r7+1) *main @r3
    movk M <> @r6 u64

    push (u16/0_1) &&
    mov u64 u16
    jmk (^*block/1) ^u8 @r6
    dw @r10 @r1

    @r10 *main u32 @r8 @r9 @r7 ^@r9
    mov @r1 @r10
    @r7 ^<M> @r9 (@r4+0_2) (*block+0_1) @r7 &&

    jmp *main @r3
    @r11 u32 *block ^@r4 ^*main

    lsl @r5 <M> (@r6+2) u32 ^@r5 @r10 u16

    mov @r6 @r12 ^@r4

    lsl ^@r2 u16 ^u64
    movk ^@r10 u8 @r2 u16 @r7 *block ^@r8
    dw ^@r8 @r3 u64 @r5 *block (@r9+0_1) <M>
    jmk @r1 ^@r7 @r9 u32
    mov u32 u16 @r8 @r5 (u64/3) (*main+0_1) @r7
    mov *block <> @r10 && @r7 M @r12

    cmp @r2 (^@r8/0_2)

    dw u8 ^&&
    lsl && @r2

    lsl u64 *block @r1 @r12 u32 *block
    lsl @r4 (u64+0_2) *block @r3 ^@r10 u64 u8
    lsl @r11 *main

    lsl (@r2+3) <M>

    @r3 @r9 ^@r6 @r1
    @r8 <> ^u64 @r11

    push @r3 @r5 M M @r2
    dw @r9 u8 @r10 @r9

    push @r4 @r7 (^@r4/2) M ^@r9 @r5 u64
    dw @r1 @r3 u16 (@r12/1) @r1 @r11
    cmp ^@r4 @r10 @r3
    @r11 @r9 @r2 ^<M> (<>+0_1) @r12 @r8 @r2

    @r8 @r3 ^@r11 <> ^@r8 &&
    lsl @r5 (@r4/0_2) u8 M @r12 @r1 (@r1/0_2)
    cmp ^@r6 @r5 *main
    push @r9 ^@r4
    jmp M (^<M>+0_2) (@r9/0_2) @r11 *main @r11 u16
    push @r9 *block
    jmk @r6 *main
    movk ^@r4 @r7 u32 @r12 @r8
    @r5 @r2 @r8 ^*block
    lsl <M> @r9 @r12 @r6 ^@r2 @r6 <M>

    mov <> u32 ^<M> (<>/2)

    push @r6 u16 u8 *main
    mov (u16/2) M @r8 (@r7+2)
    jmk ^*block @r5 @r4 u32 && ^@r1

    @r6 ^@r10 @r2
    jmp u64 *main ^u64 @r11 u8 @r4 @r1

    push @r1 *main
    ldp @r9 @r7 @r9 @r3 @r4
    jmp @r7 @r4 @r8 ^u16 @r12
    jmp M && @r12 @r7 (@r12+1) @r4 <M>
    @r4 @r10 (&&/1) @r10 *main @r10

    movk @r11 (@r5+0_1) ^@r3 @r4 @r8 @r10

    mov @r12 *main <M> @r5
    @r12 *block M ^@r2 && u16 @r3
    jmk u32 @r8 @r9 @r12 M @r7 u16

    cmp M @r10 ^*block
    ldp (@r5+2) @r8 @r2 ^<M> ^u64
    @r3 u32 (@r3/2) && (@r9/0_1)

    jmk (^@r11/2) <> @r10 <M> @r12
    @r11 (@r10/0_1) (@r4+0_1) @r3 @r3 @r8 @r5
    ldp ^u8 u64 ^@r7
    jmk @r6 <> @r2 (^@r1+1) @r1
    lsl @r4 ^<M> @r4 *main @r9 <>
    ldp @r7 @r6
    @r5 u32 @r4

    @r10 ^u32 <>
    lsl @r5 (u64/2)
    mov u8 *block

    mov ^@r7 @r6

    movk *main @r8 (@r9/2)
    jmk u8 @r5 u16 @r11

    movk ^@r11 (*main+3) <> @r5 (@r9/1)
    @r12 ^u64 (u32+3)
    @r8 u16 u32 u64 *main (*block+2) *block

    push @r9 && @r9 (u16+1)

    @r1 M @r7
    movk @r2 M @r7 @r7
    @r7 ^@r9 @r12 <M> ^@r11
    dw @r11 ^<>
    mov ^@r8 ^@r9
    @r9 @r11 @r8 && u8
    @r7 u8 (*block/1) (@r7+2) @r3

    @r10 @r11 @r4 @r11 @r8 u8

    cmp *block <> @r4 @r8 u16

    @r10 (<M>+0_1) u8

    mov ^@r2 ^*main @r4 *block @r1 *main
    jmp @r10 @r11 (u16/2) *block M

    jmp @r2 (*main+0_1)

    mov (@r3+1) ^&& @r4 (@r2+1) @r2 u64
    mov @r11 ^<> (*main/3) @r5 u8 @r9 @r7
    ldp @r6 <> ^@r1 @r9 @r11 ^u64 u64

    mov u8 u8 ^@r8 @r4 && @r9 @r3

    lsl *block *block
    mov u32 (u64/1) ^u16 @r1 (^@r1+1) u32 @r9
    push (&&+0_1) ^u64 (@r11/0_1)

    ldp (@r6/0_1) (&&+0_2) (u32/1) @r7 (@r9/0_2) <>
    @r1 *main ^@r6 *main ^@r8 ^@r8
    push *main @r4 @r12 *block @r6 (*block+3)
    @r5 ^@r11 u32 u16 @r11 @r5
    @r8 u32 @r1 @r9 *block
    cmp @r11 <M>

    jmp (@r5+3) && ^@r1 (@r6/2) @r5 @r9 @r1

    ldp @r11 ^@r3 @r10 ^@r12
    @r3 <M> @r12
    ldp M @r6 && @r6 @r8 (@r2/3) *block

    mov @r6 @r3 ^@r9 ^u32 *block (^@r4/0_1)
    @r1 @r2 <M> <> && @r5

    movk M ^u32

    jmk <> @r3
    mov @r5 *main @r7
    push *block <> @r8 @r9
    cmp ^M ^u64 ^@r5 *block @r8

    push u8 ^M @r8 ^@r6 (@r1+0_1)

    ldp && @r1 @r7 (<M>/0_2) (@r8/3)
    lsl (@r12/2) ^@r10 *main
    lsl M @r4 (*main/1) *block ^@r11
    movk (^u64/3) @r2 u16 *main u16 @r1 u8

    mov @r10 && &&

    mov @r2 ^@r1 <> M (u16+0_2)

    @r4 u16 ^u8 u32 (@r11+0_1)
    jmk ^@r8 (@r6+3) (@r11/0_2) @r8 *block
    mov ^<M> u8 @r7 @r12 @r6 <M>
    dw @r7 u16 *main

    cmp *block (@r3/1)
    @r8 @r9 (@r4/0_1) @r2 ^*main @r7 @r2
    cmp @r8 (&&/2) u32 ^u8 u16 ^<M>
    lsl @r8 <> @r2 ^@r7 @r8 ^@r8
    @r5 ^@r9 ^M ^@r8

    dw ^u8 @r11 <> @r1 @r8 <> @r11
    jmp (M/1) @r7 *main ^*block u16 @r11

    jmk ^@r5 u64 @r6 u8 @r10 u64
    @r2 *block @r10 @r6 ^u16 ^<>

    jmk @r6 @r11 @r11 ^@r5 @r4 @r2 @r5
    ldp @r9 u16 @r11
    push ^u32 (@r12/0_2) (u32/3) *main (@r6+0_2) (<>/3) *block
    jmk (@r4/2) ^@r3 *block u16 (^@r6+1) @r9 (u16/0_2)
    jmk u64 (@r4+3)
    mov u64 (^<>/1) <>
    dw *main @r11 @r2 *main
    ldp @r8 @r4 @r6 @r7 (u32+2)
    push ^u64 ^@r3 @r8 @r7 ^@r8 @r4 @r2
    @r5 *main <> @r1 @r10 (@r6/0_1) u64
    @r4 u8 @r5 @r5 @r1
    dw ^M u32 ^@r6
    jmk (@r7/0_2) u32 u64 @r6 M @r10
    dw ^@r3 @r2 u32 u32 @r3
    @r5 @r7 ^&& @r12 ^@r1 (@r1/0_2) ^<M>

    dw ^@r3 @r5 && (@r9/0_1) @r9 @r8
    @r3 @r12 <> u16
    @r9 @r9 *block u64 @r11 u64

    mov u8 (@r9/0_2)

    movk @r6 ^M (^u64/2) <>
    @r1 @r5 u16
    lsl @r4 @r11 @r9
    movk u16 u64 @r12 @r3 *block

    @r3 ^@r2 u16 @r12 (@r9/3) (u64+3)
    push u16 u64 ^@r7 <> ^<M> (u16/2)
    cmp u32 @r10 @r10 *main
    dw u16 M @r10
    jmk @r5 <M> u16 (M/1) @r10 @r2 (^M/2)
    ldp ^@r7 ^@r12 (M+2) u16
    @r2 @r1 u16 @r7 ^@r8 <M>
    jmk (@r6/2) (@r5/1) ^@r4 @r12 u16 u8 (^@r9+0_2)

    ldp (^@r8/0_1) @r9 (u16/0_1) <M>
    @r1 u64 @r4 ^*block
    lsl M @r7 u16 (@r6+0_1) ^@r4 M
    @r9 M u16 ^@r9 u64 u32 @r6 @r1
    mov @r12 u32 (u16/3) @r4 u8 (@r12+3) @r2

    ldp M ^M @r5 M @r2 ^@r2
    mov @r6 (^<>/2) (@r10+3) @r4

    @r3 u32 u64 @r5
    cmp @r4 ^<> @r7 @r6
    @r6 (@r12/0_2) @r1 @r10 @r6 &&
    jmk @r6 && u32 @r1 @r9 (@r5/0_2) u8

    ldp ^u64 (^@r10/2) @r4 M @r9 ^u64
    @r2 @r3 @r10 &&

    jmp ^*main @r11

    @r6 @r4 ^@r3 (u32+0_1)
    push @r8 @r7 <> <M> <> &&
    dw *block ^@r9 u16 @r4 (^M/0_2)
    @r7 @r3 *main ^@r11 @r2
    mov @r9 @r1 u16 u16 ^@r4

    movk (u64/0_2) @r1 u32 (@r6+2) <M> @r8 (<M>+3)
    lsl ^@r4 ^@r12 u64 u64

    jmk && ^@r5 @r3

    dw (u64+0_1) M @r4 u64 @r8 <M>

    lsl <M> @r9
    push (@r7/0_2) u16 *main (@r1+3) M
    movk ^@r12 <> @r7
    jmp @r10 @r6 @r8 *block

    push @r2 @r7 @r4 @r3 @r4 u32
    jmp u8 (*main+1) ^@r6 <M>
    jmp (@r9+0_2) @r10 && @r12 && @r2
    push ^@r11 @r4 @r11 *main (&&+0_1) u64 @r9
    push @r10 @r9 u32
    lsl (@r8+0_2) @r12 (<>+2) u16

    lsl @r8 *block @r10
    jmk M u16 @r9 *main (@r8+0_2)
    mov u8 (M+3)
    dw @r9 <M> ^u16 u8 ^<> ^@r5
    mov @r1 @r2 <> @r11 u64 @r4
    push (@r6+1) *main ^<>
    push @r4 (@r12/0_1) @r5 *main @r2 @r12 ^@r12
    cmp u64 && ^u8 @r7 @r8 *block ^@r7
    jmk @r3 @r4 *block
    lsl <M> *block
    dw ^@r8 ^@r8 @r6
    push @r3 (@r5+3) *main *block

    mov (^@r12+0_1) u8
    dw (^<>/0_2) ^u8 @r8 ^@r4
    lsl ^<M> (u8/2) @r9 (@r5/0_2) @r1 (@r6/0_1)

    @r10 ^u16 <>

    movk (@r6+1) @r3 *main u32 M @r10 @r5

    cmp (&&/0_2) ^@r8 @r12 @r3 &&
    jmp u8 (M/0_2) <> @r4 (*main+3) @r2
    jmk u32 u32 @r9 @r6 @r5 ^@r4 @r2
    push u64 ^*main
    @r1 (@r2+0_1) u32 (*main/0_2) (@r8/3) ^@r8 (<>+1)
    jmk *main *block ^*main @r11 <M> *block @r7
    mov <> (^@r9/1)
    @r12 (*main/2) u16 @r11 u16 && @r8 <M>
    jmp *main (^@r10+0_2) *block (^<>/2) (M/0_1) (@r9+0_2) @r1
    movk @r4 (@r4+2)
    mov @r4 (@r6/0_2) ^u64 (&&+1)
    dw ^M ^@r2 *main @r11 *main u16 @r2
    cmp (@r8/1) @r3 ^@r12 @r6 && @r6 (^@r8/0_2)
    lsl @r8 u64
    jmp @r12 && *main (@r12/0_2) (@r7/3) @r2 @r3
    jmk && ^@r5
    jmp @r9 @r8 ^&& @r3 @r8
    lsl @r10 ^@r11 *main @r1 @r12
    @r11 ^@r11 (@r8+2) (@r10+2) && u8
    jmp (@r3/1) ^@r4 @r8
    jmp u32 (u8/1) (@r2/3) ^u16
    @r11 @r12 @r12
    ldp @r6 u32 <>
    jmp @r7 u32 @r7 @r9 @r5 @r1 u32
    dw (u16+0_2) u64 @r4 u64 ^u16 @r7 @r10

    lsl M @r1 @r6 @r1 (u32/3) ^u64
    jmk <M> @r5 (&&/2)

    cmp @r11 u8 u32 @r8 && @r1 u16

    jmk @r1 @r5 ^<M> ^<M> @r10
    ldp *main @r4 @r9 u8 *block ^@r2
    cmp @r10 (@r6+2) && u8 u32 ^@r9
    @r8 @r7 && @r6 <> (^M/0_2) @r7
    cmp @r1 (@r2/0_2) u32 @r6
    jmp u64 @r3 ^@r6 @r12 @r1
    mov (@r4/1) u8 @r6 @r3 ^*main

    jmk ^@r8 ^@r9 (M/2) @r3
    jmp @r1 @r9 @r2 (^<M>/3)

    jmk && u32 @r3 @r7

    cmp ^@r6 @r1 u16
    @r10 *main (@r6/2)
    ldp M @r3 ^@r12
    @r1 ^u8 u8
    @r3 @r12 M
    jmk @r12 @r4 ^@r1 u16 (u32/2) (@r6/2) @r1

    movk u16 @r6 @r5 (u64+3)

    jmp (*main/0_1) (@r12/0_2) @r1 (&&/1)
    mov *main (^<>+3) u8 (^@r12/0_2) @r5 u32 @r4
    mov @r4 ^M
    @r4 @r10 ^*main u64 (^@r7+3)
    ldp *main <>
    ldp M @r11 @r6
    dw @r12 ^@r8 @r9 @r5 ^@r5 *block
    @r2 u8 M @r6
    ldp @r9 u32
    movk @r1 @r1 (@r9/0_1) (^u32+0_2) ^<>
    @r11 @r1 *block @r12
    lsl @r2 @r11 ^@r11
    jmk @r8 @r7 ^&& @r1 ^*main <> ^u8
    push ^@r6 @r2 <> @r3 @r10

    movk <> u8 ^u16 u16 (@r5+2) @r4 <>

    jmk @r9 ^@r9 @r11 @r5

    ldp <> *main
    mov @r8 (u16+2)
    movk @r10 @r9 @r12 && M u64
    jmk <> ^@r10 <> <> ^u8 u8
    ldp ^@r11 u32 ^u16 u32 @r1 ^<M>

    dw @r10 @r9 @r11 (^@r10/0_1) (^u32/2) ^@r12

    @r6 u64 u64 &&
    cmp <> ^@r8 @r6 &&

    ldp <M> && @r12 (^u16+3)

    movk (@r9+0_1) (*block/2) ^u8 @r11 @r8 *main @r6

    mov ^@r5 @r9 && @r11 ^@r5 u8 ^@r12

    @r7 ^@r9 @r11 @r5 (@r8+0_2) ^@r11 ^@r2

    cmp u32 (u32+0_1) u64

    movk @r10 @r7 *block
    lsl u64 ^@r5 M @r11 (@r6/0_1) ^@r6 *main
    cmp @r5 ^&& *main

    push && (&&+0_1)
    lsl u8 u32
    cmp *block ^@r6 @r10 @r9
    @r6 <> (<M>/0_2) ^u64 *block (@r4+0_1) <>

    mov (@r4/2) @r3 ^@r2
    @r11 u32 *main @r3 <M> u16 (<M>/3)
    mov (<>/3) ^@r11 <>
    ldp ^M (<M>/0_2) @r10 ^@r5
    ldp && u8 @r11 (^@r12/0_1) ^u32 M @r3
    jmp u8 ^@r4 ^@r1 (u32+1) (^@r3/0_2) (@r12+2) @r7
    push (*block+2) *main && u8 (@r8+0_1) @r5
    @r11 ^@r7 (@r2+2) ^@r6 @r5 @r12 u16
    dw *main @r8
    ldp <M> @r2 (@r4/0_1)
    dw u32 @r6 @r12 u8 @r11
    push @r2 @r12 u8 ^@r1 @r3 (^<M>/0_1) @r9
    cmp @r2 @r12 u64 ^M @r10 ^@r12

    jmp @r5 @r7 u16 @r3 M
    push (@r6/0_2) u64 (@r3+2) (M/0_1) @r2
    cmp @r2 <M> u16
    jmk (@r3+3) ^@r11 @r7 @r10 M u16 <>

    cmp *main @r3 (*main/0_1) @r4 <> *block ^@r9
    cmp @r6 &&
    movk <> ^@r5 ^@r3 *block (u64+2) ^&&

    @r9 ^*main ^M (@r5/0_1) (^@r4/3)

    jmk @r9 ^@r8 ^u16 *block u16 <> @r8
    lsl @r9 ^@r11 u64 (u64/1)
    @r1 ^@r2 @r11 @r11 u16

    dw u16 u32

    @r2 *block @r5 @r3 (u16+1) (^*block+2)
    @r4 *main @r5 *main M (@r1/1)

    lsl *main (M/0_2) @r11 @r1 (@r5+0_2) @r2
    ldp @r11 u64 u8 ^@r2 (@r5+0_2) <M> @r7
    cmp @r5 ^<M> *block @r6 @r8 (^@r10+0_1) u32
    cmp ^@r5 @r2 (u16+2) u8 ^@r4 @r10 (<M>/1)
    jmk @r2 @r3 M <M> ^*block

    ldp @r3 ^<M> @r11 (^@r8/1) @r11 @r6

    @r6 M &&
    mov @r3 @r4
    @r8 @r5 <> @r5 @r10
    push (@r8/0_2) @r5

    cmp (*main/0_2) @r3 @r11 u64 ^@r9 @r10
    lsl @r2 (u16/0_1) u8 @r7
    ldp u8 @r4 (*main/2) @r8 (@r5/1) @r12 @r6
    cmp @r12 u8 (^u8/3) @r10 <>

    @r11 u16 @r1 @r2 (*main/3) @r8 @r3 *main
    mov (@r11+1) ^*block @r4 *main (*block+0_1)

    ldp @r9 u16 M

    mov @r11 @r5 u16 u32 && ^@r11

    lsl u32 M ^u32

    mov M @r12 @r11 (@r3/3)
    jmk *block <M> @r4 u16
    jmp (<>+0_2) (^@r12/2)
    lsl ^u16 @r5 @r6 @r2 @r8 @r7
    jmp @r9 @r8 @r8 M ^*main @r1
    movk *main *block
    ldp u8 @r12 ^@r7 && @r2

    ldp @r9 u64 @r3 @r11 ^*main *block
    mov ^*block @r1 (&&+1) (u16/1)
    jmk @r9 && ^u8 ^@r10 (@r5/1) (@r10+3)
    @r9 @r4 @r2 @r7 @r4 (@r8+1) *block

    movk <M> @r10 @r2 (u16+2) ^u16 @r6 (@r11+0_2)
    jmp u16 @r6

    jmk (@r1/0_2) ^@r7 ^@r3 *main (<M>/0_1) ^*block &&
    @r3 (@r5/0_1) *block u32 *main (@r10+0_2) ^@r3
    jmk ^@r3 @r5 ^@r2 (^@r7+1) @r10
    lsl @r8 (@r3/1) *main ^M
    jmk @r12 ^&& *block @r4 u32
    push @r3 (^@r2+0_2) *block @r9
    @r9 @r2 @r12 ^M @r6 @r5 ^*block &&
    @r6 <M> @r6 ^@r1 (u32+0_1) && @r5 ^@r5
    push (<M>/0_2) ^@r6 @r7 ^@r8 @r7 @r11 *main
    mov (^M/2) @r5 @r3 && @r7
    cmp ^@r3 ^u16 @r12 @r11
    @r5 ^@r7 @r6 *block ^u32 (@r2/1) M @r4
    movk @r6 <M>
    movk *block @r9 u32 &&

    jmk <> ^<M> @r3 @r11 @r1 *block
    jmp ^@r12 @r7 @r6 *main <>
    dw (@r12/3) @r2 @r1 (u64/2) @r9 ^@r8
    @r6 ^&& ^&& *block
    mov @r7 @r2 @r5 *main @r12 @r4
    movk <M> @r12 (@r7/3)

    cmp (u32/0_1) (@r5+0_1) ^u64 (u8+1) (@r11+0_1) @r9
    movk u32 @r1 *main && @r8 @r7 ^@r11
    ldp ^@r8 @r7 (@r5+0_1) (^@r4+0_1)
    mov ^<M> @r2 @r3 @r8

    @r11 @r11 @r11 (@r12/0_1) <M> ^@r7 ^<>
    movk @r7 u8 @r10
    dw (u16/2) ^<>
    cmp ^@r10 @r4 ^u32
    @r4 @r7 *block ^u16
    @r2 u64 ^u16 @r8

    dw u8 u8 @r12 ^<M> @r7 && @r6

    cmp @r5 (^@r3+2) u32 <>
    @r5 *block @r1 @r12 (@r7/1)
    push *main u16 *main && (<>+0_2) M @r8
    ldp ^u8 ^@r1 ^<M> (^@r1+0_1)

    cmp (@r7+3) ^@r8 @r4 (@r3+3)

    ldp @r1 @r4 @r12 @r12 u64
    jmp @r3 u16 (@r11+3) u8 ^@r7

    push <> (@r11+3) && M

    cmp ^@r6 @r1 @r8
    @r6 u8 *block *block *block @r8
    @r5 @r11 u16 <> (^@r4/0_1) <M> ^M

    @r4 ^M @r4 @r6 @r1 u64
    movk @r8 *block && *main <M> @r10
    movk @r4 u8 (^@r5/3)

    @r8 @r7 && @r12 @r6 @r6 @r3 (@r11+3)
    @r8 @r4 @r8 <> u8 M ^M
    @r8 @r1 ^u64 u8 (u16+2) u16 @r5
    dw @r3 (u32+1) ^@r3 @r8
    push (@r8+2) @r6 ^u16 (@r1+0_2) M <M> ^<M>
    lsl <M> @r5
    lsl *main @r3 u64 @r3
    jmp (u8+0_2) @r9
    mov && (@r10/0_2) && <>
    mov u64 u64
    jmp @r3 (^u64+0_1) @r12 @r8 @r8 @r6 (u32+0_2)
    jmp @r11 @r1 *block *block *main
    cmp *main (@r7/0_2) @r7 (@r2+0_1) <> *main

    dw *block M && *block @r2 ^@r1 ^&&
    mov @r7 ^@r7
    movk ^u32 ^u32 @r11 @r1 *main && <>
    cmp (^&&/3) (^@r12+1) @r6 u64 (^u16+2) (^@r2/0_1)

    movk ^@r11 ^@r1 ^u32 (@r10/1) u64 ^u16
    cmp (u16/3) (^@r7/3)
    lsl ^u32 @r9 @r4 @r12 u32
    ldp M (^<>+3) @r3

    @r3 (@r4/1) @r7 ^&& @r1
    lsl ^<> *block @r7 (^@r12+0_1)
    @r7 @r1 M
    movk u64 (@r5/3) @r2 @r10 (u16+0_1) @r7 ^@r2
    cmp *main (@r10/1) @r2 *main @r10

    jmp @r8 *block @r10 ^u8

    @r3 @r10 @r7 u16 *main (&&+3) @r11 ^&&
    jmk @r8 (&&+2) u32 <M> <M> @r6

    @r7 M u64 <M> (^@r7+3) u64 ^u8 u32

    ldp (@r8+0_2) (@r6+3) ^@r4 @r9 @r1 u16 @r4
    dw u16 @r4 && *block

    cmp @r3 ^&& @r2
    mov @r6 @r5 <M> u64 (@r6/1) @r4
    lsl M ^@r1 @r2
    mov @r10 <> @r12
    lsl @r9 @r1 *main @r11 @r3 @r11 u64

    jmk @r10 @r4 ^@r10
    jmp @r2 @r8 ^u16 u16 ^u32
    dw @r8 *main @r5
    movk ^@r11 @r6
    movk @r10 (@r8/0_1) @r2 ^@r12 (^@r1/1) @r12 (^@r10/3)

    dw ^M (@r9/1) (<>/2)
    push @r11 <M> u32 (@r3/0_1) ^@r12
    cmp (@r3/3) ^@r4 @r5 @r4 (@r6/0_1) <M>
    jmk (@r11/0_2) (^@r3+0_1)

    jmk @r11 ^u8 &&

    cmp @r12 *main (@r5+2) u8 @r12 ^u64

    movk @r9 @r3
    cmp (@r2/3) @r8 @r3 @r10 @r8

    lsl @r6 (@r7+0_1) u32 ^@r5 @r2 (<>+1)

