    push (@r4+0_2) && ^@r1 && u8 <>
    jmp @r5 u16 (@r2+3) <>
    jmp *block u32 @r2 *main *main @r7
    mov @r12 @r5 u32 @r1 <M>
    cmp (*main/2) @r4 @r8

    movk (u32/0_2) (^u32/1) (@r10/2) ^@r10 ^u16
    jmp @r7 @r10 (^@r12+1) (@r12+0_2)
    push ^@r7 *block ^@r11

    movk @r10 <M> (@r1+0_1)
    @r6 M @r2 ^u16 u8 @r10 u8 @r6
    ldp u16 u64 (@r7+2) *main @r4 @r10

    dw M u16 @r4 u64 u8
    mov @r3 @r9 @r7
    mov u8 @r8 @r5 *main
    lsl *main @r8 @r8 <M> u64 @r3
    dw (^@r9/2) M ^@r6 u64
    @r3 (@r5/3) (^<>/0_2) u32
    @r1 *block @r6 ^@r3
    dw @r9 <> @r1 @r3
    @r2 u16 u64 ^@r11 @r3 ^@r5 (^@r6/3) (@r10/1)

    movk @r2 <>
    push u64 *main @r7 @r4 M (@r10/0_2) (@r12/1)

    jmp *main @r3 <M> (u32+0_1) @r7

    movk @r1 u32 (&&+1) @r10 *main u64 @r11
    jmk @r10 @r3
    ldp @r6 M @r12 (@r8/0_2) ^@r10 @r12
    @r2 (<>/0_1) (<>/2) (u32+1) u32 u16
    push <M> @r8 u16 @r1

    mov @r5 ^@r9 (@r2/1)
    lsl *block *main ^@r4 &&
    ldp @r5 @r11 @r3 @r3 u32 @r11 &&

    @r1 <M> @r10 u32 (@r1+3) (^@r11/1)
    push ^u8 @r8 u16 ^@r7
    mov M ^@r1
    ldp @r9 (@r11+2) @r4 (^<M>/1) (@r6+0_1) M ^@r4
    push (@r8+0_1) ^@r12
    cmp M u32 && && (&&/2)
    movk ^u32 ^@r11 @r1 @r2

    ldp u64 u8

    lsl (*block+1) @r12
    jmk u16 (<M>/0_1) <> ^@r12 @r3 ^@r11
    dw @r8 @r6 @r1
    @r10 @r2 @r12 ^*main @r10 (^<>/2) <> ^u16
    @r2 *main M @r12 ^@r10 (u64+0_1)
    @r2 ^u32 @r9 @r11 (u32+1) *main (^@r10/0_2)

    push @r3 ^*block @r12 *main @r4
    push u16 @r6 (^u8+2) @r1 @r6
    ldp u16 *block @r7 u16
    push @r7 @r8
    dw u64 (@r6+2) ^@r5 @r9 @r6 @r3
    cmp ^@r2 ^u64 <M> ^*block @r3 @r5 @r4

    lsl @r8 (@r1+3) *block @r1

    dw @r5 <> u16 @r12 *block

    push @r5 ^@r8 @r4
    movk ^@r11 @r10 (@r6+1) (@r9/0_2)
    jmp @r5 u16 u8 ^u32 <>
    jmp && @r2 *block @r7 @r1 *block

    jmk && @r6 @r9
    mov ^<> @r2 @r4 @r6 (^u16/2) ^*main @r2
    push @r1 @r1 u64 @r6 @r5 @r4
    cmp @r11 @r1 u64 @r3 @r7
    jmp @r6 (^@r11/0_1) <M> && && u16

    ldp @r2 ^u64 *main ^@r4 (@r9+3) *block

    mov <> @r5 (@r6/0_2) @r2 @r8
    @r12 (<>/2) u32 @r1 u8 <> (^@r12+2)
    @r8 *main @r10 @r12 @r2 (@r7/3) @r12 *block
    dw ^u8 @r5 ^*main @r7 u32 *block ^*block
    jmk @r6 (^@r9+3) M u32 u16
    jmk *block <M> M
    @r11 u8 u16 (@r1/3) *main ^@r6 @r1
    jmp @r7 @r10

    lsl @r5 ^u16 ^@r10 @r6
    jmk @r7 @r4 (^@r7+0_1) (<M>/1) (@r4/1)
    ldp @r6 (^<M>/0_1)
    push (@r5/1) @r9 u64 (<>+0_2) @r10 @r6 ^@r8
    jmp *block @r7 (u64+1)
    jmp @r8 (u64+0_2) @r4 u8

    mov @r9 @r11 (u64/3)
    @r2 u64 <> u32
    ldp ^<> @r8 @r11 @r4 M @r2
    push u8 ^M ^u32
    lsl @r1 @r12
    ldp <M> u16 && (<>+0_1) ^u16
    jmk @r3 u16 *block ^@r12

    jmk @r7 (^@r1+2) @r4 u32
    push (u64/3) @r12 <> ^@r11 (u64+3) u8 @r2

    mov u64 @r8 ^*main ^<> @r1 ^u8 @r12
    cmp ^@r10 ^u32 u64 @r1 @r2
    push (@r3+0_2) @r1
    ldp (@r10/2) u32
    jmk M @r3 @r5

    @r5 @r9 @r5 u8
    @r2 *main @r2 M (u16/3) u16 @r8 <M>
    cmp @r3 @r10 @r7 ^<M>
    mov *block ^@r10 (u16/0_2) (^@r11/2)
    push @r2 @r12 u32 @r3

    jmp @r6 ^@r3 @r10

    @r12 && @r7 (^*block+1) @r6 ^@r5 @r7
    ldp @r10 &&

    @r11 ^@r10 (@r2+2) && *block ^*main
    jmk @r7 (M/0_2) *main M (@r7+2) M
    ldp ^u16 (<>/0_2) @r2 @r6 u32 @r4 (@r4+3)
    mov <M> *main ^@r6 (@r3+2) u32
    @r9 (@r5/0_2) *main M u16
    ldp *block @r5 ^@r1 @r6 @r11 (^@r11+0_1)

    mov <> *block
    mov @r9 (u32+2) *block @r6 @r4 @r4 ^@r7
    jmp M u32
    jmp <> *main @r10

    ldp u32 @r12 ^&& @r10 (&&+3)
    jmk @r12 ^@r12 @r10
    lsl @r10 @r2 @r7 u16 @r9 (@r5/3) @r4
    jmk ^&& @r7 ^@r7 @r2 ^@r2 <> @r1
    push u16 *block

    @r4 @r2 @r11

    mov @r5 (@r3/0_2)

    ldp @r10 ^@r7 ^@r1
    @r12 (u8/0_2) ^*main ^@r12 (u64+0_1) ^*block @r5 u32
    lsl @r4 u16 (*main+2) ^&& <>
    jmk @r9 u16 @r1 ^@r4
    mov ^@r5 *block @r1 *main
    lsl @r9 @r12 @r5

    lsl u16 @r3 <M> (^@r6+3) ^@r6 *block
    @r2 @r3 @r2 ^@r9 (@r12/1) @r11 u8
    dw *main u32 *main @r3 @r12
    @r4 (@r3/2) @r9 M && @r9
    mov @r10 (@r8/2) *block ^@r12 @r11
    dw M @r4 (^@r11/1)
    lsl ^u8 <> u64
    movk <M> @r5
    movk <M> @r9 @r10
    ldp ^*main @r10 <> ^*block (M/0_2) @r10
    ldp (<M>/1) ^@r8

    @r12 @r10 u32 u8 M
    movk @r10 @r1 u16 @r5 (@r2+0_2) @r6

    dw ^u16 ^*block @r10 @r9 @r3
    ldp <M> M *block u64 *block (M+2) u32
    movk u64 *block ^@r10
    dw ^u8 (@r6+2) (@r9+0_1) u8 ^*main @r2
    lsl @r1 (^@r10/2) @r1 && @r6 @r5 *main
    dw (u32/0_2) && @r2 *block <> @r1 (@r12+0_1)
    cmp u64 *block @r11
    movk @r4 @r1 M (u8/1)
    mov ^u32 @r12 @r9 && ^@r1 <M>
    jmp @r6 (u32/3) u8 u32 <M> @r2 @r4

    @r12 @r11 (&&+0_2) ^@r5 ^@r12 @r9
    @r12 u16 @r1 ^&& ^@r10 <> <M>
    dw @r8 *block @r11 (<>+2) @r7
    ldp (u64+3) u8 <M>
    lsl ^@r6 <M> u16 (M/2)
    @r7 @r1 &&
    movk ^@r6 ^@r3 (@r9+0_2) ^@r8 @r5 @r2 @r4
    jmp @r5 <> ^@r12 @r3

    mov u32 @r2 (u8/1) @r3 (u64/0_2)
    lsl (@r6+0_1) ^@r2 @r10

    jmp @r2 @r8 @r12
    movk @r2 @r7 ^@r12 ^@r10 u64 @r3

    @r9 @r6 @r2

    @r11 (@r8+3) ^@r2 (@r6/0_2)
    push @r11 && ^@r11
    jmp @r5 <M> M <M> (*block/1) @r3 (^@r8/1)
    push ^<> @r10

    movk u16 @r8 *main @r8
    @r3 (@r7/2) @r9 @r2 M M <M> &&
    dw @r5 <>

    cmp @r10 @r10 u32 @r12

    lsl @r12 @r10 @r12

    lsl u8 @r2 ^u8 @r9 (@r7+1) u16

    movk u64 (@r1/2) ^u16 (u32/0_2) && u16 @r1
    @r5 && ^@r12 ^M &&
    mov *main ^@r9 @r9 ^M ^@r5
    jmk ^<M> @r3 @r12
    mov u16 u64 u32 @r9 u32 <> <M>
    jmp @r10 *main (@r8+0_1) <M> @r9 @r5 (*block+3)
    ldp @r7 ^u32 @r5 @r4 @r3 (u8+2) ^*block
    jmp (^<M>/1) @r10 @r1
    cmp (u16/3) ^@r10 @r6 u16 @r9 u16
    jmp *main (u8/2) ^u8 @r4 && (@r1/3) @r8
    mov ^@r11 @r1 @r8
    mov @r3 *block @r11 @r8 M
    @r8 @r10 <> (<>/0_2)
    push @r1 <M> u64 *block @r6 @r10 @r10

    cmp @r12 ^@r6 (^@r8/0_1) @r1 u64 @r2 u64

    @r1 @r8 (*main+0_2) (M+0_1)
    jmk && (^<>/2) @r1
    cmp ^u64 @r2
    dw (@r11/3) (@r1+1) @r10 (@r4/0_2) u16 @r9 ^@r3

    @r11 u32 @r5 @r7 @r11 (@r8/3) @r9 (@r12+2)

    cmp (@r2+3) (@r2+1) @r12 *main (@r5/3) ^@r2 @r6
    lsl u8 @r5 u16 @r7 ^u8 (@r3/3) ^@r6
    ldp @r12 @r4 M ^*main u32 (@r6/3) @r5
    ldp @r4 @r2
    push ^@r3 ^*main @r5 ^@r4 ^<M> @r9 u16
    cmp @r7 (*main/2)

    jmp <M> <> @r9 (*main/1) @r1 ^@r4

    movk && ^@r10
    @r1 @r7 <> ^@r1

    movk <M> @r8 u32 u64 @r5
    @r1 ^<> && @r12 @r8 @r11 (^u16+2) (@r5+2)

    cmp @r9 ^*main *block @r5

    jmp @r9 @r11 (@r11/2) (@r4/3)
    jmp (<M>+1) M *main @r11 u16
    jmp (M+2) && ^@r1 u32
    @r11 @r3 u32 u64 ^<>
    dw u16 ^@r6 @r6 ^M ^*main <>

    lsl u32 @r3 u8 (*main/3)
    mov u64 @r2 (&&+0_1)
    jmp @r5 ^@r9 @r2 <M> @r2 u32
    dw @r1 u64 @r5 (@r11+1) (<M>+0_2) @r5 *main
    mov *main (@r3+0_1) @r10 (^@r4+1) (@r6+2)
    @r11 (^<M>+2) *main
    mov ^u8 *block (@r10+2) @r9 @r7 @r11 @r8
    @r6 ^@r9 *block
    jmk @r7 ^@r11 @r6 @r1 @r10 <> (@r5/3)

    @r1 <M> @r11 @r11 @r4 @r9 @r10
    @r12 u32 ^u64 ^u16 ^u64 @r3 <> u8
    lsl (@r1+0_1) <M>
    @r6 @r6 M (@r1/0_2) (@r11/0_1) <> @r7
    jmp @r2 @r3

    ldp (@r8/2) @r10 ^@r1 @r4
    @r12 @r5 ^&& @r10 ^@r9 (@r7/3) <M>

    push M ^u16 M (@r7/2) @r6
    lsl ^@r5 @r8
    jmk @r6 u16 u32 u16 @r9 @r7 *main
    push @r12 @r3 <M> <M> *block @r3 ^@r2

    @r7 && @r5 @r1 @r9 @r1
    @r11 *main @r11 @r9 u16

    lsl (@r3+2) @r3

    @r8 ^u64 u8
    ldp <> @r1

    ldp @r8 @r12 @r11 @r6 ^u16 @r1 ^u64

    mov && @r7 u8 @r7 && @r7 @r1
    jmk u16 @r2 ^u16 @r9 *block *block @r8

    movk @r6 (^u64+0_2) *block @r3 @r11 ^u16 (<M>/0_1)
    mov @r6 && @r9 @r5 M
    @r1 @r7 ^@r5 @r9 *block
    jmk @r4 *main (@r9+1) u16 @r4

    push (@r2+2) @r6 @r8
    jmk *block u64 (^@r7+1) (^@r8+0_1) u8
    jmk (<>+1) ^@r7 ^@r2 @r9 @r12 @r6
    cmp ^@r10 M
    mov ^<> ^<M>

    cmp @r12 @r9 &&
    push u8 @r10 @r6
    jmk @r10 @r2 *block
    movk @r5 @r3 u32 u8 ^M

    movk && ^@r1 @r4 *block ^u16
    @r3 u16 @r1 @r2 (&&+0_1) @r10 <>
    jmp @r5 (^&&/1) (@r7+1) ^@r1 ^*main @r6

    cmp @r2 ^u16 *block @r10 ^@r5 M @r6

    jmp ^*block *main <>

    cmp *block @r6 *main @r2 <>

    movk u64 *main @r3

    mov @r9 u16
    jmp @r9 @r4 <M>

    dw @r7 @r10 @r4
    jmp @r12 (@r4/1) ^<M> @r6 @r3
    jmk <> @r9 (@r1/3) ^@r4 ^@r9 @r12

    jmk (^M/0_2) && u64 @r4

    mov @r4 M (*main+0_2) (u32+0_2) @r7 @r7

    ldp M <> @r10

    push (u64/3) @r10 @r10 @r11 ^&& (<>/3)
    dw @r1 u16 @r12
    ldp ^&& ^*block ^u16

    movk @r7 (u64+2) M u16 M u8 <M>
    mov ^*block ^@r5 <M>

    jmp *block u64 <> M @r7 (@r8+1) M

    lsl (*block+1) @r10 @r7 ^@r4 *block (@r6/0_1)
    movk @r5 (M/0_1) <M> && @r1 @r1 *block
    jmp <M> (u32+1) @r11 @r1 <>

    jmk @r4 @r6 @r7 u16 @r2 u16
    dw ^@r1 u8 u32 @r2 ^u8
    movk @r9 ^@r2
    ldp @r10 ^@r8 u8 ^u8 @r8 @r12

    push @r11 @r10 @r5 (M/0_2)
    mov @r10 @r12 *block u64

    @r12 @r9 (u8+3) @r8 ^&& @r12 @r11 u64

    mov @r8 ^@r7 *block u8 ^<> <> (@r10+0_2)
    movk u16 (*main/0_2) @r2 *block ^@r10 <M> @r2

    jmp <M> @r6 u32 <M>
    push ^@r12 && <M> u64 @r1
