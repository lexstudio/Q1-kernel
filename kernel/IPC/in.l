entry:

    ldp (^@r11+1) ^u8 M <M>
    mov @r8 @r2 @r4 @r2 ^@r7
    movk ^*main @r7 u64 @r8 M ^@r1 (^u16+1)
    ldp (@r9/0_2) && ^u16 ^@r6 @r1

    mov ^u8 @r7

    jmp M (^u32/0_1) @r11 <> &&

    movk @r1 *main (u64+1) ^*block ^@r9 (^M+3)
    jmp u64 @r6 (@r9/1)

    cmp ^@r7 @r12 u64 @r12 @r11
    @r9 u8 @r5 *main

    lsl @r10 @r5 @r9 @r2
    movk (<M>/0_1) @r4 M (M+0_1) (@r3+3)
    cmp @r9 (@r4+3) @r3 *block
    movk @r9 ^@r3 @r9

    push (*block+0_1) @r4 @r8

    dw u8 ^M

    lsl ^@r9 <> ^*main *main *block @r10 <M>
    mov ^@r10 @r6 (<>+1) (u8/0_2) u16 u32 &&
    push (@r1+0_1) (^@r6+0_1) @r5 @r2
    lsl @r10 u32 @r7 u64 (u8+0_2) (@r6+3) @r1

    lsl @r5 && (@r4/0_1) u32

    push *block (*block+1) u16 @r11
    jmp u64 @r10 u16 ^@r6 @r1
    dw @r5 @r8 u8 u64
    dw u8 @r4 u32 ^@r8

    ldp @r11 @r10 @r4

    mov && (@r6+3) u32
    mov ^@r12 @r7 @r10 <>
    push @r11 @r5 @r7 u16 @r11 (*main/0_1) (*main+1)
    jmp (@r1+2) ^@r12 (@r5+0_1)
    @r4 u32 @r9 @r7 *main ^u16 (@r7/2)
    jmp M u16
    mov @r2 @r2
    @r8 @r11 ^<M> ^u32
    lsl ^@r8 ^@r4 *block @r6 @r7 ^u64 @r9
    mov @r6 *main u8
    dw @r5 <> (^*main/1) ^@r9 @r1 M *main
    push ^<M> ^u64 @r1 (^@r11+1)
    @r4 ^@r7 *main
    cmp ^@r7 (@r1+1) ^@r11

    jmp <> @r5 @r4 (*main/1) @r11
    lsl (<>+3) (u64+3) u16 ^@r8 ^@r9 ^M ^@r6
    cmp && ^@r5
    @r9 M @r2 M ^@r1 u16 u16 &&
    push <> ^@r7 @r10

    push @r6 ^@r8 <M> M

    @r12 u16 (u8+0_2)
    movk ^<M> (@r9+0_1) ^@r6
    lsl (@r6+3) @r2 @r11 @r3 @r10
    push u16 @r6 (u64+1)
    @r4 @r12 @r1 @r9 u16
    ldp ^@r12 @r3 @r5 @r6

    jmk ^u64 @r3 @r5 <M>
    jmk @r8 *block @r11
    push @r12 M u64 M @r5
    jmp @r7 <> *block ^<> (^<>+1)
    jmp ^u64 ^<>
    jmk && <>
    mov @r2 ^@r3 @r5 @r12 u8
    @r1 && @r8 @r5 u8 <M> @r9
    cmp u8 @r3 ^M @r5 @r8
    jmk (^@r3+2) @r4 @r12 @r7 ^@r5

    jmk @r12 (@r4/0_1)
    jmp ^@r1 ^M @r1 <M> @r3 (@r10/0_1) @r3

    jmp M @r1 ^u8 (M/2) @r1 u64
    mov <> @r10 u16 @r8 ^<M> (@r12/2) @r10
    dw (*block/1) @r8 ^@r8 @r5 u16
    @r6 (<M>+1) u64 @r10 u32 *main @r5 @r12
    push (@r6/0_2) (<>+1) (u16+3) ^&& <> (&&/0_2) ^@r6
    ldp @r12 (@r9/0_1) @r3 (^@r9+1) *main ^u64
    @r11 (^@r1/0_1) *main (^M+0_2) u64 *main <> @r1

    movk (u8/0_2) M u32 @r8 *block <M>

    jmp u8 u64 ^@r9 <> @r2

    movk u8 ^@r5 (@r7/0_1) @r9 M
    movk @r11 M u32 M @r4
    lsl (<>/3) u16 @r1 <> (@r7+1) M
    @r5 @r5 u64 (^<>/3) @r6 ^@r1

    jmk && <M> u64 @r3 @r1

    jmk u8 (^@r2+1) (@r8/2) (^@r11+3)

    @r3 @r2 && *main @r9 @r10

    push @r8 u32 u64 *main
    cmp @r5 @r1 *block @r10 (@r11+0_2)
    mov ^@r11 ^@r5 u8 *main
    cmp @r3 M (@r10+1) @r8 @r3 ^u16
    jmp @r5 @r11
    @r9 @r6 *block *block ^u64 ^@r1
    jmp (^@r4+2) @r6 @r12 u64 (@r4/3) ^@r3 @r3
    @r10 u64 *block u32
    movk ^@r10 u16 (@r3/0_2)

    @r9 @r9 @r2 *main @r1

    jmp u32 @r10 @r6 @r7 *main @r10
    @r2 @r6 @r2 u32
    mov @r8 (@r4/0_2) ^@r11 ^@r6
    lsl (^@r6+0_2) @r12 *main (u16+2)
    @r4 (&&+1) M @r8 (@r5/0_2) @r7
    dw @r10 (@r4/1) @r3 @r2 @r5
    lsl <M> *main
    lsl *block ^u32 ^@r12 @r9 ^<>
    push @r9 (@r8+1) *main M @r1 @r3 *block

    @r10 ^@r9 ^@r2 ^@r5 ^u64 ^<> <> M
    @r4 @r4 @r7
    @r9 (^@r5/1) ^@r9 @r2 @r9
    mov (*main/2) @r11 ^@r10 u8 <>
    jmk ^@r4 @r10 && @r4 @r8 @r12
    mov @r10 ^@r10 u8 <> @r10
    jmp u8 <M> ^u32

    jmk M @r9 @r6

    @r9 ^<> ^@r12 (*block+3) @r8 @r10

    cmp @r12 && @r6 @r5 @r1 u8
    ldp ^@r7 ^@r5 u32 @r10 && (@r6+2) ^@r10

    movk @r5 @r2 (<M>+1) M @r9
    lsl @r1 ^@r2 (@r4+2) @r1 ^@r5 @r8 <M>

    lsl u8 *block ^M *main
    @r4 (@r11/1) ^u16 <M> (^@r5+2) @r2

    mov @r2 *block u8 @r7 (<>/2) @r12

    push @r5 @r3 ^@r2 @r6 u8
    @r10 ^@r5 (^<M>+0_2) @r7 (@r9+1)
    @r5 ^@r5 ^@r12

    jmp u8 @r10 @r3 <> @r4 u16 ^u64
    lsl ^u64 (M/2) ^@r8 u8 (u8/2) *block @r3
    @r7 @r5 *main @r1 @r7 @r6 u32
    push @r10 (@r6+0_2) (@r6+0_1) && @r5 *main

    movk (@r2/3) <> @r1 M
    jmk @r5 @r6 @r11 (@r8+1)

    lsl *block (@r1/1) @r10 @r10 M <> u8
    ldp u8 <> M @r8 (@r5/1)
    @r8 @r3 @r6

    @r5 (@r6+1) @r8 ^@r12 @r3 @r7
    jmp @r8 u64 && @r7 (@r6/2) @r11 u16

    mov @r7 M
    jmp @r6 @r9 *main (@r2/1) (^@r10+1) u8 (*block/1)

    movk u8 @r8 ^@r10 u32 ^@r7

    jmp *block @r4 @r7 (u64+0_2) u32 @r7 ^@r5
    movk ^@r2 @r3 (M/3) (<>/2)
    lsl ^@r5 @r2
    push && u16 ^@r5 <> @r2 && @r9

    movk @r2 (u16/2)
    @r11 && @r12 M @r1 @r2 @r9
    ldp (@r5+0_2) (^<M>/1) <> @r7 @r8 (^@r12+3) @r7
    mov @r6 (^@r12+2) @r11 ^u32 M (*block+0_2) @r5
    push ^M @r6 @r6 (u8/3) @r5 ^@r11 ^@r7
    cmp @r9 u16 <>
    cmp u32 @r2 ^@r3 (<M>+3)
    movk <> @r11 (@r8/2) @r5 *block u16
    push @r11 @r6 @r9 @r10 (^M+0_2) @r4 ^@r6
    dw u32 @r1 u16 u64 @r3 @r7 @r9

    mov @r11 ^@r9
    lsl u16 M

    @r11 *main (*main/1)
    @r9 @r11 <> ^*main @r6 @r3

    @r1 @r9 u64
    jmp @r5 @r7 @r10 ^u16
    movk @r8 ^&&
    push ^@r8 ^@r2 ^u32 ^@r6 u64 <M> (@r6/3)
    push @r8 (<>+0_2) ^@r3

    movk ^<> (*block+1) M *block
    ldp (*block+2) (&&+0_2)

    @r12 u8 ^*block *block
    jmk @r4 @r12 <> @r7

    mov ^@r12 <> ^u64 @r6

    movk @r2 u64 @r10 u64
    @r8 (&&+2) @r2 u64 @r8

    lsl ^@r5 *main (@r6/1) (<M>+2) <M> ^@r8
    push <M> @r4 u16
    jmp (&&+1) ^*block @r1 @r10
    @r11 @r10 @r7 @r2 (u16+0_1) (^<M>/2) &&

    dw <M> <M> u32 u16 @r2
    @r6 u16 @r8
    lsl ^M @r7 @r10 @r11 ^@r6 (@r1+2) ^*main
    dw @r1 (<M>/0_2)
    jmk @r8 u16 *main *block (*block/1)
    mov *block @r5 <M> @r7 @r6

    jmk *main @r4 <M> u16 @r5
    lsl (@r8+2) u8 (@r4+1)
    jmk ^u16 ^@r11
    @r6 ^@r5 (@r9/3) @r1
    movk (^u32/3) u8 *block <> @r8 (*block+3)
    push @r6 ^u64 ^@r5 <> ^@r1 ^@r9
    lsl (@r10/1) @r8 @r10 @r11

    push ^@r5 ^u16 u32 @r4 @r10
    jmk @r4 ^@r8 @r8 ^@r12 u8 <M> ^@r3
    dw ^u16 *main u8
    movk <> @r9 @r9

