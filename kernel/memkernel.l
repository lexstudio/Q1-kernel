    @r3 u16 u8 @r5 (@r6/3) @r1 ^@r3 *block

    mov @r3 (^@r12/1) @r10
    jmk ^&& <> @r3
    cmp @r11 @r4 @r9
    dw <> u64 *block ^@r7
    cmp @r6 ^u8 <M> @r10 @r12 *main @r7

    push @r7 u8 @r1 (^@r4+2)

    @r5 u32 <>
    cmp && <M> @r5 @r11 @r6 (u64/0_1) u16
    @r7 (@r3+2) ^&& ^@r11
    mov *main @r4
    jmk @r1 u32 @r12
    lsl u8 ^@r5

    push u8 @r7 @r11

    push ^@r2 @r11 ^@r1 ^u8
    jmp @r2 <M> @r7 <> @r12
    ldp (@r9/0_2) (@r1/1) ^*main M (^@r12/0_1) M
    movk && (M+3) @r3 (@r3+1)
    @r4 (@r6/3) ^*main @r3
    dw @r3 (*block/0_2)

    jmp ^@r6 u64 ^@r9 @r1
    ldp @r8 @r11 ^u64 @r2 @r5 u16 @r7
    movk && (^u8+3) (*block/0_1) ^@r12 (*main+0_1) (@r6/3) @r4

    dw u16 @r12 ^@r10 *block ^@r3 @r3
    jmk u64 *block <M> u64 @r2 && u64

    @r1 u8 ^@r12 <M> @r12 ^&& @r7
    jmk u8 <>
    ldp u32 M <M> M @r7 @r2 (*block+0_2)

    push ^@r10 @r9
    ldp ^@r11 u8 (@r7+2) @r3 *block u32 ^@r2
    mov ^u16 ^@r2 @r6 ^@r11
    @r3 (^u16+0_1) u32
    @r2 @r3 @r1 <M> @r1 @r3 @r8
    dw *block (u16+1) @r10 (@r6+1) u32 @r12 @r7
    jmp (^*main+0_1) <M>
    ldp @r6 (^M/0_2)
    jmp ^@r7 @r5
    @r1 u16 @r12 (@r5+1) ^&& *main @r9
    jmk (@r3/3) @r3 @r5 u8 @r12 M
    dw ^M ^M
    ldp @r5 <> @r10

    cmp @r3 (<>+0_2) @r2 @r4
    dw *block @r10

    jmk @r9 ^@r2 ^*main
    @r1 @r5 @r11 @r7
    mov ^M @r5 (@r10/2)

    lsl @r7 ^<M> ^M @r8 u64 *main @r9
    @r7 @r3 ^@r11 @r9 (u16+0_2)

    push (@r1/2) (^@r5/1) (^@r11+0_1) @r3 u16 @r1 @r11
    ldp ^u16 @r8 @r1 && @r6
    @r8 @r10 <> ^@r11 <M>
    @r1 u64 u8 @r6
    ldp @r6 @r10 *main @r8 ^*main && u32
    lsl <> @r10 @r7 @r7 @r3
    push (@r4+0_1) @r8
    jmk u32 (M/1) ^<> @r12 (@r12/1) ^@r4 @r7
    dw ^*main u8 (@r5+0_1) && @r2 (@r9+1) @r4
    jmk ^<> @r8 M @r11 (^@r6/2)
    push @r8 ^u64 @r1
    @r11 @r8 @r10
    jmk @r10 @r12 @r4 ^<M>
    @r1 u16 @r5 ^<M>
    lsl *block M (u64+2) ^&& @r5
    cmp @r11 <>
    @r6 ^M ^@r10 @r9 ^@r9 *main @r8
    cmp ^@r3 ^@r10 <M> <> <M>
    jmk <> u32 ^u64 ^@r5 u64
    @r4 M ^@r6 @r3 @r8 (@r10+0_1)
    push u8 @r4 u64 <>

    push @r10 @r10 <> @r7 @r4 @r2 *main
    ldp @r7 u32 @r3 (u8+0_2) *main (<>+0_2) @r4

    movk (@r1+2) (@r3+2) @r8 (@r10+2) ^&& @r10 (u32+1)
    movk ^@r11 (<>/2) ^@r1
    cmp *main ^u32 @r3
    cmp @r2 @r10
    mov ^u8 (*main/0_1) @r3 (@r1+2) u16
    jmp <M> ^@r11 @r2 *block (@r11/2) *main <M>

    @r8 @r11 u16

    mov @r11 ^M ^@r10 *block u16
    @r1 @r6 @r9 M
    cmp u64 (^@r1/0_1) u64

    cmp *block (@r6+0_2) @r9 u8 (^@r4/0_2) u64
    movk ^u16 @r3
    push u8 u64 M @r11 @r6 <>
    @r3 @r6 @r10 && u16 &&

    movk u32 ^u64 *main

    @r8 @r7 @r2 <M> @r5 u32 @r8

    movk ^@r8 ^@r1 (^*block+2) ^@r8 M (@r10/1)

    @r7 @r8 @r7 u64 @r9 @r9 u32
    jmk <M> && *main && @r1 ^@r5 @r3
    mov u8 (^@r10/2) u64 @r1

    jmp @r1 u64
    @r1 ^@r12 @r1

    jmp (@r8/0_2) @r9 @r7 ^@r12 ^*block <M> <>
    lsl *block (@r10/3) (<>/1) @r12 @r12 ^@r7

    dw <> *block

    lsl @r5 @r6 ^@r4 @r1 @r6
    cmp @r4 @r2

    cmp u32 @r5 @r10 @r3 (u8+0_1)

    jmk ^@r9 (@r11/2)

    movk u32 @r12 @r2 ^@r12 @r6 u32

    movk ^@r3 (@r9/0_2) @r12 ^@r4 ^@r12 @r7 (@r4+2)
    dw @r2 ^@r2
    jmp (@r9+0_1) @r12 @r1
    jmp (<>/3) @r2 *block u8 u32 @r10 *block

    dw @r1 ^@r8 @r9
    movk @r1 (*block/3) @r8 u32 @r8 @r6
    @r3 ^&& @r11 @r1 @r3

    cmp <> <M> u8 @r5 @r7 u64 @r3
    @r4 @r2 ^@r11 @r5 @r12 @r3 @r8 @r9

    push @r9 <M>
    lsl ^@r6 @r7

    lsl ^@r8 @r8 u32 (u64+3)
    ldp @r12 *main ^@r8
    @r4 @r4 @r7 *block @r1 @r10

    push u8 ^M @r1
    mov (@r11/1) @r11 @r10 (M/1) u8
    jmp u32 (^M+0_1) ^<> @r4
    jmp <> ^u64 @r2 @r6 @r5

    push u8 ^<> <> @r8 *block @r12 u32
    push @r9 u64 @r11
    cmp @r7 M ^*main @r8 u32 *main M

    lsl (@r3+3) @r11 ^@r12 ^@r9 @r10 (@r2/0_2)

    cmp @r11 ^@r1 u32 @r1 ^<M> @r1 @r8
    jmp @r12 u16 && <> &&

    @r1 && ^<M> @r6 (u64/1) @r9

    @r2 @r5 M @r4 u32 @r3 *main
    mov @r5 @r1 ^@r4 @r11
    dw @r12 *main (<>+0_2) u16 @r9 u8
    ldp @r5 @r6 &&

    ldp ^@r9 <M> @r12 @r8 M @r9 (@r12/3)
    ldp <> @r2 (^u16+1)
    jmk (u32+0_1) @r1 ^@r8 ^@r9 (u8/2) <M> @r3

    push @r12 @r4 (u32/2) <> @r2 (M+2) ^*main
    jmp @r9 u32 ^@r4 u32
    jmp ^&& (@r3+3) ^u64 @r11 *block ^@r7
    ldp u16 M u8 (^M/2) @r8 <>
    cmp (@r5+1) @r10 u64
    movk @r3 @r2 @r9 @r3 ^@r6
    jmp (@r7+2) (@r3/3) ^@r4 M ^M @r6 @r6
    push u32 @r6 M && *main
    lsl @r12 (u8/2) (u16/0_2) @r2 *main @r11 ^<>

    dw <M> @r4 ^@r5 *block @r12 &&

    mov @r7 u8 @r3
    mov && *block @r4 @r4
    @r9 <M> *main @r5 @r6 @r9 *main u64
    lsl (@r2/0_2) (^u16+1) @r7 @r11 (^<M>+3) @r8 @r12
    movk @r1 ^@r11 ^@r2
    @r2 @r3 *main @r1 u32 ^u64 &&
    lsl *main <> <> *main (<>/0_1) @r1
    mov (*main/1) && ^u8 @r5

    @r9 *main <M> @r6 @r1
    @r9 ^@r2 @r10 @r6 (&&/0_2) u16
    push ^@r10 @r6 u16 @r7 @r8

    lsl ^@r12 @r11 ^@r8 @r7 (@r1/1) <> @r12
    cmp @r11 (@r8+1) M @r12
    ldp ^*block (<>/3) (u64+0_1) @r7 M (&&+0_1)
    lsl @r6 (*main+0_1) (u32/0_2) u64 @r7

    cmp (@r5+2) u8 (<M>/0_1) *block <M> ^@r10 ^u32
    dw *block M *block @r9
    dw ^u32 M *main (@r12+0_2) @r10 *main @r4

    movk (@r5/2) @r10 u32 ^@r10 u64
    @r2 @r3 ^@r6 (@r10+3)

    cmp ^*main u32 (@r4/0_1) @r10 @r2 u8 ^@r5
    @r12 ^u64 && @r8 @r8 @r11 (u32+1)
    movk (^@r3+2) @r2 *block (*main/0_2)
    @r4 @r5 <M> @r7 @r10 ^*main (^@r3/3) (^u16+0_1)
    @r12 *block <> u32 u16 @r1 u16
    movk u64 @r12 @r4 @r7 ^@r7 ^@r10
    jmk @r10 (^<M>+3) @r11
    ldp ^@r7 (*main/3) @r7 *block
    lsl u16 @r1 @r8 u16

    cmp <> *block

    movk ^M ^@r11
    @r12 @r5 @r12 @r7
    lsl ^@r4 (@r12+0_2) u32 (@r3+3) u16 @r5 ^@r5
    lsl @r11 @r10 @r1
    jmk u64 @r5 u8 @r8 ^@r6 ^@r1
    jmk u64 (@r2+0_1) @r8 @r12 @r2
    mov @r3 u8 ^@r7 u64 ^@r1

    jmp (@r2/2) (<M>/1)

    ldp u64 *main
    ldp @r6 (u32+0_2) @r4 @r7 (M/2) <M>
    push u64 M @r4 (@r5/0_1) @r6 @r7
    jmp ^@r11 *block @r1 ^*main ^<M> && @r11
    mov @r12 @r4 u16
    movk (@r12/2) ^<M> ^u16 @r2 (^u64+3) @r7 &&
    cmp @r3 @r8 ^u64 <M> @r4 ^@r3

    mov (@r12+3) (@r6/3) u32
    dw (u8+1) ^@r8 *main
    jmp (@r10/2) @r6

    jmk @r4 @r4 @r7 (^@r2+2) ^u8 <M>

    dw ^<M> ^@r12 ^@r9 <M> @r6
    lsl @r5 @r5
    cmp @r3 <> (^@r1/2) ^u16 @r7 ^@r1 &&
    jmp ^&& ^@r5 ^@r8
    ldp @r1 ^<M> ^@r6
    lsl u32 *main @r1 @r1 @r4
    mov (u8+1) u32 ^@r4
    ldp (@r4+2) M (*main+2) u32 @r2
    @r12 @r1 @r10

    dw @r12 &&
    jmp ^M @r7 @r2 @r9 @r7 @r5 ^@r5
    @r6 @r12 ^@r8 *block <M> ^@r6 @r1 @r8

    mov (^<>+1) ^*block ^<> @r4
    jmp && @r12 *main
    ldp u32 (u8/1) ^@r7 @r4 u32 (@r1/3) (@r1+1)

    @r9 u16 (<M>/0_1) @r4 @r2 (<M>/0_2) @r4 @r5
    cmp @r11 @r9 ^@r4 @r8 u8 u64
    push @r3 ^@r10 (@r2+3) @r4 (<>/2) *block @r11

    @r9 @r11 && u64 *block ^u64

    jmk @r7 @r10 M ^@r6
    push @r2 (@r11+3)
    @r7 (<M>+0_2) <M>

    @r10 ^@r5 ^@r12 && @r11 M *main
    jmp (u8+0_2) *block (@r6+0_2) @r7

    lsl ^u16 *block && @r9 @r2 u16
    jmp ^@r11 @r12 (u8/1) u16
    dw (^<>/2) @r5
    lsl && (@r9+3) @r11 && (*block+0_2) @r10 &&
    cmp && u8 @r7 *block @r4

    dw @r9 @r7 ^@r1

    lsl @r12 <M> (@r5/2) (@r9/2)
    @r9 ^<M> ^M ^*block @r7 @r7 u32
    @r5 @r6 u32 u16 (@r12+3)

    ldp *main ^@r2 @r5

    ldp M (@r12+1) @r6 @r11 ^@r6 u16 (&&+0_1)

    mov <M> ^u32 @r3 <M> *main u8 @r10
    mov ^@r9 (u16+2) M @r2 (^@r1/3)

    @r9 @r11 ^@r12 (@r11+1) && @r4 @r2

    cmp <> @r6 (^@r5+3) u32 @r11
    @r1 ^@r8 ^@r2 @r2 (^@r6+1) <M>
    ldp ^@r9 @r9 u64 @r7 (@r6/1) ^&&
    dw <> @r4 M *block (@r7+0_1) <M> u16
    dw u8 ^u32 @r12 @r10
    @r7 M u8 @r4 @r9 M @r7

    movk @r2 u16 @r7 @r2 @r7
    jmk @r3 (@r7+0_1) (&&/2) && <M> (u64+1) u32
    push u16 *main u16 @r6 @r6 @r4
    jmk (u64/2) <> @r12 (^u32+1) ^@r12 <> @r10
    lsl (@r3+1) (&&+2) u32
    ldp @r5 ^u8 @r2 @r3 ^@r4 ^@r8

    jmk ^@r10 && ^@r10 @r8 *main ^@r2 @r12

    jmp u64 ^&& ^@r3 @r9 *block u8 ^*main
    lsl ^@r5 M ^<>
    ldp ^*block (@r10+2) (@r5/0_2) @r5 u32 ^&&
    dw (M/1) (^@r2/2)
    lsl *main u16
    movk @r4 @r8 @r3 u64 ^@r4 ^@r3
    push M ^@r5 @r2 @r7 ^@r10 && @r12

    @r1 @r2 @r11

    jmk M u8 (<M>/0_2) ^M @r12 *block
    @r7 M ^*block <> ^@r9 @r8 <M> ^*block
    mov ^*block @r8

    jmk @r10 @r1 @r7

    dw @r4 ^@r7 (^@r12+2) *block

    @r2 u32 *block @r9 ^u32 <M> @r4 ^@r9

    cmp (&&/0_2) (u8+0_1) @r3
    jmk ^@r1 @r2 @r7 (*block+0_1) M (@r8+0_2) @r5

    cmp @r7 &&

    @r6 ^@r1 @r5 @r12 (@r1/0_2) ^u16
    jmk @r1 @r3 && @r4
    lsl u32 <M> @r3 <> ^@r7
    @r9 @r9 ^u16 (@r8+2) (u16/0_1) M
    dw @r8 *main @r8 u8 ^@r8 M

    jmp <M> ^*main ^@r1 u8 @r9
    jmk @r9 @r5 ^u16 u16 @r10 *main

    jmk @r2 @r1
    cmp (@r3/0_2) @r7 ^*main @r4

    dw ^@r8 M @r2 u64 && ^@r11
    mov ^@r3 u32
    @r2 @r9 (@r8/2) @r8 u8 (@r4/0_1) ^<>
    push ^@r2 u32 @r1 @r1 ^<M>
    jmk @r7 ^@r6 @r7 *block
    push @r4 @r9 <M> *block <> ^M
    mov @r4 &&

    ldp ^u16 @r10 *main @r9 ^*block *main
    cmp u8 @r7 *block @r6 ^&&
    push (*block+0_2) *main @r3 && ^*block @r5 u32

    cmp ^<> ^u32 @r2 @r8 M *main ^u64

    ldp @r8 @r2 (u32/3) ^u8 ^<M> ^@r6
    push @r11 (@r7/2) && ^@r1 @r11

    jmp *block u16 (<>+1) u16 @r9 (@r9/2)
    ldp @r4 *block
    cmp @r9 u32 u16 ^@r9 @r12
    ldp ^<> && (<M>+0_2) @r3
    lsl <M> @r9 u16 @r12
    @r8 @r9 M @r5 <M> <> ^@r5 @r5

    jmp (@r9/3) @r10 @r2 @r3 @r4
    lsl ^@r11 @r6 u32 @r9 (*block/0_2) ^@r9 (&&/3)
    dw @r4 @r12 @r3 @r9 @r7 @r10 u64

    lsl @r5 u8 (^@r1/1) ^@r4

    jmp @r11 u32 @r2 @r7 M @r7
    jmk @r1 ^@r9 @r6
    push && (@r6+1) (^@r10+0_2) @r4 @r7 ^u64 ^u8
    push @r8 @r4 @r4 u16
    @r7 ^@r4 @r9 u32 (@r9+3)

    dw @r7 @r1 @r11
    @r3 @r5 @r3 @r9 @r6
    @r8 @r12 <> @r10 <>

    ldp @r12 @r10 (@r7/1) @r11 (@r8/0_2) @r2

    ldp ^@r10 ^@r9 @r2 u16 @r4 @r9

    push @r8 @r1 @r1 u8 ^u32
    jmp @r6 u64 @r5

    lsl @r9 <M> @r8 @r11 *main (^u8/3) (M+0_2)
    dw *block ^@r10 u16
    lsl (*main/2) (@r1/3)
    movk @r8 <M> ^u8 @r12
    jmk u32 @r11 @r10 (@r2/0_2) (@r5+0_1) (u16+3) &&
    @r5 @r10 u32 u16 (^@r2/0_2)
    push <M> *main <> <> (&&/3)
    cmp @r2 u64 @r12 M u64 ^@r8
    movk @r9 @r9 ^@r12 @r11 u8 ^@r12 <M>

    @r10 ^<> (u16+0_2) (@r2/1) ^@r9 u32 u64
    @r1 u64 (@r5+2) <M>
    cmp <M> (u64/2) @r11 ^@r3
    jmk u32 M ^*main @r12 ^@r12 @r7
    dw u16 <> @r4 @r1 *block ^@r8

    cmp ^*block (@r4+2) *main (@r5+0_1)
    lsl u32 u16 <M>

    @r11 u64 @r10 ^u8 ^@r11 (u16/2) @r2

    @r2 <> (u16+1) @r5 @r7 M @r5
    @r9 <M> ^u32 u64 ^u8 u8

    @r3 @r4 ^<M> <> @r1
    cmp ^@r3 u8 (<M>/3)
    mov ^@r4 ^u64 @r2
    dw @r6 @r11

    dw <M> @r5 (u64+0_1) *main @r8

    mov (@r11+2) @r6 @r1 <> @r3
    jmp ^@r6 @r11 ^@r3 @r9 @r3
    push @r12 ^@r1 <M>
    @r1 M @r2 @r8 <M> @r8 @r7 @r2
    ldp @r12 (@r11/3) (@r12/3)
    @r12 u8 @r1 u64 &&
    mov @r3 ^@r3

    @r4 @r6 ^@r4
    mov <M> u16 @r2 ^@r7 u64 ^@r8 ^u64

    jmp (u64+1) @r9 ^<> <> <M> ^u64
    @r9 u32 ^@r1 u64
    movk && ^u32 @r10 u64
    cmp ^@r11 u64
    movk ^u32 @r10 @r5 @r4 @r6

    dw (u32+3) ^u32 (u32/1) ^@r5 @r9 u8
    lsl *block (@r3/0_1) <> ^@r9 ^@r8 @r6 <M>

    movk @r1 @r5 @r12
    movk ^@r4 @r9 @r11
    movk @r2 @r5
    jmk @r2 u16
    lsl && (u16/3)
    @r11 @r1 ^u64 u32
    cmp @r5 @r4 @r12 @r1 M ^u16 &&

    push @r6 @r9 u8
    mov @r5 u16 M ^@r11
    mov @r1 *block @r8 (@r1/0_1)
    @r8 @r7 (@r8+0_2) @r11 ^@r5
    lsl @r3 M @r12

    cmp ^&& @r4 *block @r3 *block *block
    push (u16/1) (@r10/2)
    dw @r2 @r3 @r10 @r9 @r12
    @r12 (@r10+3) ^u8 @r3 ^@r4 @r10 (@r8/0_2) u32
    jmp u32 (^@r3/0_2) @r11

    mov @r2 @r11 ^@r1 (^<>/3) ^<> @r2 u32
    dw u8 @r3 ^@r4 *block @r8
    @r8 @r8 @r9 *block
    cmp u8 <M> ^<>

    jmk ^u32 <M> @r2
    @r1 @r3 @r11 @r6 ^u32
    cmp ^u64 && @r6 ^@r12 M @r7
    @r1 && @r4

    cmp *main ^@r10 (@r1/2) u16
    push ^@r5 M
    movk u16 u16 (^@r5+0_2) (@r12/0_2) @r10

    ldp @r7 @r9
    dw (@r7/0_2) M M &&

    jmk (@r11+1) u64 @r12 M @r11 u8 @r11

    movk && (<>+0_1)

    cmp @r7 @r5 (@r5+2) *block @r8

    dw ^@r12 && ^*main @r2 u64 @r11
    jmp ^*main *main @r9 @r1 *block M ^@r4

    lsl @r3 *main @r5 (^@r3/0_1) (@r4+3) @r8
    jmp u64 ^@r9 && @r10 ^@r10
    @r3 @r12 u64
    push (u32+2) (@r5/1)

    cmp @r1 @r11 u16 ^M @r3 ^@r1

    @r12 (@r9+0_2) u8 @r10 (@r8+3) (<M>+0_1)
    jmp @r12 (@r3/3) && u64 (^<>+2) (u64+2)
    jmp (&&/1) u8

    push M (@r9+2) (^M/2) M @r4

    dw u8 u16
    mov ^@r1 u32
    jmp ^<M> M @r10

    ldp *block ^u32 (@r3/2)

    @r3 u16 @r8 @r7 M ^@r10 @r8 @r7

    lsl ^@r7 (&&+1) @r3 (<>/3)
    ldp u8 @r5 (u8+1)
    ldp @r10 @r12 u32 *main u8 @r2
    ldp (@r7/0_2) && (^@r6/0_2) (@r12+0_2) ^@r5 ^<> @r6
    cmp (^@r1/2) (^@r10+0_2) M

    mov (@r12/1) ^&& <M> @r3 u32
    cmp @r4 (@r2/0_2)

    @r4 (^@r3/0_2) @r12 (^M+0_2) <M> u64
    jmk @r4 ^@r9
    @r9 ^<M> ^@r1 @r1 ^@r10

    movk @r10 M ^@r4 @r2 @r9 @r9
    movk @r6 @r11 u8
    @r11 @r8 u32
    push (@r10/2) u32
    @r9 @r8 @r2 u64 @r5 <M> ^&& ^&&
    dw ^*block (*block+2) <M>

    cmp u16 @r2 ^*block @r9 @r1
    dw ^@r1 @r3 @r9 u8 (u32/2)

    dw <> (@r2/2) @r2 *block ^u32 @r3
    lsl @r4 u16 ^@r1
    mov ^<M> ^@r1 ^@r12 u16 (@r3+0_2)
    mov @r2 ^@r3
    jmp ^@r5 @r2 @r5
    lsl M u64 *main && (u32+2) @r4
    jmp @r5 @r5

    lsl u16 <> (@r1+3)

    jmk u32 *block u16 @r9

    mov u16 *main
    cmp M ^@r11 u32 @r4
    push && (@r4+0_2)
    @r7 <M> M *main u32 u8
    @r8 <> @r4 ^&& @r1 u8 (^@r1+3)
    @r5 u16 @r12 @r2
    ldp @r3 <> ^u64
    movk <M> @r4 ^@r5 @r7 ^u16
    dw ^@r5 *main ^@r9 M u8 @r8
    lsl *block @r3 @r11 ^@r10

    movk @r11 @r10 @r2 @r6 <M> *block

    @r1 ^<M> <M> u64 u32 @r2

    jmk && u8 @r10 <M> ^u32 @r12 u8
