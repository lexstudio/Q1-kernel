    @r3 u16 u8 @r5 (@r6/3) @r1 ^@r3 *block

    mov @r3 (^@r12/1) @r10
    jmk ^&& <> @r3
    cmp @r11 @r4 @r9
    dw <> u64 *block ^@r7
    cmp @r6 ^u8 <M> @r10 @r12 *main @r7

    push @r7 u8 @r1 (^@r4+2)

    @r5 u32 <>
    cmp && <M> @r5 @r11 @r6 (u64/0_1) u16
    @r7 (@r3+2) ^&& ^@r11
    mov *main @r4
    jmk @r1 u32 @r12
    lsl u8 ^@r5

    push u8 @r7 @r11

    push ^@r2 @r11 ^@r1 ^u8
    jmp @r2 <M> @r7 <> @r12
    ldp (@r9/0_2) (@r1/1) ^*main M (^@r12/0_1) M
    movk && (M+3) @r3 (@r3+1)
    @r4 (@r6/3) ^*main @r3
    dw @r3 (*block/0_2)

    jmp ^@r6 u64 ^@r9 @r1
    ldp @r8 @r11 ^u64 @r2 @r5 u16 @r7
    movk && (^u8+3) (*block/0_1) ^@r12 (*main+0_1) (@r6/3) @r4

    dw u16 @r12 ^@r10 *block ^@r3 @r3
    jmk u64 *block <M> u64 @r2 && u64

    @r1 u8 ^@r12 <M> @r12 ^&& @r7
    jmk u8 <>
    ldp u32 M <M> M @r7 @r2 (*block+0_2)

    push ^@r10 @r9
    ldp ^@r11 u8 (@r7+2) @r3 *block u32 ^@r2
    mov ^u16 ^@r2 @r6 ^@r11
    @r3 (^u16+0_1) u32
    @r2 @r3 @r1 <M> @r1 @r3 @r8
    dw *block (u16+1) @r10 (@r6+1) u32 @r12 @r7
    jmp (^*main+0_1) <M>
    ldp @r6 (^M/0_2)
    jmp ^@r7 @r5
    @r1 u16 @r12 (@r5+1) ^&& *main @r9
    jmk (@r3/3) @r3 @r5 u8 @r12 M
    dw ^M ^M
    ldp @r5 <> @r10

    cmp @r3 (<>+0_2) @r2 @r4
    dw *block @r10

    jmk @r9 ^@r2 ^*main
    @r1 @r5 @r11 @r7
    mov ^M @r5 (@r10/2)

    lsl @r7 ^<M> ^M @r8 u64 *main @r9
    @r7 @r3 ^@r11 @r9 (u16+0_2)

    push (@r1/2) (^@r5/1) (^@r11+0_1) @r3 u16 @r1 @r11
    ldp ^u16 @r8 @r1 && @r6
    @r8 @r10 <> ^@r11 <M>
    @r1 u64 u8 @r6
    ldp @r6 @r10 *main @r8 ^*main && u32
    lsl <> @r10 @r7 @r7 @r3
    push (@r4+0_1) @r8
    jmk u32 (M/1) ^<> @r12 (@r12/1) ^@r4 @r7
    dw ^*main u8 (@r5+0_1) && @r2 (@r9+1) @r4
    jmk ^<> @r8 M @r11 (^@r6/2)
    push @r8 ^u64 @r1
    @r11 @r8 @r10
    jmk @r10 @r12 @r4 ^<M>
    @r1 u16 @r5 ^<M>
    lsl *block M (u64+2) ^&& @r5
    cmp @r11 <>
    @r6 ^M ^@r10 @r9 ^@r9 *main @r8
    cmp ^@r3 ^@r10 <M> <> <M>
    jmk <> u32 ^u64 ^@r5 u64
    @r4 M ^@r6 @r3 @r8 (@r10+0_1)
    push u8 @r4 u64 <>

    push @r10 @r10 <> @r7 @r4 @r2 *main
    ldp @r7 u32 @r3 (u8+0_2) *main (<>+0_2) @r4

    movk (@r1+2) (@r3+2) @r8 (@r10+2) ^&& @r10 (u32+1)
    movk ^@r11 (<>/2) ^@r1
    cmp *main ^u32 @r3
    cmp @r2 @r10
    mov ^u8 (*main/0_1) @r3 (@r1+2) u16
    jmp <M> ^@r11 @r2 *block (@r11/2) *main <M>

    @r8 @r11 u16

    mov @r11 ^M ^@r10 *block u16
    @r1 @r6 @r9 M
    cmp u64 (^@r1/0_1) u64

    cmp *block (@r6+0_2) @r9 u8 (^@r4/0_2) u64
    movk ^u16 @r3
    push u8 u64 M @r11 @r6 <>
    @r3 @r6 @r10 && u16 &&

    movk u32 ^u64 *main

    @r8 @r7 @r2 <M> @r5 u32 @r8

    movk ^@r8 ^@r1 (^*block+2) ^@r8 M (@r10/1)

    @r7 @r8 @r7 u64 @r9 @r9 u32
    jmk <M> && *main && @r1 ^@r5 @r3
    mov u8 (^@r10/2) u64 @r1

    jmp @r1 u64
    @r1 ^@r12 @r1

    jmp (@r8/0_2) @r9 @r7 ^@r12 ^*block <M> <>
    lsl *block (@r10/3) (<>/1) @r12 @r12 ^@r7

    dw <> *block

    lsl @r5 @r6 ^@r4 @r1 @r6
    cmp @r4 @r2

    cmp u32 @r5 @r10 @r3 (u8+0_1)

    jmk ^@r9 (@r11/2)

    movk u32 @r12 @r2 ^@r12 @r6 u32

    movk ^@r3 (@r9/0_2) @r12 ^@r4 ^@r12 @r7 (@r4+2)
    dw @r2 ^@r2
    jmp (@r9+0_1) @r12 @r1
    jmp (<>/3) @r2 *block u8 u32 @r10 *block

    dw @r1 ^@r8 @r9
    movk @r1 (*block/3) @r8 u32 @r8 @r6
    @r3 ^&& @r11 @r1 @r3

    cmp <> <M> u8 @r5 @r7 u64 @r3
    @r4 @r2 ^@r11 @r5 @r12 @r3 @r8 @r9

    push @r9 <M>
    lsl ^@r6 @r7

    lsl ^@r8 @r8 u32 (u64+3)
    ldp @r12 *main ^@r8
    @r4 @r4 @r7 *block @r1 @r10

    push u8 ^M @r1
    mov (@r11/1) @r11 @r10 (M/1) u8
    jmp u32 (^M+0_1) ^<> @r4
    jmp <> ^u64 @r2 @r6 @r5

    push u8 ^<> <> @r8 *block @r12 u32
    push @r9 u64 @r11
    cmp @r7 M ^*main @r8 u32 *main M

    lsl (@r3+3) @r11 ^@r12 ^@r9 @r10 (@r2/0_2)

    cmp @r11 ^@r1 u32 @r1 ^<M> @r1 @r8
    jmp @r12 u16 && <> &&

    @r1 && ^<M> @r6 (u64/1) @r9

    @r2 @r5 M @r4 u32 @r3 *main
    mov @r5 @r1 ^@r4 @r11
    dw @r12 *main (<>+0_2) u16 @r9 u8
    ldp @r5 @r6 &&

    ldp ^@r9 <M> @r12 @r8 M @r9 (@r12/3)
    ldp <> @r2 (^u16+1)
    jmk (u32+0_1) @r1 ^@r8 ^@r9 (u8/2) <M> @r3

    push @r12 @r4 (u32/2) <> @r2 (M+2) ^*main
    jmp @r9 u32 ^@r4 u32
    jmp ^&& (@r3+3) ^u64 @r11 *block ^@r7
    ldp u16 M u8 (^M/2) @r8 <>
    cmp (@r5+1) @r10 u64
    movk @r3 @r2 @r9 @r3 ^@r6
    jmp (@r7+2) (@r3/3) ^@r4 M ^M @r6 @r6
    push u32 @r6 M && *main
    lsl @r12 (u8/2) (u16/0_2) @r2 *main @r11 ^<>

    dw <M> @r4 ^@r5 *block @r12 &&

    mov @r7 u8 @r3
    mov && *block @r4 @r4
    @r9 <M> *main @r5 @r6 @r9 *main u64
    lsl (@r2/0_2) (^u16+1) @r7 @r11 (^<M>+3) @r8 @r12
    movk @r1 ^@r11 ^@r2
    @r2 @r3 *main @r1 u32 ^u64 &&
    lsl *main <> <> *main (<>/0_1) @r1
    mov (*main/1) && ^u8 @r5

    @r9 *main <M> @r6 @r1
    @r9 ^@r2 @r10 @r6 (&&/0_2) u16
