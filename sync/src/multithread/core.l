entry: 
    @r2 <> (u8/0_1) *main
    lsl @r7 (@r2/0_1) <M> *block @r2

    lsl @r11 &&

    cmp (^@r1+0_2) @r1 <M> ^u32 @r8
    push ^*block *block *block ^<>

    jmk ^<M> @r8 *main
    @r12 @r8 ^u16 && <> (@r2/0_1) u8 ^*main
    movk @r5 (^@r4+2) ^@r4 *main @r8 (u64/1)
    lsl M <M> @r2
    dw @r9 u16
    jmp u16 ^@r11 ^@r4 (M/1) @r2 @r4 ^u32

    @r12 ^@r10 <M> *block @r11
    lsl (@r10/3) (^@r6+3)
    jmk @r2 ^@r7 ^u32 @r8 @r4 &&
    @r9 @r4 @r11
    push *block *block ^@r3 u16 @r1
    dw (*main+1) @r11 *block
    push *block @r4 ^<M> u16 @r9 (<>+1) ^<M>
    ldp @r1 (@r3/0_1)
    jmk <M> @r11 u16 (@r11+0_1) @r6 @r4

    push u64 @r9 @r7

    @r9 (@r12+0_1) @r10 @r3
    ldp @r11 *main u8 (&&+0_2) (M/3) @r1
    movk <> (@r5/0_1) ^@r7 @r8 <M> @r7 @r3
    ldp @r8 ^@r4
    dw @r3 *main
    mov @r10 (@r2+2) *main
    @r3 u8 M (@r10/0_1) @r10
    jmp (<>+3) ^u64 ^@r9 && *block
    push @r3 *block u16 ^@r4 ^u16
    movk <> @r1 @r11 @r5
    jmk @r3 (<>/1) u64 && ^&&

    @r4 M @r8 ^@r10 ^@r4 (M/3)
    ldp @r6 ^u32 @r5 M
    @r5 @r7 @r2 (<>/0_2) && <>

    push @r3 ^@r8 ^u8
    lsl ^@r12 u32 @r9 <> && u32

    mov ^u64 *main ^@r9 <> @r9
    jmk @r1 u64
    @r12 u32 u64 @r10 u64 ^@r1 <M>
    cmp u16 (@r2+0_1) ^@r6 @r8 ^@r1 (@r3+0_1) @r1
    @r2 <> @r11 @r11 @r12

    @r12 u16 ^<M>

    ldp && ^<> ^@r12 @r9 @r10 ^u8 @r11
    mov ^u64 && ^@r9 @r10 (@r2+3) @r10
    push ^*main ^u16 u16 u32 ^*main
    lsl @r5 (@r10/3) (@r12+0_2) && u32 *block ^u32
    push u64 @r3 (@r3/1) &&

    ldp (@r1/2) @r4 u32
    jmp u64 @r1 @r6

    movk @r6 *main u8 (<M>/2) &&
    mov ^@r7 *main (*main/3)
    cmp @r4 u64 (@r9/3) @r7 ^@r10 (u16/0_1)
    @r8 <M> ^u16 (@r2/2) @r4

    @r2 *main <M> ^@r2 u16 (@r4/2)
    ldp *main @r3 @r11
    mov @r6 u8

    dw u8 <M> @r3 @r8
    jmp M @r12 @r1 @r1 @r8 u64 @r5

    @r1 u64 ^u8 @r12 @r8
    movk ^u64 @r10 @r7 <> @r8 (^@r8+0_2) @r10
    mov (@r10+0_2) ^*block ^u16

    @r11 <M> ^@r8 @r6 u16
    jmp @r12 u8 u8 @r12 @r8

    jmp ^@r1 ^<M> *main
    @r5 @r5 @r6 <> (u16+3) @r1

    jmp @r7 *block
    lsl (@r9+2) @r1 @r7
    ldp (M/2) <>
    @r10 && (@r9+3) u8 @r6 @r10 *block ^u64
    jmp ^*main @r7 (<>/3) @r11 u64 @r12
    movk u8 (@r4/0_2)
    ldp *block @r5 (^@r10+2) @r1

    jmk @r4 ^@r4 u8 (<M>+2) @r7

    dw @r6 (M/1) *main

    lsl ^u8 (M+0_2) u8 @r10
    ldp (^@r9/1) @r2
    jmk u64 *block @r2 ^M @r8 <M> (^u8+3)
    push @r10 (@r1/3) && u8
    mov @r5 @r7 u32 (@r2/1)
    @r2 ^&& ^@r7 @r8 (u64/2) ^@r5 @r10
    @r9 @r5 @r9 (&&/0_2) ^@r2 (@r8/0_2)
    jmp u16 @r11 @r4
    cmp (@r1+3) ^@r1 @r11 @r2
    jmp ^@r11 *block @r9 @r5
    ldp u16 ^&& &&
    ldp ^@r4 ^@r1 @r9 @r10 u64
    @r2 ^@r6 @r9 (@r6/3) @r5 (@r8+3)
    dw u32 (@r6+0_2) ^&& (@r1/1)
    ldp ^<M> <M> ^u32
    lsl u64 @r3 (M/1) @r6
    @r9 @r2 @r1 (^@r7+2)
    movk && ^@r2 @r3 u8 *main <>

    jmp @r10 u8 @r9 *block (@r8+0_2) @r9
    lsl (*block+3) (^@r8+1) *main @r1
    lsl @r9 ^@r6 @r8 *main @r11
    cmp u16 (@r9+0_1)
    movk (^@r2+1) *main ^@r2
    @r5 @r12 @r12 @r8

    ldp (u64+3) @r1 (M+1) @r5 @r8 ^@r1 @r8

    jmp @r1 @r4 @r4 (u16/0_2) @r8 M <>
    jmk @r10 (@r2/0_2) u64
    cmp (^@r1+0_2) (@r1+3) @r2 @r12 @r5 @r6
    @r7 ^@r9 (u16/1) u8 @r7

    jmp @r1 ^<M>

    mov (@r7+1) @r5 @r4 u16
    mov (<M>/0_2) (u32/0_2) @r8
    jmk ^*block @r2 (@r3+3) *main
    dw @r12 u16 u16 M
    
    cmp @r12 ^u16 (@r9/0_1) @r8 @r10 @r11 @r8
    @r3 @r10 && @r11 @r12 *main
    ldp (@r8+0_2) M *main *main u64 (u16/1)
    mov (@r3+1) u8 (&&+0_1) ^@r5
    ldp && @r3 <M>
    push @r1 (^<M>+0_1) *block
    lsl @r1 u64
    push *block u16 && ^@r9 ^M
    @r10 u64 *main ^@r4
    ldp (@r5+0_1) M ^u64 @r1
    push u8 @r3
    lsl @r7 (@r9+2) @r9 @r12 @r2 @r3

    jmk ^&& @r2 *block u16 @r1
    push u32 @r3 <> @r12 M

    jmk @r9 && && u64 (*block+0_1) @r4
    ldp @r4 ^@r2 ^@r7
    mov (*main+0_2) <> ^@r1

    lsl @r7 *main @r3 (@r2/3) @r9 ^M
    @r7 @r1 ^@r5 @r10 *block
    dw @r7 ^@r3 *main (@r11/1) <> @r10 @r1
    @r9 <> ^&& u16 ^@r6 u32 @r4

    cmp u8 @r4 ^@r8 ^<M> u8
    movk u8 ^<M> u8 @r8 @r2 *block

    mov @r8 ^u16 ^@r6 @r3
    @r10 (@r10/1) ^u16 (@r7/0_2) (@r8+0_2) ^@r12 @r7 <M>
    @r5 @r6 @r3 @r7 ^<M> @r11 @r7 @r3
    @r6 @r1 ^@r7 @r1 (@r10+0_1) @r3

    @r8 ^u32 @r4 *block ^@r6 <M> @r2 &&
    cmp ^@r7 *main ^@r8 ^u16
    dw @r12 (^*block+1) ^@r10

    @r3 (^@r7+1) *main <M>
    jmk @r4 u32 @r1 ^u16 ^@r7
    cmp @r7 @r2
    lsl && ^<M> <M>
    mov @r4 (u8/2) u64 && u32
    ldp u8 ^@r5 ^@r8 (@r8/0_1) <> @r6 @r9
    @r9 @r7 (@r9/3) u32
    push ^*main @r4 @r12 (u8+3) && u16 @r7
    push @r5 u16 ^u64
    @r10 @r4 @r7

    cmp (^&&+2) u16 @r3 <M> @r6 u16 *main
    lsl ^&& (^@r4+2) u32 *block *main @r9
    @r9 M @r8 M ^u16 @r1

    movk (*block/2) M

    jmp @r5 @r6
    lsl (@r10/2) (@r8+3) @r4 ^@r1 ^M
    lsl ^*main @r3 <> @r8
    movk u64 (*block+2) u64 @r1 (*main/1) ^*block @r10
    @r6 @r8 <M> (<M>+0_1) ^&& @r8 *main @r6
    lsl @r11 @r2 (@r6/2) ^@r4 && (@r1+2)

    ldp <M> ^<> @r4
    lsl *main <M> @r7 @r5 @r5 ^*main u32
    mov *block @r9
    ldp *main @r7 @r4
    @r11 u32 @r11 ^@r3 ^@r8 (&&+2) *main
    ldp @r11 u64 @r1 <>

    cmp *block <> @r10
    @r9 <M> @r5 ^@r9

    push M &&
    jmp @r6 @r12 @r1 @r11 *block @r6
    @r6 @r11 (@r5/3) @r1 @r1 u8 (@r8+0_1) @r11

    ldp (*block/0_1) (@r9/0_2) @r10
    movk (^u16/0_1) (@r5+3) @r10 ^@r3 u16 &&

    ldp u8 ^<> @r1 @r1 u8
    mov @r4 @r3 ^@r1
    dw (^u32+2) @r7 @r12
    ldp && M

    dw @r3 @r2 <> (@r12/0_2) u64

    jmk ^<M> && *main *block
    movk u64 @r11 (@r10/2) (u32+0_1) ^@r9
    ldp @r4 @r9 ^@r3 (@r9/3) ^@r7
    push @r6 ^&& @r10 *main

    @r8 u32 u64 @r1
    @r12 @r10 ^@r4 @r8 u8
    @r2 (u32/0_1) @r4 ^@r11


    movk @r9 (@r12/0_1) u32 (@r11/0_1) <M> &&
    ldp u8 @r12 u16 ^@r3 @r10 ^@r2 *block
    @r10 (u32/2) u16 @r9 M <> u32 u32

    push (@r11+3) ^<M> @r11 M u64
    @r12 *block @r9 M @r12 @r11
    jmk @r11 ^@r12
    jmp <> @r5
    cmp M *main
    lsl @r6 @r7 @r7 <> @r6 u16 (*block/0_1)
    jmp @r3 @r4 ^&& (u16+0_1) ^*main ^@r8 u8

    lsl @r4 && *main *main M @r5
    jmk @r3 @r11 @r5 @r4

    mov @r10 <M> <M> @r2 @r3

    push *block *main u32
    jmk (M+0_2) && @r1 u8 @r11 @r8

    ldp @r6 (^@r3/0_2) @r5 *main @r12 @r7
    lsl @r4 u8 (@r6/0_1)

    lsl ^@r8 ^<> @r2 ^u16 ^M (@r12+1) ^@r9
    @r8 (@r7/3) @r4 (@r3+2)
    jmp @r12 @r1

    @r6 ^@r9 u16
    @r5 u16 u8
    jmk <> (@r6+2)
    movk @r4 u32 ^*main
    mov (u64+0_2) @r8 @r6 @r8 @r2 *main @r5
    mov @r12 (u64+2) @r1
    cmp ^u32 @r3 (@r7+2) ^u64 u16

    lsl @r9 @r11 @r8
    lsl ^<M> ^@r1 ^@r3 <M> M @r7
    dw @r9 @r4 @r2 u32 @r12
    movk @r12 && @r7 @r6 *block
    @r4 (u32+3) @r8 (^@r7+0_1) ^@r10 @r3
    jmp <M> ^*block *main
    jmp @r10 @r1 (@r4+3) @r3
    movk M @r12 *main (u64/0_2) ^&&
    @r7 (@r12/1) @r2 @r10 ^<M>
    @r9 <> @r2 ^u8 u16
    movk u16 @r11 @r3

    push && && (@r12/1) ^@r11 @r12 *block *block
    lsl (M+0_1) @r12 ^u64 M (^@r5/0_1)

    jmp @r4 <>

    push && (^@r6+1) (^@r4/0_1) ^u64 u8 @r11
    mov @r9 @r8 ^u16 M *block @r12
    push ^u32 @r2 u32 (@r11+0_2) (<>+1) &&

    @r1 (@r1+2) *block @r12 ^&& @r9
    push @r4 @r5
    movk @r10 @r2
    movk @r8 (@r6/0_2) @r7 (@r6/2)

    ldp *main M @r2 *block
    push @r4 (&&+3) @r11 @r3 (*main+3) M &&
    push @r2 *main <> ^@r2 (@r12/0_2) @r2

    lsl @r1 @r1 u8 ^M @r6 ^@r12 u8
    push (^@r11/0_2) ^u64 @r12 @r6
    ldp (@r2+2) ^@r11 (u64+0_2) <M> (&&+0_1)
    ldp ^@r4 <M> @r12 u64 u64 ^@r10

    @r10 ^&& @r7 @r1 u64 ^@r6
    lsl (^<M>/0_2) <> (@r11/0_1) ^@r12 *main
    dw @r3 u16 (@r6+2) <M> @r8 u16

    @r2 u16 (u16/0_2) @r8 @r11 &&
    @r1 ^u8 @r4 ^u32
    jmp *main u16 @r9 M
    movk u16 @r5 (*main/0_1) u64 (@r6/0_2) M u16
    mov @r8 u64

    dw (*main/0_2) u64 @r5 @r4 @r9
    movk u32 u32 ^@r8 @r12 @r4
    @r11 @r5 u32 u32 (@r9/1) u16 @r12
    movk ^u16 ^@r6 @r1

    push @r1 (@r2+2) @r7 u16 ^*main

    @r5 <> *main @r10 ^<>
    @r10 @r12 @r4 <> u16
    cmp (@r8+2) (<>+0_1) @r1
    jmk <> u8 ^@r3 @r5
    @r8 @r10 M u8 M ^@r4
    dw && @r1 u16 (<>/1) @r1 @r5
    movk (*block/3) u16 @r8
    jmp @r1 @r6 (@r8/1) (u16+0_2) ^@r1 <M> @r12

    push (@r10/0_2) (u16/2) ^M u64
    movk @r11 @r8 @r6 @r6 @r11 ^u64 *main
    cmp @r10 @r6 u8 ^@r3 @r11 @r9 @r8
    movk @r12 @r6 @r2 &&

    jmp ^@r4 @r12 M @r12 M

    movk @r9 ^@r4 (^@r7/2) @r9 (^@r3+3) ^u32

    ldp u32 u64
    @r2 *block @r2 (@r10+0_1) @r12 @r4 u64
    jmp @r10 @r6 (@r4/3) @r4 <M>

    jmp @r2 @r3 @r8 (u8/0_1) @r5 @r1 M
    push ^@r2 u16 @r8 @r1 @r4 @r6

    dw @r4 ^@r7

    jmp M u16 u16 (@r1/3) <>
    @r8 (@r3+0_1) u16 ^u16 ^@r10 M ^u8 ^&&
    @r5 (u32/0_2) @r11 *block

    lsl @r7 <> u32 @r12
    movk @r8 @r4 @r7 @r6 ^@r4 @r5 u64
    dw @r11 @r1
    cmp ^@r8 u32 ^u64 @r10 ^@r9 @r8
    @r2 <> @r11 (^&&+0_1) ^@r5 u8 @r9

    lsl @r8 @r1 @r5 (u8/3) ^@r5 ^u64

    @r5 @r8 *main u32 ^u64 && <M> <M>
    mov u16 @r2 ^<> @r4 ^@r7 @r6

    @r2 *block u8 (u32+0_2) (^<M>+2) @r10 u8

    jmp && *block
    ldp *block u32 @r3 @r2 @r8 ^<>
    lsl @r2 ^<> @r9 u64 ^<M> *main
    movk ^u64 @r10 @r4
    dw <M> (^u32/2)

    @r1 ^@r1 @r7 *block
    dw *block @r10 u32 ^u16 @r7
    mov @r8 *main &&
    jmp u8 @r10 @r2 <M> *main
    ldp (*main/0_1) M

    jmk ^*main @r4 @r5 ^@r3 (^M/0_1) @r1
    dw @r5 @r1 <M>

    @r5 u32 @r8 u64 (@r8+0_2) *main && *block
    @r12 ^*block @r5 (@r7+0_2) M
    mov @r5 (@r2/3)
    push *main (@r7+0_2) @r3 @r7 ^*block u32
    @r7 @r9 @r5 @r3 (@r10+0_1) <> ^@r5
    jmk (^@r11+0_1) (@r8+1) @r3 @r5 (^@r10+0_2) @r12 @r3

    cmp @r10 && M
    lsl @r1 u16 ^<M> @r6 && M @r11
    @r4 @r4 u64 @r4 @r12 @r11

    dw *block @r2 @r2 && (@r8/2) @r10
    dw *main @r8 ^u64 @r9 @r7
    @r4 @r11 @r3 @r2 && ^@r2 @r11
    dw @r10 @r8 (@r2+0_1) <M> &&

    @r7 ^@r9 @r12

    @r3 @r2 @r1 <M> @r7 @r9 u8 *block

    jmp u8 @r11 *block @r12 (@r2+3) @r2
    @r3 (u8/3) @r10 @r12

    lsl u64 @r8 ^@r8
    cmp @r9 u32 @r7
    movk (&&/2) @r5 M @r7 @r7

    jmk (<M>+3) @r11 *block
    @r12 u8 <M>
    cmp ^u64 @r4 @r2 ^*block M ^M ^@r11
    jmk u8 ^@r9 <M>
    cmp (M/1) u64
    movk @r1 @r10 ^u8 u64
    jmp (M+0_2) u8 @r10 <>
    cmp @r2 @r5
    @r12 @r7 @r7 <>

    dw *block (M+0_1)

    dw @r6 ^@r12

    lsl @r1 ^@r10 <M> u8 @r6
    push @r6 ^*block @r4 @r6 M
    @r8 @r4 u16 @r12 (<>+3) @r12
    push ^@r3 *main u32
    dw @r1 u64

    push u64 u16 (<M>+0_2) &&
    push u16 @r6 (u32/2) u64 @r12 u16
    push ^&& *block
    jmk @r6 @r8 *main ^<> (@r3+0_1) @r1 *block
    @r6 @r10 (@r6+1) @r12 ^@r11 u32
    lsl @r6 u32 <> (@r4+3) (@r6+2) @r1
    ldp @r11 ^@r5 @r7 @r1 ^@r10
    ldp @r2 @r3 @r3 @r4 *block @r12

    @r7 u8 <M> <M>
    lsl u32 ^@r8 @r1
    push @r8 u64 u32 *block

    @r4 ^<M> ^@r1 @r5
    ldp @r9 (@r10/0_1) ^@r8 ^u32 <>

    push @r9 @r10 (@r11/0_2)
    ldp <M> u32 @r6 <> @r11
    jmp (@r5+0_1) @r3 *block
    ldp u64 @r7 @r9 ^@r7 @r5
    mov (@r1/1) ^@r2 (@r9/2) @r5 ^@r4
    push @r12 ^@r3 ^@r3 ^u8 ^@r7 *main
    jmk @r1 M
    @r11 (^*main+1) @r11 ^u32 ^@r12 @r12
    dw (u8/0_2) && @r10
    @r10 @r1 @r5
    @r6 @r6 @r3 <> @r1 (@r12+0_2) *main

    mov ^@r8 (^*block/2) (@r11/3) @r2 u64
    dw ^@r5 @r3 @r9 M @r12
    jmp @r5 @r3 @r2

    lsl @r9 ^u64 && @r5 @r7
    jmk ^@r5 @r11 u16 @r9
    ldp @r6 <> *main
    mov @r10 @r4 ^@r3 u8
    jmp <M> &&
    dw (@r2+1) (@r10+2) (^u32/3) @r2
    mov @r10 @r11
    mov u8 @r5 @r9 ^u32
    @r9 @r9 ^&& u8 @r2
    jmp @r12 u64 ^@r7 *block
    lsl *main *block (@r11+2) (M/1)

    ldp && u32 u64 @r7 @r12 u32 *block
    jmp u64 (*main/3) @r12
    @r12 <M> ^*main @r8 ^u8 u16
    movk *block M (*block+2)

    @r1 (@r8+1) u16 (M+0_1)
    mov ^@r5 *block ^u8 @r11 (u32+0_2) @r1 @r3
    movk ^@r2 *main @r9 @r7 u8 (*main+3)
    ldp @r10 *main @r5 M @r6 ^u64 (@r1+0_2)
    dw ^@r4 *block @r10 (M+1)
    cmp ^@r9 @r12 *main ^M (@r10/0_2) u32 <M>
    push @r9 @r11 && @r1

    @r4 M ^<M> (@r4/1) *block

    mov <M> u32 && ^@r7 @r11
    dw u16 u16 @r8 @r1
    lsl ^@r3 (^u16/3) M ^@r1 ^@r4
    mov @r7 <> (&&+2) @r10 u32 &&
    mov (@r1+3) (^@r11+2)
    push ^u8 @r6 ^@r10 u8
    ldp (*main+2) (@r11+1)
    ldp @r1 *main <>

    ldp ^@r8 ^@r2 ^u8 (^*main/3) (M+3) u64
    ldp (u8+1) @r5 && (^&&+1)
    jmp @r9 @r2 && (u64+1) @r11 (@r2+2) @r5

    ldp <> @r4
    push ^@r4 (^u32+0_1) *main
    cmp ^u32 @r1 && @r5 ^@r2 *main @r4

    movk *block @r1 M u16 ^<M>
    @r5 (^u64+0_2) ^&& @r4 ^u16 *main

    lsl @r12 (@r6+0_2) (<>/0_1) @r3
    jmp ^<M> u8
    jmk <M> <> @r9 ^u8 *block @r2 (^<M>+0_1)

    @r8 u32 u16 @r1 <M>
    @r10 @r3 (^@r5/2) *block u32
    jmk @r5 ^@r10 u32 @r4 u16 @r1
    @r11 u16 @r11 &&

    @r8 (u64/2) ^@r3 @r11

    jmk ^@r6 @r5

    push @r5 @r7 <> (@r11/0_2) <M> &&
    movk (@r6+3) ^&& u64 (u16+0_1) @r1

    cmp u8 <> *main @r7 <M> @r1 @r3
    jmk *block @r6 (@r11+3) (@r11/0_1) <>

    cmp u32 ^<M> @r9 <M> *main
    jmk @r2 @r2 u16
    jmk @r11 u32
    ldp u16 @r8 *main u32 ^@r12 (<M>/3) <M>
    cmp *block (^@r4/2) u64
    dw *main <>
    push ^@r9 *block
    @r2 @r4 @r7
    lsl @r2 u8 (^@r5/1) @r11 @r7
    push @r5 (u16+2) u64 u16

    @r9 @r7 @r6 @r5
    @r5 @r3 ^*block @r2

    jmk @r1 u16 M @r1 ^@r3 (@r1+0_2) M

    jmk *block @r2 u32

    ldp @r7 ^M @r8 @r3 @r3 ^@r4 ^@r9
    ldp <> @r1 ^u8 @r6 @r7
    movk @r1 <M> @r7 *block u64 @r7
    mov u8 u16 *main @r4 u32 <M> @r3
    lsl (@r4+3) ^u64
    movk (u64/1) (@r3/0_1) u64

    push (u8+0_1) M @r9
    ldp @r11 ^u16 ^*block && u64 @r12
    push (u64+3) *block @r12 @r8
    push <> @r5 (@r6/2) M @r8
    lsl ^u16 ^@r10 u8 <> @r3 <M>

    ldp *block *block
    ldp @r7 u8 (@r12+0_1) (@r11/2) ^@r2 @r6
    dw @r7 ^@r5 M *block @r6
    movk @r1 ^@r3 u8 @r6 @r1 @r10 (M/2)

    @r5 @r2 (@r10/3) M
    mov @r3 && @r11 u32 (@r4+0_2)
    @r2 ^<> ^@r12 *main u64 ^u64 @r1 @r7
    ldp @r8 *block @r7 @r6 @r6
    @r12 @r3 @r8 <M> @r1 *main (@r6+1) @r5
    movk @r7 u8 @r9 M

    jmp @r9 @r8 (@r8+0_2) @r4

    mov && @r6 (@r10+0_2) u8 ^@r1 <M>
    movk @r4 u8 (u32+3) @r12

    @r6 @r3 ^@r4 @r11
    lsl @r1 @r12 (&&/3) && @r11
    jmp @r10 u8
    jmk (&&+3) ^<M> <M> u8 @r1

    movk @r6 (@r8+0_2) *main

    ldp ^u8 ^@r10
    ldp ^@r3 && u16 <M> ^<> ^@r2 @r7
    jmp @r8 M (^u32+2) M
    push (@r10+2) (@r11/2) @r6 ^u64 @r9
    ldp <> @r7 ^@r4 (^&&/0_2)
    cmp @r10 ^@r8 (@r6+0_1) ^M
    jmp (^@r11+1) @r10 @r9 @r9 @r8
    lsl @r4 ^@r1 ^@r2 @r6 u64 @r9
    mov && <> @r2 u64

    cmp ^*main @r1 @r6

    ldp u16 ^@r3
    mov ^<> @r3 ^@r9
    jmp @r8 @r6 @r3 ^u16 @r9 ^M

