    dw (^u8/1) @r2 (^u64+2) @r8 ^@r6 @r8 *block
    movk ^<> (<M>/0_2) <M> M ^@r11
    movk (@r12+2) ^@r4 ^u64 M
    ldp @r10 @r9 (@r2/2) <>

    jmp @r9 u16 <M>
    dw ^*main ^@r7 @r3 @r8
    cmp ^@r11 ^@r12 <M> ^u64

    push (u32/3) (@r6+0_1) &&
    mov M && *main ^@r9 ^@r12

    movk @r5 && @r10 @r7 u64 (@r10+1) u32
    jmp ^@r12 u16 u32 ^@r7 @r2 *main @r3

    movk && ^@r4 &&
    push @r6 &&
    mov (u16+1) u32 @r11
    @r1 ^<M> @r1 @r10 @r4 @r1 @r12
    push (*main+0_2) && <> ^<M> @r6 && (@r10+3)

    mov @r10 <M> @r4 @r2 ^u16
    @r12 @r10 @r10 ^@r11 u8 u64
    ldp @r1 <> *main (*block/0_1)
    @r2 ^@r11 @r8 ^M ^u16 (u8/0_1) (@r3+0_1) ^@r9
    ldp (@r5+3) u32 @r12 ^*main @r12
    mov M u8 *main && @r5 ^@r5
    @r4 ^@r3 ^u16
    @r10 @r6 *block @r11 ^@r12

    @r11 @r12 @r5 @r9 @r5 *block @r12
    jmp ^@r7 @r2 *main
    ldp @r11 ^@r10 @r1

    @r5 @r4 (@r6+3)
    @r9 *main <> && && ^&&

    mov (u64/1) (u16+3) (@r4+0_1) @r3 u16 @r2
    @r1 @r12 @r9 @r7
    push @r12 u8 @r12 @r8 (@r10+1) @r5
    ldp ^*main <M> <> @r9 (M/3) u16
    movk @r1 @r1 u16 @r4 @r3 ^u8
    @r5 @r9 u8 @r1 u16 (M/1) u8
    @r5 <M> (^M+2) (@r12/3) @r1 *main <> u8

    push ^&& @r8 *block @r7 (@r1+3) @r5
    lsl <> @r1 *main
    push u64 ^@r12
    mov @r10 @r6 ^@r7 u16 ^u8 ^@r4
    @r12 && @r12 u8 u8
    lsl M M @r9 && *block
    jmk @r7 ^@r2 ^@r12 @r11 @r1 @r10 (u16/1)

    ldp <> u16 (@r4/1) (@r12/0_2)
    @r6 *block @r10 <M> @r3 @r11
    @r1 u8 *block

    cmp @r6 u64 (@r2+2) <M>
    cmp @r3 (M/0_2) @r6 <> @r12
    jmk @r5 u8 u32 <M> *main <>
    lsl u64 @r9 @r10
    @r7 (M/3) @r5 (*main/1) M @r2 ^u16 u16
    lsl ^@r6 @r9
    mov u64 ^u8
    jmk *main *block @r11 &&
    cmp u16 ^u8 *main
    jmp M @r12 (@r6+3) && @r12 @r4 @r6

    jmp (@r6+3) ^@r4 ^@r11

    movk ^@r4 u8 @r12 *block (@r12/0_2) ^@r8 ^u32
    @r1 @r10 @r10 M
    jmk (@r3/0_1) ^M <> u64 @r2
    jmk @r10 @r6
    movk u64 u64 @r12 @r8
    mov @r10 ^@r5 (@r5/0_1) @r5
    ldp *block @r4 M
    cmp ^u8 @r5 u32 ^@r5

    ldp @r4 *main
    @r2 @r4 <> ^@r6 (@r9+0_2)
    ldp @r11 ^@r6 ^@r5 ^@r6 (^@r3/3) @r9 <M>
    cmp u64 @r1 u8 @r5 &&
    ldp @r5 u32 u64

    dw (@r3/0_2) @r8 @r3 (u16+0_2) M ^@r6 @r10
    push (@r6/2) (@r3+0_2) (<>+1) (@r8+0_2) && <>

    dw (@r7+3) @r6 @r6 (u32/3) @r1 @r1
    cmp ^@r2 (@r4+1)
    mov @r5 *block

    lsl u8 u8 @r7 <M> &&
    push ^*block @r10

    jmp @r10 (&&+1)
    jmp *block @r5 (^u32+0_1)

    @r3 @r6 ^u32 @r11 u32 u64 @r8
    @r12 *main (@r3+1) @r1 (@r12+2) @r7 @r7

    movk u32 && @r10
    dw u16 ^@r9

    push (@r4+1) @r8 @r1 ^@r10
    dw ^@r8 @r8 ^@r5 (<>+0_1) @r1 ^<>
    @r1 ^<> (^@r7/0_1) (@r9+3) u8 @r4 (<>/0_2)
    jmk <> u8
    cmp @r10 u32 @r4 @r12 @r10
    jmp @r2 u8

    @r10 u8 @r12
    cmp <M> @r1 @r3 (@r10/2) @r6

    mov @r5 @r8 &&

    mov (*main+3) <M> *block @r6 (u64/3) @r4 u8
    jmk @r2 @r5 u32 ^@r1
    jmk (@r12+2) @r8 @r10 (@r12/3) @r1
    cmp *block u8 <> @r4
    cmp (@r6/1) @r2 @r2 ^@r7

    cmp (^<M>/1) M ^<M>
    @r3 (^@r8+3) @r5 (@r2+2) @r5 u16 @r10 u16

    mov @r6 u64 ^@r5 (u64+0_2) && @r7
    dw M @r5 (@r5/0_2)
    dw *block @r1 ^@r2 &&
    movk @r7 u16 @r6 u64 @r5
    jmp @r7 ^@r9 *main (@r9/3) <M> @r6 @r5

    ldp u64 u64

    @r1 @r11 M u8 ^@r1 <> @r12 (@r11+1)

    jmp ^u64 @r12 @r4 @r11 <M> <M> @r12
    cmp ^@r11 @r2 &&
    movk ^@r10 u16 M <M> ^@r1 <M> ^M
    @r6 @r5 M

    push @r1 (@r3/2)
    jmp ^u8 u32 ^@r9 (u32/0_2)

    @r1 (M+3) *block @r4 ^<M> *block
    jmp *block @r6 u32
    jmp *main @r4 (u32/3) u32
    @r10 @r12 @r1 @r2 @r7 @r2 @r12
    movk @r11 ^@r6 @r2 (@r2/0_2)
    ldp (^<M>+2) (u8+3) u16 @r8

    movk && u32 u8 @r8 u64

    movk @r4 <> M

    dw M *block (^*block+2)
    movk ^M u8
    @r6 u64 @r1 *block (^@r11/1)
    movk @r9 @r6 ^@r9
    ldp <> *block (<>+0_2)
    ldp M (&&/0_2) *main
    jmp @r4 @r8 *main <> u64 @r10
    jmp ^@r1 @r1 ^*block @r10 &&
    ldp @r5 @r9
    mov ^@r4 ^u32 (@r12/0_2) u16 u32 ^@r7 <M>
    jmk @r3 u8 @r2
    jmk u64 @r2 (^@r2/2) && ^<> (^u32+2) (@r3/0_1)
    @r2 ^@r1 M (<>/3) @r10 @r6

    dw @r3 *block (u32+3) @r8 *block @r7
    dw (@r1+1) && @r7 (@r6+2) (@r6/0_1)
    @r3 ^&& *block @r2 *main
    lsl @r8 @r10 @r1
    push <> u64 M @r4 @r1 (@r12/0_1)
    jmp u64 (@r6+1) u8 @r2 ^@r4

    @r12 (u64+0_1) *main u32 (u32/0_1)
    movk (M/2) u64
    jmp @r3 && @r6 @r6 ^@r12 @r7
    jmk u8 u64 @r6 @r5 @r11 u16 ^@r2

    jmk M ^*block @r1
    @r2 (^<>+0_1) @r11 ^<M> (@r6+2) u8 <M> @r10

    dw @r11 @r7 *main && @r2
    jmk @r3 @r3 ^u8 @r6 ^@r2 (M/3)

    dw u16 M ^@r8 *main (@r2/3) (u64+2) @r11
    cmp <M> && u16 (@r5+3) <M> @r9 @r12

    ldp (u16+3) <> ^@r6 (u8/0_1) @r4 u8

    @r7 @r3 @r2

    movk @r5 ^u8 ^u16
    jmk (u32+0_1) ^@r5 ^u64 @r10 @r8
    @r1 ^@r9 <M> (^u16/3)
    jmp u8 ^&& (*main+3) @r12 @r3 u16 @r2

    @r12 u64 (^u8/3) ^u32 u8 @r2 (@r7+0_1)

    lsl *block @r2 ^@r11 M

    dw (<M>/3) @r2 u64 @r6
    push @r10 (@r5/0_1) <M> (u32/2) @r6 u32
    mov u64 (@r7/0_2) (@r3+3) <M> (u8/0_1) @r9

    @r8 *block *main
    dw M (@r10/0_1) (@r11+3) u32 *main M *main

    jmp && @r10 && @r4 @r1 (@r8/1)
    push ^@r4 u32 @r9 @r4
    jmk <> (@r8/0_1) @r2 ^@r1
    movk ^M ^@r8 u8 (@r2/0_1) @r8 u8

    @r10 M @r8 @r8 @r2 @r7
    jmp @r3 @r3 (@r5/3) (^@r12+3) @r6 @r4
    lsl (^*block+2) (<M>+1) (*block+0_2)
    dw @r8 (@r6/2) ^@r7 ^u32 ^@r11
    jmp @r8 (u16+0_1)
    dw @r8 ^@r11 @r11 ^u8
    push @r8 @r7 <M> (@r3/1)
    movk *main &&
    @r7 u32 ^&& @r6 (u16/0_2) *main
    jmk @r3 @r11 *block @r7
    push (@r12/0_2) @r6 M
    @r11 u16 && (<M>/1) @r1
    jmp ^@r11 @r10 @r12 *block
    mov ^@r6 ^@r10 @r7 @r5 M (^@r6/2)
    @r7 ^*main @r2 u64 (@r9+2) @r3 ^*block u64
    @r3 *block (<>+3) u32 ^u16 ^u16
    @r11 ^@r3 (<>/1) ^u16
    @r3 *main ^@r7
    push @r12 @r4
    mov (@r4/1) u64 @r8 @r2 ^@r11
    cmp @r9 (@r5+1) ^<M>
    push @r2 ^@r5 (<M>/0_1) @r3 @r7 <>
    dw (u16/0_1) u64
    push ^&& @r1 u32 ^@r4
    cmp && @r5 ^@r1 ^@r9 <> <M> @r5
    @r11 <M> *main @r3 @r9
    mov u8 (u32/0_1) <> (^u64+1) M u16

    cmp (^u64/2) @r2 @r5 u8
    movk ^u8 u16 M @r3
    cmp ^*block @r11 @r11 (@r4+0_2) *main (u8+2)
    jmp @r5 @r3 @r5
    movk <> (@r7+2) M (@r9/2) @r8
    dw @r2 (^@r10+2) <M> @r9

    @r11 ^@r5 @r12 (^u64/0_1) @r8

    dw (@r2/0_1) @r4 @r12 ^@r8
    movk @r2 u64 &&
    cmp @r10 @r8 (@r11/3) <M> ^u64

    cmp (@r5+3) @r12 ^*block u16 @r12 u32 @r11

    @r2 ^@r12 (u32/3) @r6 u32 (M+3) u16 ^@r9

    jmp *main @r10 <> ^*block @r4 @r1
    jmp M ^@r2 <> @r7 @r1 @r9

    @r6 @r3 ^@r9 @r10
    cmp ^@r4 ^u8 ^@r11 ^@r3 *main u64
    mov @r12 *main ^@r3 u64
    push @r11 @r2 (<M>+3)
    push @r8 M

    mov @r9 && @r3 <> &&
    push ^u8 @r2 @r8 ^M
    @r10 @r6 @r12
    push ^@r6 @r8 ^@r7 M @r2 u16 <M>
    lsl @r3 ^@r6 <> *main @r7 @r12 ^M
    lsl ^u32 u8 *main @r6 <> ^@r9

    lsl M (^@r5+3)
    jmp @r4 @r5
    ldp *main <M>
    movk *block (@r8/0_2)

    cmp u16 @r9 *main u32 @r4 (@r3/1) @r7

    cmp ^@r1 @r12 @r3
    @r4 @r3 ^@r1 ^u16 u16 @r10

    movk @r6 <M> M @r9 @r9
    lsl ^@r8 @r4 (@r8/0_1) @r1 <> *main ^<M>
    push (<M>+0_2) && ^u32 @r10 (@r7/1) @r8 @r9

    @r5 ^@r10 @r4 ^u8 @r8 <>

    mov ^@r4 ^u8
    jmk ^@r1 (@r3+2) <> @r6 *main

    @r5 u64 (@r6+0_2) <M> *block @r10 @r6
    mov (<>+0_2) && <> @r2 @r10 @r9 @r11

    lsl (@r1/0_1) ^@r5 u32 ^@r3 *main @r3 @r5
    dw (<>+0_1) @r2 <M> @r7
    cmp u16 (^u8/3) *block @r9 (^@r3/1) u8 u32

    movk u32 ^@r6 @r2 u16
    mov u32 u8
    lsl ^@r5 @r2 u8 @r9 (u32+0_1) (u16/0_2)

    push ^<M> u16 ^@r10 u8 ^@r5 @r2
    movk @r7 *block @r11 <M> (u8+1) u64
    @r12 ^@r12 @r10 ^@r4

    @r3 @r10 M ^M
    ldp @r2 u16 ^@r2 @r4 (@r2/2) *block
    dw ^@r10 ^*block u64 ^u16 ^@r5 ^<> @r8
    movk ^*block @r9 (@r11/3)
    dw u16 u64 ^@r1 u8 @r10 <M> <M>
    push @r1 (^*block+3) ^@r3 @r4 ^<> (M/0_1) u8
    movk ^@r10 @r11 (u32/2) (@r5+2) @r12
    push @r3 (M/0_2) @r2 @r3 @r1
    jmk ^@r11 @r2
    lsl @r12 (u64+0_1) @r7 (^@r3/3) @r9 <>
    movk @r10 @r4 ^@r4
    @r9 && && && (*block/0_1) (@r3/1)

    @r2 ^@r9 u16 ^<M> @r5 @r4 ^@r7 ^@r12
    ldp @r5 (@r3+0_2) ^@r10
    @r11 @r5 u8

    mov *block @r11 && *block (^@r5+3) @r2

    @r7 @r9 M @r12 ^@r1 u64
    jmk @r10 ^u32

    mov (<M>/0_2) <M> ^@r1 @r8
    jmp @r8 ^@r10 ^u32
    movk @r1 u8 @r1 (@r6+0_1) u8
    lsl @r11 @r2 (^u16+0_2) *block <>
    lsl @r2 <M> ^@r7 @r4 @r4 ^@r7
    jmp @r12 @r4 @r2
    mov u64 u16 (@r10/1) (u16/1)
    jmp u64 @r5 @r4 @r7 u8
    dw u64 @r6 <M> @r12 @r11 @r4 ^@r3
    mov ^@r10 @r6 ^*block u64 @r11 @r12
    jmk @r6 <M> ^@r7 ^<> ^@r3
    mov @r2 <M> @r1 @r9
    movk ^@r12 u32 ^@r12 <M> @r10
    lsl (@r4/0_2) ^@r1 (@r7+1)

    @r1 @r7 @r11 @r3
    cmp @r10 u32 M @r7 (u16/2) u32 @r9
    jmk (^@r12+0_2) @r9 @r5

    jmp (@r2/1) @r11 (@r3+1) ^@r1 @r6 ^<> <>
    movk && (u16+0_1) (@r7/0_2)

    jmp ^<M> @r7 (^@r8+3) *block
    jmk @r8 (M/3) ^u16 (<M>/3) <> <>
    push (@r1+2) <> (u32+1) @r6 @r5 @r12 @r12
    jmk ^&& (@r9/3) *main @r3 @r4 ^u16 @r6
    @r4 (&&/1) @r1 && u64 @r5 @r6
    mov @r12 @r11 *main *main
    dw <M> u8 ^@r10
    push ^&& @r6 @r12
    lsl @r6 @r1 <M> @r11 (&&+3) @r2

    movk (u32/1) @r11 u8 @r10 @r7 @r2 *main
    mov @r11 @r10 @r6 u32 u16
    ldp u16 @r2

    jmk M M
    dw (@r4+1) M *block
    dw @r4 @r8 <M> ^@r4 u64 @r6 (<M>/0_2)
    push ^u64 <>

    dw u64 ^*main <M> ^@r2

    @r9 ^@r11 ^@r10 u32 @r9
    movk (@r11/0_2) (<M>/0_1) u16 @r9 ^<M> u64
    @r8 u8 (@r1+0_2) *main (^@r4/2) @r5 u8
    movk (u16/1) M <> (&&+0_1) <M>
    cmp (<M>+0_1) ^@r3
    movk ^@r6 @r4 M @r1
    ldp (@r8/0_2) (u32/0_2) u8 @r10 @r7
    lsl u8 (@r4+3) u32 @r3
    jmk @r4 u32 u64 *block @r11

    mov @r3 @r2 u64 <M> ^*main @r4 @r4

    lsl (@r11/2) @r4 @r10 @r12 @r3 u8
    push (u64+1) @r10 ^M @r4 u32 (@r8+1)
    jmk (u32/2) (@r7+2) @r4 @r3 u16 ^u16 u16
    @r10 ^@r9 @r1 (u32/0_2) ^@r7 u32 u8 *main
    ldp ^@r1 (u8/3) ^@r4
    jmk (@r11+1) u64 @r1 @r11 ^@r7
    @r8 (@r3/3) (@r6/0_2) @r2 (^@r7/2)
    movk ^&& u8 *block (@r11+0_1)
    lsl @r3 u64 *block ^M
    mov ^@r6 ^@r5 (@r6/1)

    dw u8 (@r5/2) ^@r1 @r1
    ldp @r4 ^u64 ^<>
    dw ^u8 <M> @r12

    dw @r5 @r8 (@r8+1)
    cmp *main @r2 @r11

    @r9 @r3 ^<> @r4 (@r2/0_1) && <> <>
    mov ^@r12 @r3 (^u64+0_1)
    jmp ^@r5 *main @r5 u16 && ^u32
    ldp ^@r5 *main ^@r7
    @r5 u32 @r1 @r6 @r11 @r9
    jmk @r11 @r5 @r6 u64
    @r11 (@r8/0_1) u32 @r2 @r1 M @r8 ^@r12
    jmk (@r4/0_2) @r8 ^@r3 <> ^@r1 (u16+1)
    cmp @r4 u16 u16 @r5 @r6
    @r4 @r8 @r11 <M> @r2
    lsl ^@r5 @r6
    @r1 @r8 @r12
    mov ^u16 ^u64 ^@r10 @r4 @r12

    mov ^u32 M @r9 @r8 @r8
    push *block *block *block ^&& @r10 @r3 u8

    jmk M @r10 ^@r2
    lsl <> u32 @r1 M
    push <M> @r3 (^u16/1)
    movk @r4 <M> (^@r11+0_2) ^@r12 @r10

    mov <M> @r10 (M/0_1) @r9 (@r12/1)
    lsl ^u32 @r9 @r12 @r2 u64 @r4

    push ^u16 (@r8+2) @r10 ^@r7 ^@r2 @r2
    jmk @r5 u16 && ^@r7 u8 @r12 @r12

    ldp (@r11+0_1) *block u16
    dw @r8 @r6 (M+0_1) @r7 @r9 u8

    movk @r8 u32 u64 &&
    lsl u32 (@r10+0_2) u8 @r4 @r11 (@r7+0_1) u64
    lsl ^@r7 <> @r8 @r6 @r1 &&

    @r4 @r12 @r7
    mov @r5 @r5 *block u64

    mov ^u16 && ^@r9 (@r3/2)
    @r4 && && u32
    push ^@r12 (*block/1) @r10 ^*main @r8

    @r9 u8 *block ^@r8 @r1 ^u8 (<M>/1)
    cmp <M> @r12 @r5 @r10
    jmk *main *block
    @r9 *main @r5 @r3 u8
    dw *block @r8 @r9 (@r7+2)
    @r1 @r9 ^u16 @r3 @r9 (^u8+0_1) @r1
    jmk u16 @r10 (@r9+3)
    push (@r9/0_2) ^u32
    push u32 u32 @r4 <> @r7 (^u64+0_2)
    dw ^@r3 u16
    dw @r9 && @r4 ^<M> @r3 *block @r8
    jmp u8 u16 @r12
    push @r9 @r1 <M> u8 ^u16

    push (u32/2) (^*main/2) @r5 *main @r11 *main @r11

    ldp @r4 @r9 @r8 @r1 (^@r3+0_1)

    lsl (@r6/3) u32 @r6 @r8 @r11 @r11
    movk (@r5+0_2) @r1 ^M ^@r2 u64 ^@r6
    @r5 *block u8
    @r3 ^M <M> @r6 @r7
    jmk @r10 <>
    @r7 u16 @r7 u32

    ldp (@r12/2) (*main+1) <> @r6 @r11
    cmp *block @r8 @r7 @r3
    lsl ^@r9 @r4
    movk @r3 (u16+0_1)
    jmp M @r5 @r10 (@r1/1)
    jmp ^@r1 *main @r12 u16 (^&&/1) @r4

    jmk (^&&/2) @r12 &&
    movk ^@r2 *main u64

    @r4 @r6 @r12

    cmp @r10 <>

    cmp @r5 ^@r10 @r11 ^@r8
    push ^@r1 @r2 (^@r6+2)
    lsl @r6 (u8+0_1) ^@r11 u8 *block

    jmp @r7 u32 ^M && @r3 *main <M>
    lsl M (^@r10+3)
    movk u16 (^@r11+0_1) u64
    movk @r6 *block @r2
    @r8 ^@r12 ^@r11 @r8 (@r11/0_2) @r5

    dw ^<M> u16 M
    @r6 ^*block @r2 *main @r3 *main
    @r12 @r7 (@r7/2)
    jmk (@r9/2) ^u8 *main *block *main ^<M> @r2
    jmp ^@r1 && u64 @r4 ^&&

    ldp u32 @r7 @r6
    mov @r4 M (@r6/0_1) <> M <> (@r2/0_2)
    push u16 (@r5+1) *block (@r3+0_2) @r12 ^@r6
    lsl @r6 (@r9+2) @r7 (&&+2)
    ldp u32 M u32 ^<> @r10

    @r11 u16 ^u16 ^@r4 @r1 @r7 u8 (*block+0_2)
    mov @r9 u64 ^<>

    movk (^@r12+0_2) @r4 *main @r1
    dw M @r1 (*main+0_2) (u32/2) ^@r3
    dw u8 (*block/2)
    @r7 @r2 u16 @r7 ^@r2 <M> ^@r3 *main
    ldp @r12 && (@r1+0_2) <M> && <M> @r7

    @r3 ^@r12 <> @r4 @r7 ^@r3 (@r1+0_1)

    @r1 @r10 ^@r12

    dw && @r5 @r8

    @r1 @r1 && @r9
    @r7 @r9 @r5 (M+2) (@r5+2) u32 @r1
    jmk && @r8 @r12 @r3
    lsl @r5 ^@r5 ^&& @r4 @r6 @r11 *block

    ldp @r8 (@r2+3) ^@r12 (<M>/0_2) <> @r2 ^@r1
    ldp (u64+2) ^u8 @r6 (<M>+0_2) <> u64 (@r3/1)
    jmk u64 @r12 <M> u64 ^@r9 ^@r6
    movk @r5 @r2 ^u64 (@r9/2) ^@r9
    cmp @r3 ^@r3
    jmk (@r6+2) M @r1 *block @r4 @r1
    @r4 *main @r10 @r9 u16 @r2 @r6
    @r6 <> *block
    ldp @r12 ^u64 (<>/1) (@r12/0_1) @r10 @r5 @r7

    jmk (u8/3) (@r11/0_2) @r11
    mov <> &&
    @r12 u64 (*main+1)
    dw ^@r6 @r5 *main ^u16 *main *main
    push @r10 @r5 ^<M> (@r2/3) @r5 (^@r5+0_2) u8
    push ^*block (@r11+2) (u32/0_1) @r4 @r4
    push @r3 <M> (@r10+2)

    ldp u32 *block (@r5/0_1) u8 u8 u8

    push @r4 @r12 (@r1/0_2) @r9

    @r10 *main @r11 @r6 u8 u8 u8 @r8
    jmk @r3 @r12 @r11

    ldp u16 u8

    cmp (^*main+2) M <> @r3 (^@r10/0_2)

    dw M <M> *main @r3 @r3
    ldp u16 *main (@r10+0_2) ^*main @r11
    lsl ^@r3 @r12 @r9 (<M>/1) (@r1+0_1) ^@r8 M
    cmp u64 @r10 u8
    jmp <M> @r11 ^@r5 <M> u32 <M> ^*main
    dw @r2 (u64+3) @r12 ^@r11 @r6 u64
    @r4 (^@r12/2) @r8 *block

    dw u64 u32 ^@r1 ^@r12
    ldp @r4 <> (^u32/3) ^@r9 @r10 @r3
    dw *block (@r12/0_2) @r2 @r6 (@r1+3) u8

    jmk @r10 @r6 (@r5/1) (^<>+0_2) ^u64
    dw (@r6+1) M @r11 u16 (^@r9+3) @r10
    movk @r3 @r10 M @r4

    dw (^*main/0_1) @r1 @r4 ^@r5 @r2

    dw ^*main (@r8+1) ^@r11 *block
    movk *main @r10 && u8
    lsl @r9 <M> u16

    push @r7 u32 (@r9/1) ^@r11 M

    mov ^u32 @r2 (<M>+3) ^u32

    @r9 <M> <M> ^u8 @r5 u16 @r8
    jmp @r1 @r1
    @r9 *block @r7 @r12 u16 ^@r5
    jmp (^u16/0_1) @r11 <M>
    push @r1 && u8
    cmp @r6 @r2 <M> u32 (u16+0_2) (u32/1) @r3

    movk (M/0_1) @r7 (@r3+1) @r11 u32 (^@r6/0_2) @r7

    jmp @r5 @r1 @r3
    dw *main @r5 u32
    push <M> @r9 @r6 @r2 @r1
    push @r10 u8 *block @r10 <> *main

    movk @r9 ^@r11 @r10 *main
    lsl <M> <M> u8 ^*main
    dw @r10 *block (@r12+2) (@r6+0_1) @r1 @r9
    @r5 @r10 (@r3/0_1) @r1 (@r4/2) *block
    @r11 *main @r11
    jmk @r4 @r8 ^<M>
    lsl (@r8+1) <> ^@r8
    ldp u8 <M> ^@r12

    dw @r7 u32 (^<>/1) u16 (u64+3)
    cmp (@r8/3) ^u8
    push u32 && && u32 (^@r10+3) @r3

    cmp ^@r10 *block u8 @r3 ^u32 @r1

    @r2 (^u32+3) M u8 ^u32 (*main+1) @r2
    dw ^@r1 u64 *main ^@r9

    ldp *block ^@r12 (<M>+1) u64 @r12 @r9
    jmp ^@r12 @r7 (u8/0_2) (u16+1) u32
    jmp *main u16 ^u16 @r7 <> ^u8 (@r7/0_2)

    cmp @r7 ^@r3 u64 @r6
    mov (&&+0_1) ^*block (@r9/0_2) ^@r1 @r12
    ldp u8 (@r9/0_1) @r2 ^@r3
    @r11 *main @r1
    dw ^@r5 M (@r8/3) ^*main @r5 ^@r3
    @r1 (@r6+0_2) ^@r8 <M> M ^@r10 @r6
    @r6 @r12 (*main+0_1) ^@r5 u8

    jmk @r10 <M> @r3 M @r12 ^@r1

    @r4 @r3 u16
    lsl @r6 @r4 @r5
    mov u8 u64 *block
    push @r4 ^@r12
    push <> @r3 u32 @r12 @r4 (^u16+3)
    @r10 M u16 (@r5/0_2) (^@r4/1) @r11 (@r7/0_2) (@r7+0_2)
    cmp <> (*main/2)
    jmk ^@r1 @r2 *main @r4 (*block+0_2) u16 *main
    movk (^u32+0_1) @r1
    @r6 @r12 @r8 *block u32 (@r6/0_1)
    jmp u32 ^@r4 @r11 @r12
    ldp u16 M ^@r7 @r2 @r12 @r6 (^u16/0_1)
    cmp ^<M> *main
    dw ^@r1 @r12 @r6 u32
    ldp (@r7/1) @r5 @r6
    @r8 (@r4+0_1) ^<> @r3
    jmk @r8 (&&+1) ^u16 (M+0_1)

    @r11 @r11 @r12 ^@r8 @r5 <M> (*block+0_2) (@r10+0_2)
    push ^@r3 ^u8

    movk @r4 <>
    @r2 ^u64 @r2 u32 *main @r12 @r10
    cmp ^u16 @r2 M ^@r8 ^@r8 ^u16 ^@r6
    @r9 @r11 @r2 (@r1+3)

    @r2 @r10 @r10 @r12 @r11 ^u32
    lsl u8 *main <M> @r9 (^u64/0_2)

    push (@r3+1) @r3 @r11 ^@r12 @r12 ^*block
    dw u8 ^@r4 @r2
    dw u8 <> (u16+0_2)

    jmp @r8 M
    @r7 (u16/0_1) @r1 *main
    movk (@r1/3) *main ^<> u8

    @r11 (@r5/1) ^@r1

    dw @r8 ^@r10 ^*main (<M>/2)
    mov @r5 (@r11+0_1)

    cmp @r5 (@r2+3) @r3 @r4 <> *main
    @r5 (@r6/3) (<M>/0_1) ^u32 *main
