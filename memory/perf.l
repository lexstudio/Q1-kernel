    dw (^u8/1) @r2 (^u64+2) @r8 ^@r6 @r8 *block
    movk ^<> (<M>/0_2) <M> M ^@r11
    movk (@r12+2) ^@r4 ^u64 M
    ldp @r10 @r9 (@r2/2) <>

    jmp @r9 u16 <M>
    dw ^*main ^@r7 @r3 @r8
    cmp ^@r11 ^@r12 <M> ^u64

    push (u32/3) (@r6+0_1) &&
    mov M && *main ^@r9 ^@r12

    movk @r5 && @r10 @r7 u64 (@r10+1) u32
    jmp ^@r12 u16 u32 ^@r7 @r2 *main @r3

    movk && ^@r4 &&
    push @r6 &&
    mov (u16+1) u32 @r11
    @r1 ^<M> @r1 @r10 @r4 @r1 @r12
    push (*main+0_2) && <> ^<M> @r6 && (@r10+3)

    mov @r10 <M> @r4 @r2 ^u16
    @r12 @r10 @r10 ^@r11 u8 u64
    ldp @r1 <> *main (*block/0_1)
    @r2 ^@r11 @r8 ^M ^u16 (u8/0_1) (@r3+0_1) ^@r9
    ldp (@r5+3) u32 @r12 ^*main @r12
    mov M u8 *main && @r5 ^@r5
    @r4 ^@r3 ^u16
    @r10 @r6 *block @r11 ^@r12

    @r11 @r12 @r5 @r9 @r5 *block @r12
    jmp ^@r7 @r2 *main
    ldp @r11 ^@r10 @r1

    @r5 @r4 (@r6+3)
    @r9 *main <> && && ^&&

    mov (u64/1) (u16+3) (@r4+0_1) @r3 u16 @r2
    @r1 @r12 @r9 @r7
    push @r12 u8 @r12 @r8 (@r10+1) @r5
    ldp ^*main <M> <> @r9 (M/3) u16
    movk @r1 @r1 u16 @r4 @r3 ^u8
    @r5 @r9 u8 @r1 u16 (M/1) u8
    @r5 <M> (^M+2) (@r12/3) @r1 *main <> u8

    push ^&& @r8 *block @r7 (@r1+3) @r5
    lsl <> @r1 *main
    push u64 ^@r12
    mov @r10 @r6 ^@r7 u16 ^u8 ^@r4
    @r12 && @r12 u8 u8
    lsl M M @r9 && *block
    jmk @r7 ^@r2 ^@r12 @r11 @r1 @r10 (u16/1)

    ldp <> u16 (@r4/1) (@r12/0_2)
    @r6 *block @r10 <M> @r3 @r11
    @r1 u8 *block

    cmp @r6 u64 (@r2+2) <M>
    cmp @r3 (M/0_2) @r6 <> @r12
    jmk @r5 u8 u32 <M> *main <>
    lsl u64 @r9 @r10
    @r7 (M/3) @r5 (*main/1) M @r2 ^u16 u16
    lsl ^@r6 @r9
    mov u64 ^u8
    jmk *main *block @r11 &&
    cmp u16 ^u8 *main
    jmp M @r12 (@r6+3) && @r12 @r4 @r6

    jmp (@r6+3) ^@r4 ^@r11

    movk ^@r4 u8 @r12 *block (@r12/0_2) ^@r8 ^u32
    @r1 @r10 @r10 M
    jmk (@r3/0_1) ^M <> u64 @r2
    jmk @r10 @r6
    movk u64 u64 @r12 @r8
    mov @r10 ^@r5 (@r5/0_1) @r5
    ldp *block @r4 M
    cmp ^u8 @r5 u32 ^@r5

    ldp @r4 *main
    @r2 @r4 <> ^@r6 (@r9+0_2)
    ldp @r11 ^@r6 ^@r5 ^@r6 (^@r3/3) @r9 <M>
    cmp u64 @r1 u8 @r5 &&
    ldp @r5 u32 u64

    dw (@r3/0_2) @r8 @r3 (u16+0_2) M ^@r6 @r10
    push (@r6/2) (@r3+0_2) (<>+1) (@r8+0_2) && <>

    dw (@r7+3) @r6 @r6 (u32/3) @r1 @r1
    cmp ^@r2 (@r4+1)
    mov @r5 *block

    lsl u8 u8 @r7 <M> &&
    push ^*block @r10

    jmp @r10 (&&+1)
    jmp *block @r5 (^u32+0_1)

    @r3 @r6 ^u32 @r11 u32 u64 @r8
    @r12 *main (@r3+1) @r1 (@r12+2) @r7 @r7

    movk u32 && @r10
    dw u16 ^@r9

    push (@r4+1) @r8 @r1 ^@r10
    dw ^@r8 @r8 ^@r5 (<>+0_1) @r1 ^<>
    @r1 ^<> (^@r7/0_1) (@r9+3) u8 @r4 (<>/0_2)
    jmk <> u8
    cmp @r10 u32 @r4 @r12 @r10
    jmp @r2 u8

    @r10 u8 @r12
    cmp <M> @r1 @r3 (@r10/2) @r6

    mov @r5 @r8 &&

    mov (*main+3) <M> *block @r6 (u64/3) @r4 u8
    jmk @r2 @r5 u32 ^@r1
    jmk (@r12+2) @r8 @r10 (@r12/3) @r1
    cmp *block u8 <> @r4
    cmp (@r6/1) @r2 @r2 ^@r7

    cmp (^<M>/1) M ^<M>
    @r3 (^@r8+3) @r5 (@r2+2) @r5 u16 @r10 u16

    mov @r6 u64 ^@r5 (u64+0_2) && @r7
    dw M @r5 (@r5/0_2)
    dw *block @r1 ^@r2 &&
    movk @r7 u16 @r6 u64 @r5
    jmp @r7 ^@r9 *main (@r9/3) <M> @r6 @r5

    ldp u64 u64

    @r1 @r11 M u8 ^@r1 <> @r12 (@r11+1)

    jmp ^u64 @r12 @r4 @r11 <M> <M> @r12
    cmp ^@r11 @r2 &&
    movk ^@r10 u16 M <M> ^@r1 <M> ^M
    @r6 @r5 M

    push @r1 (@r3/2)
    jmp ^u8 u32 ^@r9 (u32/0_2)

    @r1 (M+3) *block @r4 ^<M> *block
    jmp *block @r6 u32
    jmp *main @r4 (u32/3) u32
    @r10 @r12 @r1 @r2 @r7 @r2 @r12
    movk @r11 ^@r6 @r2 (@r2/0_2)
    ldp (^<M>+2) (u8+3) u16 @r8

    movk && u32 u8 @r8 u64

    movk @r4 <> M

    dw M *block (^*block+2)
