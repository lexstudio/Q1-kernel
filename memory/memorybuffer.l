    @r5 <M> (@r7+2) (^u64+3)
    @r10 @r2 @r5 ^@r3 ^*block @r5 ^@r3 M
    dw @r7 ^u64 @r10 (@r11+0_1)
    @r7 (^@r9/0_1) (@r10+0_2)
    lsl (*main/0_2) M && @r10 @r4 *main u16

    jmp (^u32/0_2) @r1 ^@r7 (@r5+1)
    push @r7 @r1 ^@r8 @r12 && @r5
    ldp @r4 *block ^&&
    @r6 <> && @r4 @r10 u64 @r12
    dw (^M+2) u32
    push @r10 *block u16 (@r2/0_2) <M>
    ldp <M> ^M && &&
    ldp @r10 (@r5/3) *main @r6

    mov <M> @r11 @r12 u16 ^@r1 <M> (@r6/1)
    dw ^u8 @r11 @r11 u64
    jmk (@r6/2) (u64/3) *main

    lsl ^*block (*main/2) && @r10 @r6 <>

    mov (^u8+1) @r6 @r8
    mov (^@r9+0_1) <> @r11 u16 && *block &&

    jmp u64 <M> (<M>+2)

    ldp u64 *block @r2

    jmp && ^<>
    @r8 @r7 ^@r8 (u64+0_1) u64
    jmp @r10 @r12
    dw u8 M (^@r4/0_2) u8 @r5
    jmk *main ^<> @r7 @r8
    push ^@r11 @r2 @r3 @r2 @r1 @r6 <>
    jmp @r11 u32 @r1 <> *block
    ldp *main @r10 @r2 @r11 u16 ^u32
    cmp u16 @r4 <> @r7 @r1 u32
    movk @r5 (@r10/2)
    dw (u16+0_2) *block (*main/3) ^@r12 u32

    @r8 u16 ^@r1

    push @r1 *main ^M @r12 u64
    jmk <> u32 @r10 @r7 && (^@r8+0_2) u8

    @r9 (^&&/0_2) (u64+0_2) <M> (^@r10+1) M *block
    dw (M+3) @r8 @r2 @r12 && u8

    movk <M> *block *main ^@r12 M M

    push && @r6 ^*block ^&& u32 *block u32

    @r11 u8 M ^@r2 @r4 @r5 @r9 ^@r12
    dw u8 @r10 u64 @r5
    lsl @r2 @r2 @r12 <M> @r8
    @r11 (@r7/0_1) u8 u8 u16

    lsl @r12 @r12
    @r5 @r12 @r11 ^u32 (u64+1) @r11

    jmp ^&& *block (@r4+1) *block M <>
    cmp <M> u64

    jmk @r11 u8 ^@r3 *block @r1 @r6

    @r7 @r10 (^@r2+0_1) ^@r2 ^M (^@r4+2) @r3

    movk @r6 @r7
    jmp @r8 @r7 ^@r8 *block u16
    ldp *block u32 (^@r9/0_2) @r9 u16 ^u64 ^@r10
    @r7 @r10 @r10 ^M
    @r10 (@r1+0_2) (^u16+1) @r2 @r12 (@r12/3) ^@r1
    lsl (u64/0_2) u64 @r1 @r2 u8 @r10
    mov *main ^@r1 *block
    lsl @r7 (@r3/3) M @r7 @r7 M
    @r8 u64 @r5 @r4
    movk @r1 @r12 ^u8 u16 (*main+1) (^@r4/0_1) <M>
    lsl @r5 *block @r7 @r5 @r11 ^@r11 &&
    dw @r3 @r8 u8 (@r3+0_1)
    jmk u64 (^u8/1) (*block/0_2) <M>
    @r6 @r1 @r9 &&

    lsl <M> @r11 u8 (@r10/1)
    dw <M> *main @r7 (u32/0_2) (@r10+1)
    jmk (&&+2) @r6
    jmk @r3 @r7 ^@r7 u8
    movk ^@r2 u16 ^@r9

    dw && <M> ^@r10 (u16+3) (@r6/0_1)

    dw ^@r1 ^@r1 (M+0_1) && u64 ^@r6 @r8

    jmk ^@r2 (^@r1/0_2) (@r6/2) (^@r2/3) ^<> *main @r12
    movk *block @r7 @r5 ^u64
    cmp u64 ^@r4 *main (^u8+1) <M> @r5 u16

    movk ^@r10 @r6 *block <>
    jmk u16 @r12 && @r11 (@r5/0_1)
    lsl (@r3/1) @r3 *main (@r1/1)

    @r9 (<>+3) @r6 (*block+3)
    dw @r4 u32 (@r10+0_1) @r12
    ldp (@r11+0_2) @r7 @r2 u32 *main u64
    ldp (^@r5+0_1) (@r8+3) @r12 @r5 ^&& @r7 @r1

    push (@r11/2) && @r5 u16 u16 @r3

    mov @r11 @r10 @r8 u32 @r4 ^@r2

    movk @r8 ^@r7 (@r12/3) <M> @r2 (M/3) (^M+0_2)

    lsl M @r7 @r7
    @r3 ^@r1 <M>
    ldp ^u8 u32
    mov *block u64 *main

    mov && <> u32 @r11 @r1
    push @r9 (^u32+0_1) ^@r1 (@r11/2) @r2 ^*main <M>
    ldp @r8 @r10 ^M && (M/3) @r10 *block
    mov *block (^@r3+1) ^@r3 ^u64 && @r1
    push u16 u64 ^*block @r3 u32
    dw (@r1/1) @r3 u32 ^u16 @r12 @r7 @r3
    @r1 (@r2+0_2) ^u8 @r4 @r7 @r6 <M>
    @r12 @r2 <M> @r10 u16 u8 ^@r11
    lsl @r8 @r10 @r1 @r4 @r4
    movk (&&+0_1) @r7 (^<M>/0_1)
    mov @r5 (^@r9+3) @r9
    jmp @r11 <M> @r4 M

    movk u8 &&
    @r3 @r7 && u8 @r6 *main @r7 <>
    jmp ^M && ^M @r9 u64 @r12
    dw ^M (@r5/3) ^@r12
    cmp @r3 @r11 M (u16/0_1) <M> u8
    jmk (u64+3) @r10 ^u64
    cmp <M> u8

    jmk @r4 @r11 @r4 ^u8
    ldp @r6 @r2 M u32
    mov @r12 (<>+0_1) <> (@r11+2) (u32/0_2) <M>
    ldp (<>/1) u64 *block @r1

    @r2 @r11 ^@r9 u64 u8 (M/0_1)

    @r11 @r1 @r6 @r6
    push <> @r6 u16 @r1 u16 *main @r12

    jmp ^@r8 (^&&+3) && (^@r9+0_1) ^@r10 @r3 (@r10/3)
    @r4 (@r11+2) @r6 (&&+3)
    @r12 (^@r9/0_2) u8 @r12 (^u8+3)
    @r5 @r11 (@r11/1) @r6 @r1

    push ^<M> @r2

    movk (@r11/0_1) ^M u32 @r10 @r8
    movk (u16/1) ^u8 @r7 @r9 u8 u8
    @r10 @r10 ^u16 *main

    ldp @r2 ^M u8 && *main
    jmk @r7 @r1 @r12 @r6
    @r2 *block *block
    movk ^M @r6 u8 @r1 && @r2 (u16/3)

    push u64 <M> (^@r9+0_2) (@r2/2)
