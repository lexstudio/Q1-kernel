    @r5 <M> (@r7+2) (^u64+3)
    @r10 @r2 @r5 ^@r3 ^*block @r5 ^@r3 M
    dw @r7 ^u64 @r10 (@r11+0_1)
    @r7 (^@r9/0_1) (@r10+0_2)
    lsl (*main/0_2) M && @r10 @r4 *main u16

    jmp (^u32/0_2) @r1 ^@r7 (@r5+1)
    push @r7 @r1 ^@r8 @r12 && @r5
    ldp @r4 *block ^&&
    @r6 <> && @r4 @r10 u64 @r12
    dw (^M+2) u32
    push @r10 *block u16 (@r2/0_2) <M>
    ldp <M> ^M && &&
    ldp @r10 (@r5/3) *main @r6

    mov <M> @r11 @r12 u16 ^@r1 <M> (@r6/1)
    dw ^u8 @r11 @r11 u64
    jmk (@r6/2) (u64/3) *main

    lsl ^*block (*main/2) && @r10 @r6 <>

    mov (^u8+1) @r6 @r8
    mov (^@r9+0_1) <> @r11 u16 && *block &&

    jmp u64 <M> (<M>+2)

    ldp u64 *block @r2

    jmp && ^<>
    @r8 @r7 ^@r8 (u64+0_1) u64
    jmp @r10 @r12
    dw u8 M (^@r4/0_2) u8 @r5
    jmk *main ^<> @r7 @r8
    push ^@r11 @r2 @r3 @r2 @r1 @r6 <>
    jmp @r11 u32 @r1 <> *block
    ldp *main @r10 @r2 @r11 u16 ^u32
    cmp u16 @r4 <> @r7 @r1 u32
    movk @r5 (@r10/2)
    dw (u16+0_2) *block (*main/3) ^@r12 u32

    @r8 u16 ^@r1

    push @r1 *main ^M @r12 u64
    jmk <> u32 @r10 @r7 && (^@r8+0_2) u8

    @r9 (^&&/0_2) (u64+0_2) <M> (^@r10+1) M *block
    dw (M+3) @r8 @r2 @r12 && u8

    movk <M> *block *main ^@r12 M M

    push && @r6 ^*block ^&& u32 *block u32

    @r11 u8 M ^@r2 @r4 @r5 @r9 ^@r12
    dw u8 @r10 u64 @r5
    lsl @r2 @r2 @r12 <M> @r8
    @r11 (@r7/0_1) u8 u8 u16

    lsl @r12 @r12
    @r5 @r12 @r11 ^u32 (u64+1) @r11

    jmp ^&& *block (@r4+1) *block M <>
    cmp <M> u64

    jmk @r11 u8 ^@r3 *block @r1 @r6

    @r7 @r10 (^@r2+0_1) ^@r2 ^M (^@r4+2) @r3

    movk @r6 @r7
    jmp @r8 @r7 ^@r8 *block u16
    ldp *block u32 (^@r9/0_2) @r9 u16 ^u64 ^@r10
    @r7 @r10 @r10 ^M
    @r10 (@r1+0_2) (^u16+1) @r2 @r12 (@r12/3) ^@r1
    lsl (u64/0_2) u64 @r1 @r2 u8 @r10
    mov *main ^@r1 *block
    lsl @r7 (@r3/3) M @r7 @r7 M
    @r8 u64 @r5 @r4
    movk @r1 @r12 ^u8 u16 (*main+1) (^@r4/0_1) <M>
    lsl @r5 *block @r7 @r5 @r11 ^@r11 &&
    dw @r3 @r8 u8 (@r3+0_1)
    jmk u64 (^u8/1) (*block/0_2) <M>
    @r6 @r1 @r9 &&

    lsl <M> @r11 u8 (@r10/1)
    dw <M> *main @r7 (u32/0_2) (@r10+1)
    jmk (&&+2) @r6
    jmk @r3 @r7 ^@r7 u8
    movk ^@r2 u16 ^@r9

    dw && <M> ^@r10 (u16+3) (@r6/0_1)

    dw ^@r1 ^@r1 (M+0_1) && u64 ^@r6 @r8

    jmk ^@r2 (^@r1/0_2) (@r6/2) (^@r2/3) ^<> *main @r12
    movk *block @r7 @r5 ^u64
    cmp u64 ^@r4 *main (^u8+1) <M> @r5 u16

    movk ^@r10 @r6 *block <>
    jmk u16 @r12 && @r11 (@r5/0_1)
    lsl (@r3/1) @r3 *main (@r1/1)

    @r9 (<>+3) @r6 (*block+3)
    dw @r4 u32 (@r10+0_1) @r12
    ldp (@r11+0_2) @r7 @r2 u32 *main u64
    ldp (^@r5+0_1) (@r8+3) @r12 @r5 ^&& @r7 @r1

    push (@r11/2) && @r5 u16 u16 @r3

    mov @r11 @r10 @r8 u32 @r4 ^@r2

    movk @r8 ^@r7 (@r12/3) <M> @r2 (M/3) (^M+0_2)

    lsl M @r7 @r7
    @r3 ^@r1 <M>
    ldp ^u8 u32
    mov *block u64 *main

    mov && <> u32 @r11 @r1
    push @r9 (^u32+0_1) ^@r1 (@r11/2) @r2 ^*main <M>
    ldp @r8 @r10 ^M && (M/3) @r10 *block
    mov *block (^@r3+1) ^@r3 ^u64 && @r1
    push u16 u64 ^*block @r3 u32
    dw (@r1/1) @r3 u32 ^u16 @r12 @r7 @r3
    @r1 (@r2+0_2) ^u8 @r4 @r7 @r6 <M>
    @r12 @r2 <M> @r10 u16 u8 ^@r11
    lsl @r8 @r10 @r1 @r4 @r4
    movk (&&+0_1) @r7 (^<M>/0_1)
    mov @r5 (^@r9+3) @r9
    jmp @r11 <M> @r4 M

    movk u8 &&
    @r3 @r7 && u8 @r6 *main @r7 <>
    jmp ^M && ^M @r9 u64 @r12
    dw ^M (@r5/3) ^@r12
    cmp @r3 @r11 M (u16/0_1) <M> u8
    jmk (u64+3) @r10 ^u64
    cmp <M> u8

    jmk @r4 @r11 @r4 ^u8
    ldp @r6 @r2 M u32
    mov @r12 (<>+0_1) <> (@r11+2) (u32/0_2) <M>
    ldp (<>/1) u64 *block @r1

    @r2 @r11 ^@r9 u64 u8 (M/0_1)

    @r11 @r1 @r6 @r6
    push <> @r6 u16 @r1 u16 *main @r12

    jmp ^@r8 (^&&+3) && (^@r9+0_1) ^@r10 @r3 (@r10/3)
    @r4 (@r11+2) @r6 (&&+3)
    @r12 (^@r9/0_2) u8 @r12 (^u8+3)
    @r5 @r11 (@r11/1) @r6 @r1

    push ^<M> @r2

    movk (@r11/0_1) ^M u32 @r10 @r8
    movk (u16/1) ^u8 @r7 @r9 u8 u8
    @r10 @r10 ^u16 *main

    ldp @r2 ^M u8 && *main
    jmk @r7 @r1 @r12 @r6
    @r2 *block *block
    movk ^M @r6 u8 @r1 && @r2 (u16/3)

    push u64 <M> (^@r9+0_2) (@r2/2)
    mov <M> @r5 u16 @r4 @r11 @r7
    lsl (*main+2) @r11
    jmk *block u16

    dw @r5 u8 *block (^*main+1) ^u16
    movk @r3 @r12 @r5
    jmk @r4 <> @r10
    jmp <> u16 u64 (@r4/2) <> ^M
    @r12 (@r11/0_2) ^u8 @r6 (<>/0_1) *main @r12
    jmk @r1 (u64+0_2) <M> (^<M>/1) @r6 u16
    lsl @r11 ^@r5 @r7 <>
    cmp (@r6/3) u32 @r7 ^@r4 @r4 @r9

    ldp u8 (@r11/1) @r7 ^u32 @r12 ^<>
    lsl u64 (@r5+3) *main @r6 @r3
    ldp u16 @r1 @r8 u64 @r6
    lsl <> (@r4+0_1) @r3 u64 u64

    jmk ^<> *main *block

    @r7 ^*main &&
    jmk (^*main/0_1) @r7 ^u64 @r11 u32
    mov && (@r6+3) ^M
    jmp <> @r9 u64 (@r11/2)
    mov *main @r11 (^u32+3)
    jmk ^@r4 (@r5/0_1) @r12 M u8 ^u8
    lsl (^M+3) (^@r12/0_2) ^@r8 @r5
    dw ^@r2 ^*block @r8 u16 u64 @r9

    jmk <M> @r10 ^@r6 ^@r6 u32 (^@r5/1)

    ldp *main @r4 ^u64 ^@r12 @r9 u32 @r10
    movk *block ^@r6 u16 ^@r6 (<M>/1) (@r1/2) @r2
    movk && ^<M>
    @r8 <> @r12 (^<M>/1) @r3
    lsl (*main/1) ^@r8 *block *block @r12
    jmk *block ^@r10 u16 @r10 u16 u8 @r10
    cmp @r8 *block @r4 ^@r9 ^@r6 @r9 ^@r6
    movk ^@r9 ^u16 ^u8 @r10 (@r9+0_2) ^u8

    ldp <> @r1 ^u8 (u16/0_1) (&&+0_1)
    dw (M/0_2) (^<>/0_2) *block
    dw @r7 @r5 (*main+3) ^M @r4 ^@r8

    @r12 @r7 @r7 @r1 <> (u8/0_1) M

    lsl (^@r10/3) @r7 *block (@r3+2) @r8
    lsl ^u32 @r1 @r4 u8

    jmp (u64/0_1) <M> @r12
    mov ^*main u16 @r4 @r11 (@r1+0_1) u32
    jmp ^u8 <M> u32
    movk ^M @r8 @r1 (*main/2) ^&& @r4 @r10

    cmp u8 ^@r12 (M+3)
    push u16 @r12 @r9 <M> ^@r8 ^@r2 u32
    lsl @r12 @r9 (@r9+3) @r8 u8
    dw @r7 @r8 (@r6/0_2) @r5 @r8 u8
    jmp ^u64 @r8 <> @r8 (@r9+2) @r9 @r5
    jmp @r10 @r6 (<M>/1) *block @r8 u16
    cmp @r11 u64
    jmp ^@r8 *block (@r4/0_1) M ^@r7 u16 <>
    push M @r1 *main <M>

    mov u8 u32 ^<M> u8 u8 ^M
    push M @r7 ^&&

    movk (@r1+0_2) @r1 @r4 @r2 @r8
    lsl (@r1+0_1) ^@r6 <M> @r7 @r5 @r6 u64
    jmk @r11 ^*main ^*main ^@r1
    @r2 @r12 @r5 u32
    dw (M+2) (*main+0_1) && @r9

    @r2 M ^&& @r8 <M> (^&&/3) (@r5/1) <>
    @r12 @r10 ^*main (@r4+0_2)

    push @r2 *main
    @r6 M && @r3 (^*block/1) @r5
    mov @r1 ^@r9 @r2 <M> @r3 @r4

    ldp ^@r2 ^@r6 @r9 ^u8
    dw @r6 @r2 u32 *block @r2 u64 (@r10+3)
    jmk ^M &&
    dw @r10 @r9 (u16+2) @r3 u8 @r1 (^u8+1)
    @r10 @r6 (^@r5/2) ^@r4 ^@r11 @r5 ^@r3
    mov @r9 @r3
    push (^*main+1) @r3 M <M> @r12 @r4
    @r11 (@r6/3) @r9 && ^*main ^@r4
    push @r12 @r3 && (^@r7/1) @r6 @r8 M

    jmp @r6 ^*block @r1

    jmp (*block/3) @r10 @r11
    jmp ^u64 @r1 @r5 @r8 ^@r7 (M/2) (^@r4/3)
    jmk <> @r3 ^@r1 ^<> *main <> (u8+1)
    @r7 u64 @r6 ^@r5 (^*block+3) @r4 u16 u32
    dw (u32/2) ^@r9 @r1 @r8 u64 @r11 (*block/2)
    push u32 *main <M> u16 <M>
    @r11 ^@r10 ^@r9 @r4 @r8 @r5 u16 @r2
    jmp @r4 <M> ^*block @r10 @r10 <M> u16
    jmk @r11 ^@r7 @r10 @r1 @r8 @r8
    cmp u64 @r4 @r2 M ^@r10

    ldp ^@r2 (@r5+2) (u32/3) @r3 M <>

    lsl (@r11/3) @r12 ^*block @r3 @r9 u32 (@r6/2)
    ldp @r9 @r4
    push @r3 @r11
    movk @r10 (@r8+0_1) ^u64

    @r3 @r4 u32
    lsl ^<> @r1 @r3 u32 &&
    cmp @r4 ^@r6 @r11
    cmp M @r3 u32 @r6 @r9 @r3
    movk @r6 <> <> u16
    lsl <> ^u16 (@r12/2) (u64/0_2) @r1 *block
    lsl *main @r7 u32 (@r4+0_1) @r1 u64
    ldp @r12 @r9 (@r7+1)

    @r7 ^@r7 (@r8+0_2) ^@r10
    jmk <> @r2 ^@r11
    @r7 @r6 @r4 u32 u32 @r6 u64
    push (@r1+0_2) @r4 u32 <> @r11 @r3 ^@r12
    cmp @r10 ^M (<>+0_1)
    @r5 @r9 ^@r12 ^@r8 @r9 @r4
    push @r11 ^@r7 @r6
    mov (u8+2) u16 M ^@r7 &&
    cmp @r3 @r11 @r4 @r8 (@r4+2)
    jmk ^<> @r12 @r7 @r5
    push (<M>+3) @r5
    movk @r4 @r3 (^@r10/0_1) @r9 @r11 @r8 @r8

    cmp M @r5 ^*block (@r1+2)
    jmk ^@r6 (u32/0_1) *block && *block @r2 (@r9/1)
    push ^<M> (@r2/1) *block @r3

    ldp @r6 @r1
    @r9 u16 ^<> ^M && @r9 @r11 @r5
    movk u32 @r6 ^@r5 ^M @r1 @r7 &&
    push (u64/0_2) *block M

    @r8 ^@r1 @r5 (@r7+1) @r10 @r6
    mov (<M>+2) (@r9/3) ^@r11 u32 @r4
    jmk M (u16/0_1) *block @r8
    jmp @r9 @r11 @r8

    movk @r4 M ^u8
    ldp @r4 ^@r12
    ldp u64 u64
    cmp @r8 @r1 (*main/1) <> @r11 M
    dw @r8 @r1
    movk @r6 (@r11/0_2) @r2 @r4 (u16+2) ^M
    push <> @r8 u8
    @r3 @r3 @r2
    @r7 @r8 *block ^M ^@r3 @r5
    mov (@r5+1) u64
    lsl M @r1
    push @r2 (@r4+1) @r12 @r1
    mov @r9 (^@r2/0_2) ^@r4 @r11 ^u16

    movk ^<M> u64 @r9

    jmk (@r4/0_2) @r4 (u32+2) @r11 u32 @r1
    jmk *block @r2 @r6 u32 ^u64 u16

    cmp (@r4+3) u32 &&
    lsl @r11 @r8 M ^<> @r4 ^@r9
    ldp @r5 u8 @r10 @r8 @r3

    cmp ^@r3 @r6 @r11 ^&& (u16/3) @r8
    movk @r5 <M> &&
    jmk <M> *main
    @r5 @r11 @r5 @r4 <M> (@r9+0_1) u64 ^@r2
    @r12 ^@r2 <M> u64
    cmp (M+1) (u16/2) M

    movk ^@r4 u32 ^@r8

    cmp @r7 (<>/3) u64
    dw (^u64+0_1) @r5 @r10
    @r4 *block u8
    lsl <> @r10 *block (@r3+3) && (^@r12+0_1) (@r7/2)
    movk @r7 @r4 u64 *block u64 *block
    jmk @r9 ^&& @r11 ^@r10 @r1 @r3
    jmk @r3 ^u64

    ldp u16 u32 u16 u8 @r11
    cmp u32 && u8 @r4
    @r7 *main ^M ^M <M> u32 ^@r2
    jmp @r1 @r7 ^<> @r11 @r2 && @r7
    mov <M> *block @r2 (@r11/0_2) *block
    @r2 @r4 u32 u8 @r7 @r7 (<M>/0_1)
    @r12 @r9 @r6 && (u16+3)

    lsl @r2 @r10

    cmp u32 @r6 @r3 && (^@r4/3) @r3 @r12
    jmk ^@r1 @r11 && @r10 (@r6+2) @r5
    dw *block u16 @r11 @r6 u32 ^@r11
    jmk ^@r1 @r10 @r4 <>

    push <> @r1 ^@r2

    mov @r10 <> <> @r8 (^@r12+0_2)
    movk u8 *main @r6 ^M ^u64
    jmk ^u32 ^@r7 ^u64 <M> <> @r4

    mov ^@r7 @r2 (^u8/0_1) (u64+0_1) *block (@r9/0_1) *block
    ldp (@r6+0_2) @r9 @r2 <M> @r2

    cmp (@r8/0_1) @r1 @r5 ^@r9 (@r4+1) @r4 M
    @r4 @r8 (@r5+0_2) @r7

    mov ^@r12 @r3 @r4 ^@r9
    lsl @r12 <> ^@r12 ^@r11 ^M @r3 u8

    push @r5 <M> (*block+1) (@r1/3)
    @r1 @r3 @r6 @r2 *main @r2 u8 (@r9+3)
    push @r11 u8 @r9 @r6 @r2 u16 &&

    cmp *block @r9 @r2 (@r11/2) @r4 ^@r2 @r6
    @r7 ^@r10 @r1 @r5 *main @r11

    movk @r7 @r9
    jmk *main @r8 @r1 (@r3/0_1) @r12

    dw ^u8 u64 u8 @r11
    @r10 (^&&/1) (u8/2) ^<> @r9
    push @r8 @r7 (@r1+0_1) u16 @r1 @r2
    ldp ^@r10 @r10 <M> @r4 (^@r8/1) u64

    ldp ^@r8 M (<>/0_2) u16
    movk @r6 @r2 @r12 (@r3+3) @r3

    lsl ^*block @r6 @r2 @r5 M (@r12/3)

    @r1 <M> u32

    dw @r2 (*main+2) (u32+0_2) *main *main ^*block u16
    jmk u32 @r8 @r7 M (u64+0_1)
    push @r11 @r1 @r5

    ldp (*block+1) @r12 ^@r10 u8 (@r11+0_1)

    mov @r7 ^&& u32 @r3 (<M>/1) (@r9/0_2) ^*block
    push @r1 && @r7 @r9 ^@r7 *block
    @r4 @r3 @r11
    mov ^u16 u8 @r3 u8
    push u32 (<>+0_2) @r8 && @r10 @r4
    cmp ^u8 ^M @r6
    cmp @r10 ^u32 (<>+1) u64 *block
    jmp (^@r10/1) ^@r4 @r4 ^@r7 u32 @r5

    mov <> ^M ^u16 <M> u16 ^@r11 <>
    dw ^*main u64 @r11
    jmp @r7 *block @r6 u64 && u64 @r1
    movk @r3 @r2 @r1 @r11 ^@r6 (@r7+0_1) ^@r11
    push @r1 u8
    @r6 ^@r12 @r6 (@r12+2) *main (u64+0_1)
    jmk @r9 ^@r1 ^&& @r5
    mov (u8+1) ^&& M ^@r5 (u32+2) (^@r12+0_1)

    @r3 (@r12+0_1) @r5 ^u8 @r7 @r7 u16

    @r11 *main ^<> @r6 && @r3 u16 @r3

    dw u32 u8

    lsl ^@r1 @r8 *block @r9 ^@r6
    @r1 u32 *main u16 (@r7+0_1) ^<> @r9 @r5

    @r3 && @r12 @r12
    @r10 @r7 u64 @r2 (@r2/3) ^@r1 *main (@r10/0_2)
    jmk @r9 *block (^<>/3)
    jmk u16 (@r2+0_2) M && (*block+0_2) @r4
    push @r5 @r7 (<M>+0_1) ^@r10 @r12
    jmk ^@r1 M @r9 @r6 (^u64+1) @r10
    cmp @r5 @r6
    jmk M *main M (^*block+3) ^@r12 @r6 &&
    @r6 @r6 @r12 *block @r8
    @r7 @r10 (<>+1) (^@r7+0_1) ^*block ^u8 @r4
    mov @r5 @r11 @r4 @r11 @r2 (@r11+1)
    @r9 u32 u32 u32 ^@r12
    ldp ^*main ^@r11
    cmp ^@r2 *block @r2
    movk <M> <M> @r5 @r3 (^@r6+1) @r5
    @r12 @r11 &&

    jmk ^*main @r1
    lsl M ^@r4 @r10 u8
    push @r9 @r7 @r8 @r11 (@r5/0_2) @r4 @r10
    lsl (^@r9/1) <M> @r9 ^@r1 u8 (@r5/0_1)
    jmp @r9 @r2 @r9
    lsl ^@r8 @r6 @r6 u32 M ^@r8 @r10
    @r11 *block <M> @r7 <> @r1 @r12 @r1

    lsl ^M @r9 <M>
    push (@r5/0_2) @r7 @r6 u8 (@r7+2)
    mov (@r8/2) u8 ^@r9 u32 ^@r1 <M>
    cmp @r5 ^u64 @r8 @r6 @r11

    @r6 u8 @r1 *block @r3 @r10 ^M
    jmp u16 (^&&+0_1) (^*block/2)
    jmp @r1 @r3 &&
    push @r3 <> ^@r10 M u64 @r1 @r11

    @r5 ^<M> <M> (^*block/3) @r9 (^@r12+1)
    movk ^u32 @r3

    @r8 ^u16 (<M>/1) @r4 @r2
    push (@r4/2) u64
    @r8 u8 @r10 @r12 u64 ^@r1 @r8
    @r4 (^@r1/3) @r4 @r11

    ldp ^@r1 (@r3/2) u64
    @r1 u16 u64 (u32+2)
    jmk @r2 && (@r4/2) ^@r8 <M>
    jmk @r7 @r10 ^@r3 <M> (^@r3+0_2) <M>
    lsl @r6 u32 <>

    jmk (@r4+1) @r2 (<>+0_2) <M>
    jmp ^u64 u8 @r7 @r5

    @r11 (u32+3) @r4 @r3
    ldp <> (^u64/3) @r8 @r2 (@r3/0_2)
    ldp @r2 <M>
    push <> @r3 (<>+1) ^*block @r8 @r4
    push @r7 u16 (M+3)
    ldp @r1 && u32 @r9 @r10 @r2

    @r2 (@r9+3) (^u16+1) @r11
    jmk *block u16 M @r11 M

    lsl ^u32 @r9 @r12 (M/1)
    @r11 @r9 u32 *block ^@r9 @r4
    lsl <> u8 @r10 (@r6+3) u16 @r2
    dw (@r9+0_2) && ^@r6 @r6 @r12
    push <> ^@r3 ^u32

    lsl ^@r7 @r7 @r10 @r4 @r2

    movk @r7 @r7 u16 ^@r2 (@r11/1) @r2

    @r5 (@r2/2) <> *block &&
    ldp ^@r2 (@r10/3) ^@r2 @r7 @r12 @r1
    jmp @r1 <> *block u16 (^@r12+1)
    @r5 <M> ^@r2 @r11 @r4 (@r2/3)
    dw M (@r9+0_1) u8 (@r9/1) @r9 (@r3+0_2) @r3
    @r12 (u16/1) <M> ^@r1
    push @r7 ^@r6 @r3 @r4
    movk *block &&

    @r6 u64 ^@r11 ^@r4
    dw (@r9+1) @r4

    cmp @r6 @r12 ^u64 @r4
    @r6 && ^u16 u64 @r10
    movk @r11 @r12 @r3
    ldp u16 @r9 (^u8+1) ^@r8 @r4 u16
    push @r12 *main (@r6/3) (@r10/0_1)
    mov *block @r12 @r6 u32

    @r10 ^@r12 (@r7+3) (^@r6/3) @r1
    ldp @r10 (@r11/3) @r9 (@r11+2)
    @r9 u16 <> (@r5/0_1) u32 ^u32 <>

    jmk <> @r3 (^@r12/0_1) ^u8 u16

    mov @r10 u8 @r7 @r7 ^@r12 @r7 @r8

    dw (&&+3) M ^@r7 ^@r1

    push ^@r1 (M+3) @r7 *block

    dw *block @r6 @r12 *block ^@r2 @r8 ^@r5
    @r6 @r7 @r6 @r11 @r4 ^@r9

    @r7 && ^@r3 (@r4/3) ^*block
    cmp ^@r4 @r5 ^*block
    mov @r8 ^@r12 <> ^@r8

    push @r9 u16 @r1 @r2 u16

    push @r4 (@r6/0_2) @r7 @r1 ^&& @r11 @r3

    jmp u8 @r9 <> M u16 @r9

    movk u8 *block

    mov u8 @r11
    lsl @r7 @r9 u32 @r5 @r3

    ldp (u64/2) @r2 @r5 ^u64 @r10 @r3
    dw @r5 ^@r2 u8
    cmp @r4 @r8 ^&& @r6
    @r6 M <> @r12 (@r3/2) && @r2 ^@r10
    @r12 @r11 && *main (<M>/0_1)
    push @r12 @r4 u16 u16 <M> @r10
    cmp @r1 ^@r4 @r5 u64 u8

    mov <M> @r7
    dw (^@r1/0_1) <M> @r11

    jmp ^@r11 *block

    mov (M+2) @r9 M @r1 u32
    mov @r11 @r1 @r11 &&
    mov <> @r11 (u8/1)

    lsl @r9 ^u32 @r10
    movk @r10 @r6 &&

    @r5 @r5 @r2 u32 @r3
    push (@r11+1) @r7 @r9 ^<M> @r10 u8

    jmk ^@r12 && u64
    jmk @r10 M @r3 <> @r9
    @r6 ^u64 @r7 u16 (@r10/3) @r5
    ldp @r2 ^@r11 M @r4 ^&&

    lsl @r3 (*block/2) (*block+3) @r9
    ldp @r5 u64 @r1 ^*main @r5 ^<>

    jmp u8 ^M <M> ^@r3

    @r12 @r2 ^@r7 (u16+3)

    dw @r1 ^@r8 @r6 u64

    ldp @r6 (@r11/0_2) ^@r4 ^@r9 @r5
    push (u8+1) @r5
    cmp u32 @r9

    ldp *main u32 u8 @r3
    jmk @r7 u64 ^@r11 @r3 @r1
    jmk (@r6/0_1) (^@r5/0_1) @r1 ^@r12
    mov ^@r2 ^@r11 u16
    @r9 (u16/0_2) (^@r1+1) @r10 (u8/3) (^<M>/0_2) @r3
    jmk u64 @r1 @r11 @r7

    cmp u32 (u16/0_2) @r4 @r5 && u16 M

    mov ^u8 @r8 && @r2
    ldp @r11 *block
    cmp u32 u8 @r5 ^@r7
    ldp && @r4
    jmp @r10 ^M
    lsl u16 *block @r2 @r2 @r3 (*main/2)

    mov (@r5/0_1) && @r6 u16
    ldp u32 ^u64
    movk u16 (@r4/0_1)
    jmp ^*block (u8/2)

    dw @r7 u32
    dw M *block (^<>+1)
    jmk ^@r11 @r5 ^@r1 @r8
    ldp @r9 u32 @r5 ^@r8 u16 u16

    dw (^@r3/3) @r3 @r4 (u8/0_1)
    @r1 @r1 (<>+2) @r2 @r9

    mov ^M ^&&
    @r4 @r6 ^@r9 @r9
    @r6 u32 ^@r1 @r10 @r8
    @r9 (&&+1) u16 *main

    mov ^u8 ^u32 ^@r6 @r7 (@r3/0_2) ^@r11 &&

    dw u8 @r6 u32

    lsl @r2 @r12 <M> @r10
    push @r8 <> M @r11
    push (*main/2) (u32/0_2) @r2 @r1
    @r2 (@r7+0_1) @r9 @r12

    ldp (@r1+2) (@r12/0_1) ^M @r9 (@r5/0_1) ^@r8 u16
    lsl @r11 @r2 ^@r6 u8

    movk ^@r5 ^@r6 @r2
    @r7 @r12 <M> *main *main @r10 <M> (@r4/0_2)

    cmp u16 ^@r1 u16 *block
    @r7 ^<> *main @r11

    cmp @r9 @r2 @r9 u16 @r12 *main
    dw *block (^@r11+3) @r8 u8
    jmp (^u16+1) @r6 <M> ^@r9 @r12 *main *block
    @r12 @r11 ^&& ^u8 @r5 u64 (@r4/0_1)
    dw u8 @r1 @r5 (@r8+3)

    jmp @r12 ^u8 @r8
    push u8 @r3 && u32 ^@r11
    ldp *main @r5 (u64+2) ^u32 (*block/0_2) @r12
    @r2 M @r4
    lsl @r5 && ^&& <>

    jmk ^u64 u16 @r9 u32 && ^@r6 u64
    jmp (u16+0_2) @r9 (^@r10/0_1) @r3 @r12 @r8
    ldp <> (@r11/2) *main (@r10/3) ^@r12 @r4 @r8
    jmp (@r11+0_2) @r3
    push <> u32
    lsl M @r11 *main <> ^*main @r8

    mov u32 u32
    ldp @r1 <M> @r5 <M>
    jmk (@r4+1) M ^@r11 ^*main M ^@r4 @r11
    cmp && @r5
    cmp @r3 @r6 (@r1+2) @r12 @r4 u32 u16
    cmp <M> ^@r10 ^@r4 u16 ^@r4 u32
    push @r5 u32 *main && u32

    lsl ^@r1 @r3 @r2 @r4 (u64/3) ^@r4 @r1

    cmp u8 @r3 @r8

    jmp ^<> (u64/0_2) @r8 @r1
    movk (u64+3) (^@r10+3) (@r7+0_2) @r9

    jmk ^M u16 ^@r4 M
    push <M> @r5 @r7 ^@r7 @r11 ^@r2

    @r5 @r7 *block @r2 *main ^@r12 u32
    dw @r6 <> @r6 @r7 (@r9/0_2)

    @r6 @r10 u64 *main ^u8 && @r5
    push ^@r5 @r1
    jmp @r11 @r10

    mov <> @r9 u64 u8 (@r2/0_1) (@r11+0_1) *main

    @r1 <M> u64
    lsl && @r8 (@r10+3)

    jmp u16 ^@r5 @r6
    jmk @r12 ^<> && ^@r1

    dw @r8 ^@r7

    dw @r11 && @r9 (u16+2) ^@r2
    push (@r12/0_1) *main @r12 <M> M ^@r11
    ldp @r7 (<M>+0_2) @r4 ^&& ^u64 <M> @r12

    movk ^u8 ^@r9 && (u16+0_1) <M> (@r10/2)
    cmp (@r11/0_1) ^u8 (@r9+0_1) @r2

    dw && @r8
    push *block @r1
    jmk @r4 *block @r10

    push @r7 @r11 (^u64+0_2) (&&/3)

    jmp @r2 u32 M u32 @r6
    jmp ^@r7 @r5 @r7
    cmp @r10 u16 @r7 (u64/2) @r3 (u64+1) *main
    push @r12 @r2 <M> ^u64
