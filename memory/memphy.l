entry:
    @r11 (@r9/3) @r5 @r6
    jmp u16 u16 (@r12+3) *block *block @r2 (@r5/1)
    jmp ^*main && @r3 (*main/2)
    ldp ^@r11 @r1 ^u32 (^*block/0_2)
    @r9 <> @r2 M M
    push @r2 (^u64/1)
    lsl M <M>

    cmp ^@r11 (^@r6/0_2) @r4 @r6 @r9 (*block/0_2)
    dw ^@r1 @r6 u8
    push @r3 ^@r8
    ldp (^<M>/3) u64 ^@r3
    dw @r8 @r8
    jmp @r7 <> ^@r11 @r1

    dw u16 (^u16+1) (^@r1/0_1) @r1 @r7
    push u32 @r10 ^u32
    cmp M @r8
    dw u8 ^*main M @r6 @r6

    jmk (@r5/0_1) ^@r2 u16 *main

    cmp @r5 ^@r10 u64 (@r10/2)

    cmp @r9 && @r11 @r9 ^*block *main @r3

    ldp @r11 @r7 u8 @r5 @r6

    cmp ^u8 ^u32

    jmk u32 (@r11+1) <M> && @r7 (@r10/0_2) M
    @r7 <M> (@r12+0_2)
    push ^*block @r2 (@r1/3) ^u32 @r5
    mov (*main+0_1) @r7 M
    @r2 @r8 @r12 u16 (^&&/0_1) @r7 (@r6+3) @r10
    jmk ^@r6 (<>/3) @r12 <M> ^@r1

    @r4 u16 @r12 @r9 && (&&+2) u16
    cmp && u64 @r12 @r2 ^u8 *main u64
    @r8 u16 *block (@r10/2)
    @r7 M u64 <M> @r8

    ldp ^&& ^@r1 ^*block *main
    jmp ^u8 u64 u64 *main
    cmp && @r5 ^u64 M
    movk *main (u16+2) ^&& ^u64

    jmk (^*block+0_2) @r2 ^&& (^u16/1) <M> @r5 @r3
    ldp @r10 @r6 u32
    movk @r3 <> @r11 u64 u8

    @r7 @r2 <>
    jmk @r9 <>
    movk M (*main/3) (@r4/0_1) *main u64

    @r4 (^@r3+2) ^*main *main ^*block

    movk @r3 (^@r7+2) u32
    cmp @r7 u16 @r7 @r12 u16 M
    ldp M @r4 ^@r9 && <M> u64
    @r10 ^@r9 <M> @r11 @r2 ^@r8 u16 @r3
    ldp u64 (^@r6/1) @r4 @r8 @r10 M

    @r6 (*main+3) (*block/0_2) @r6
    dw @r2 @r1
    dw u16 <M> ^u8 @r4 @r1 @r1 @r9
    mov ^@r9 ^@r11 (@r8+0_2) ^@r7 ^M @r4
    lsl (@r2+1) @r4 @r5 ^@r11
    jmk (@r12+2) (^@r12/0_1) (@r11+0_1) @r3 <M>

    push @r3 @r10 u8 ^<M> *main (&&+1) @r9
    jmp u8 ^*block *block

    @r6 *main (@r6+2) M @r4
    jmp @r10 @r6 u32 (@r12+1) (^@r9+0_2)

    mov ^u8 @r7 @r5 @r4
    lsl (@r4+1) ^@r2 <M> @r5 @r6 (&&/2) ^@r11
    ldp <M> @r6 ^@r6 (<>+3) u16 @r8
    push <> (u16+1) (@r3+3) ^@r9 @r4 ^*main
    push (^@r10+0_1) @r3 *main @r3 *block ^@r10

    jmp <M> (@r4+1) (@r12/3)
    lsl u16 ^@r9

    @r7 ^u64 *block (<M>+1) (u64/1) M u8

    movk u8 @r11 @r9 @r6

    dw (^@r6/3) u32 ^@r5 u16 (M/1)

    push <> (u16/2) *block ^u32
    dw M @r5 @r11 ^@r8 @r3 @r8

    jmp u32 @r5 (M/1) @r5 @r12
    @r9 @r8 *block u32 u32 (^u64+2)
    @r7 (@r3+0_1) <M> <> @r1 u64

    push (@r2+0_1) ^@r2 ^@r12 @r1 @r6 @r6
    lsl <M> @r2 ^u32 ^@r11

    mov @r4 @r2 @r6 ^@r11 @r10 @r5

    lsl (@r5+0_1) (@r8+3) @r6
    mov @r6 @r7 ^@r1 <> *main &&
    push ^u64 && @r11 u64 && u8

    jmp <> ^<> M @r5 *block ^@r1 *main
    push <M> @r1 && ^*main (@r1+0_1) @r8 (^@r2+1)

    movk ^*main (M/2) (u16+1) u32 ^@r6 ^@r6
    push ^u8 u32 ^@r10

    @r4 ^@r1 (u16+1) u64 @r6
    ldp @r10 ^@r8
    mov @r6 ^u32 @r1 && M @r1 @r5
    @r2 ^*block @r9 (^@r6/2) @r12
    cmp ^@r12 ^@r10 @r11
    mov @r7 ^M
    mov (&&+3) ^u32 u32
    push @r8 *main @r4 @r1 *main *main M

    mov *main <M> ^M (@r6+3) *block ^@r6
    lsl u8 u8 @r5 @r11 (@r1/1)
    mov @r8 @r6 u32 @r1 && (@r11/1) ^@r7
    @r3 @r5 @r2 u64 (@r2/1) @r2 (@r8+0_1)

    @r7 @r5 (*block+3) @r4
    @r8 @r9 @r12 @r6 @r6 @r12 *main M
    jmp ^@r7 @r10

    lsl @r7 <> u8 ^@r12 @r9 @r11

    movk (@r4/0_1) ^@r1 M M (@r1/1) u64 @r3
    cmp ^u16 (@r8+3) ^M @r4

    movk (u8+3) ^u16 <> (@r3+0_1) @r7 @r4
    @r7 && u8 (@r2+3)
    ldp @r4 (<>+0_2) ^*main *main @r9

    @r7 (@r6/0_1) @r11 @r6
    jmk (*block/0_2) @r12 u16 (@r10+0_1) (@r6+1) @r10
    movk *block u16 @r1 @r9

    ldp (<>/2) (*block+3) ^u64 @r12 ^@r11
    @r12 u16 @r2 @r9 @r5 M ^@r11

    cmp @r4 @r5 @r10 @r7 @r1

    mov @r1 ^@r1 <> (@r7/3) ^@r11 @r8 M

    dw @r10 u32 *block @r5 @r10
    movk <M> <> @r9 (u64+0_1) @r12 @r6 @r10

    mov @r6 u32 @r3 u8 u8 ^u32
    movk M @r5 @r5 u32 @r7 @r7

    dw ^M @r3 (<>/0_2) *main @r3 ^*main

    cmp @r5 ^@r6 (@r8+0_1)
    dw ^*block ^@r3 ^@r7 @r12
    jmp (@r4+1) @r12 @r12 u16 @r1 (@r8+0_2) @r4
    ldp ^@r3 @r7
    jmk @r12 ^<>
    cmp (@r2/1) ^@r9 *main ^M

    @r10 u64 ^@r5

    movk (u8/0_2) (^<>/3) ^*main (u8+0_1) @r3 ^M

    @r7 @r3 u32 @r6 <M> (M/2) (<>/3)
    lsl (^@r10/3) (u8/1) <>
    ldp ^@r2 (@r11/0_1) (@r4+3) @r6 @r10 @r8 (@r12+1)

    mov (^M+2) ^@r3 <> @r7 @r1 @r5 u16

    lsl (^u8/0_1) @r1 @r5
    jmk @r2 ^u8 @r6

    ldp && M <M> u32 ^@r6
    jmp ^@r9 M <M>

    movk u8 @r7 u32
    @r12 @r7 *main @r11 (u32+2)

    dw && &&
    cmp @r7 ^@r10
    movk @r2 @r2 u16 @r3 @r9 @r12

    mov u16 @r7

    @r8 @r3 @r6

    movk *block *block u8
    cmp (<>+2) @r9
    @r9 @r8 (@r8+3) u16 @r3
    mov ^@r2 u8 M
    @r9 @r7 u8 u64 <M>
    movk @r8 M @r8

    push @r5 (u64/2) u64 @r4 @r7 <> @r9

    jmk <> u64
    lsl u16 *block

    push (u8+1) @r3 M @r7
    dw ^&& (@r7/0_2) (^u64/0_1) && <M> @r3 u64

    movk @r2 @r9

    @r11 @r2 ^@r8 @r1 (^M+1) (u64+3) @r3
    movk @r2 @r2 @r12 && @r10
    @r8 ^<M> u32 ^<M> u16 && @r5

    jmk (@r4+1) (@r5+0_2)
    mov (@r1+0_2) ^@r7
    @r8 M (@r4+3) <> @r6 ^@r4
    lsl ^u32 @r5 @r8 ^u8 ^@r8
    dw @r6 u8 u16 @r8 <M> (u32/0_1) (@r1+3)
    mov @r6 ^@r6 ^@r10 <M>
    movk @r7 <M> (u32+2) @r1 ^u16
    jmp @r6 ^@r10 @r8 @r3 ^@r5 @r1 *block
    @r12 @r6 @r12
    @r8 (@r5+0_1) @r5 u64 @r5 u32 @r8
    cmp @r9 @r5 (*main/1) u16
    cmp @r1 @r6

    lsl M ^<M> u16 @r12 @r2 (@r8+0_2)
    lsl ^@r10 @r10

    @r8 u64 @r4 @r10 ^*main && *main &&
    mov (*main/0_2) ^@r9 @r7 @r12 ^@r8 @r4 ^u16
    jmk (@r12+3) u8 @r6 @r2 @r6 ^@r12 @r12
    dw @r11 ^@r10 ^@r3 @r10 (@r2/3) u64 ^<>
    mov ^<M> ^@r12 u64 (@r3+1) @r7 ^@r10 ^<M>
    jmk @r10 u64 ^@r12 ^&& ^@r9 <>
    dw @r2 *main u16 (^@r9+2)

    jmk *block ^@r2 @r7 && M @r4
    mov (^@r9+3) @r12
    @r5 ^@r8 @r12 @r7 @r3 (@r6/0_2)
    lsl (@r12+1) (@r7+0_1) @r10 @r3 &&

    dw *main @r7 (<>/2) (u32+3) <M>

    @r8 (u16/2) u32
    lsl *block ^<M>
    jmp ^@r4 (^@r7+1) (@r10/0_1)
    @r12 <> *main
    @r1 (^@r9+2) @r1 &&
    ldp @r8 *block

    lsl M @r3 (<M>/0_2) (@r12+0_1) @r6 u8
    lsl ^@r8 u64
    cmp ^<> ^u64 ^M
    cmp @r3 M @r2
    @r2 ^@r7 ^<M> (*main+0_2)
    lsl (u32+3) @r11 *block @r4
    @r10 @r12 u8 (^M+2) u64 (@r2+0_2) @r9 ^@r10

    jmk ^<M> @r4 ^*block *main @r4 ^@r3 @r11

    dw u32 <>

    lsl *main @r9
    jmp ^u64 (u16/0_2) @r8 u16 @r2
    cmp @r2 @r2 (^<>+3) &&

    movk @r8 ^u64 u8 ^&& @r9 @r6

    lsl ^@r3 u64

    @r11 @r11 u8 (&&/2) u64
    dw @r2 (@r5+2) u32 u16 ^u64 @r3 *main
    lsl ^@r7 (^@r8/1)
    dw @r4 (^u16/0_2)
    jmk *block (*main+0_2) ^*block @r7 @r4 @r1 @r2
    mov <> @r9 <> @r6 @r6 *main
    mov u8 <> @r10 @r10 u32 <M> u8

    mov (u16/0_1) *main

    @r11 ^<M> (@r7/2) (^u8+2) @r5 @r6 ^@r8 @r6
    dw *block <M> ^<M>
    @r12 <M> @r5 ^@r1 ^<M> <> (u8/1)

    mov (<M>+2) ^*main *main (@r12/0_2) @r4
    push (<M>+0_1) ^@r7 (@r4/1) @r4 @r4 (@r11+0_2) @r8
    dw @r10 (<>+2) @r4 u64 @r3 ^@r7
    mov ^@r5 @r11 (^@r1/0_2) <> ^@r5 (u32+1)

    @r1 *block (<>/1) ^@r8 u8
    @r2 ^@r3 @r6 @r12 @r5 u8
    @r1 ^@r9 @r3 @r3 @r7 @r11
    movk (^@r3+1) *block
    cmp @r3 u32 @r2 ^@r8 ^@r11
    mov && <> @r1 @r3
    ldp u32 u64 @r12 @r9 @r9

    jmk ^&& @r9 ^@r7 @r5
    @r12 <M> *main (@r10/1) ^*main ^u8 u64

    cmp ^@r4 u64 <> ^@r7 <> @r8
    jmk M @r10 ^&& u32 (@r5+1) (@r3/2)

    @r6 @r4 @r2 @r9 @r12 @r8 <M>
    jmk M @r7

    @r3 <> <> ^@r9 @r12 ^*main u16 <>
    lsl (@r6/0_2) u64 *main @r9 u16 M

    cmp ^@r8 u32 (^@r6+0_2) @r4 @r1 ^M ^@r12
    lsl u32 @r7 @r9
    jmp (<>+2) (^u64/0_1) @r4 M (u8/3) @r1 *block
    jmp @r6 ^u16
    cmp u32 ^u16 (@r2/0_1) @r8

    movk @r9 (^u16/3) @r3 <M> && @r7 u64
    @r12 @r5 *block u8 <M> @r10 u32 ^u32

    jmp @r11 <M> *main
    dw <> @r7 @r4 (*main+1) @r2 @r6

    jmk u64 (^@r9/3) @r11
    ldp ^@r10 ^u64 @r11 ^@r8
    lsl && u8 *block M @r8 ^&& <M>
    ldp @r3 u64 (@r6/0_2)
    jmk ^@r6 @r5

    lsl <> ^@r10 @r9 (@r9/1) @r4 @r10
    @r10 u8 (@r8+0_2) ^@r5 @r11 ^@r5 (u16/0_1)
    jmp u32 <M> @r1 ^@r3 @r3
    ldp @r1 @r12 ^*main u64 ^@r12
    jmp && @r5 && @r10 @r3
    ldp <M> @r7 ^@r10 u64 @r7 (@r4/0_1)
    cmp u16 <>

    @r6 @r3 @r9
    jmk @r12 (@r9+1)
    @r4 u16 @r4 @r9 @r12 (@r12/0_2)

    @r11 ^@r7 <> u16 (^<>/0_1) @r9 @r12

    movk *main ^u64 ^@r2 @r7
    jmk @r1 @r12 u32

    lsl @r3 @r2 (@r2/0_2) <M> ^@r1

    jmk @r6 @r10
    jmk (M/3) ^M

    cmp @r5 ^@r7 ^*main ^@r12 @r6
    ldp @r2 (@r11+1) @r6 @r9 @r4 @r7
    @r11 @r5 (M/1) @r6

    movk @r7 @r10

    @r9 @r4 *main *block
    mov && u32 @r10 @r9
    cmp ^&& ^u64 @r2 @r9 @r4 ^<M>
    lsl @r12 M (u64+0_2) @r5
    dw u8 (^*block/0_2) u8 @r11 u8 <M> ^@r12
    @r8 u64 ^u8 @r6 @r8

    movk @r10 @r11
    cmp *block @r1 ^u16
    mov ^M u32 @r9 <>

    ldp @r11 (@r8/0_1) *block ^@r5
    dw u8 *main @r2 @r11 (^@r8+1)

    mov (@r10+0_1) (@r10/0_1) ^@r10 u32 @r3 @r3
    jmp <M> u64 M
    @r7 && *main M @r5 @r7 (^u32+0_1) u32

    dw u16 (&&+0_1) @r5 @r8
    lsl u8 @r10
    jmk u64 (<M>/0_2) (u8/1) @r1 @r11 (@r11+2) @r8
    jmk <> *block ^@r12 @r5
    @r1 ^@r4 ^@r6 @r11 @r8 *block ^u64
    push (@r11+2) <> ^&& @r8 <> ^@r1 (@r1+2)

    dw *block (@r1+1) @r12 &&
    cmp @r10 u32
    ldp u32 ^@r7 @r11
    @r10 (*main/3) *main
    dw M @r10 <M> @r2

    push ^@r7 <> u8 @r2 @r10
    dw && @r1 ^<> u32 u64
    mov (^@r10+0_1) (@r10/0_2) (@r12+2) @r2 u32 @r1
    @r8 @r10 @r1
    mov *main @r4 (u16/2) <> @r7 @r8
    jmk (M/3) @r9 && (u16/0_1) <M>
    ldp @r12 *main (@r1/0_2) @r4
    dw @r9 (@r4/0_2) u16 u32
    cmp ^u64 @r7 @r9 @r1 &&
    @r6 @r11 ^@r12 @r7 ^@r4 @r1 && @r10
    movk u64 @r12 ^u8
    @r5 (^u32/0_2) ^@r11

    @r12 ^u32 @r2 @r3 @r4 ^@r1
    dw ^@r11 @r1 (<>+3) M @r4 @r2
    jmp ^*block *block @r7 @r3
    @r3 @r4 (*block/0_1) @r10 (^@r2+0_2) ^&&

    dw @r2 <M> @r2 @r9

    lsl @r11 @r1 ^@r6
    @r1 @r12 @r2 u32 ^u64
    movk ^u32 @r4

    jmp *block @r6 @r8 (*block+1)
    cmp @r3 *main

    ldp (*block+2) @r5
    dw @r10 ^*block ^@r2 *main @r2 (^@r10/0_1) @r5
    @r7 ^u8 @r3

    cmp ^@r6 @r2 @r4 u32 ^@r9 @r9
    mov u16 *block (^@r3+3) *block ^@r2 @r6 u8
    jmp ^@r4 (@r2+0_2) @r4 (u16+3)
    ldp <> @r11 ^M @r6 (^u64+2) u64
    @r1 @r11 (M+0_1) @r5 && @r9

    ldp *block (^@r5/2)
    movk && @r1 <M> (@r10/3) ^<M>
    jmp ^@r10 *block
    @r11 M ^<M> @r7 ^M *block <M> u8
    cmp @r4 *main

    dw (^@r12+1) ^@r12 (&&/0_1) u16
    jmk M ^@r1
    lsl ^&& (^@r1+0_2) u8 <> <M> (^@r7/3) ^@r5
    @r4 @r6 ^@r8 *block (@r5+3) @r10 u8
    lsl @r1 <M> @r1 @r3 ^u8
    @r5 @r7 (@r11/0_2) u16
    lsl <M> (M/3) @r1 (@r7+0_1) @r7 ^@r10
    jmp @r11 @r9
    lsl @r12 ^@r3 @r6 (@r1+1) (@r3/0_1) <> @r8
    jmk @r3 u32 @r6 ^@r11 @r12 (*main+0_1)

    dw && @r3
    ldp u16 (@r9/2) u64 @r2 (u64+2)

    @r12 u8 ^@r4 @r5 @r7 @r7 (u8+0_1) ^u16
    @r4 @r10 u32 @r8 @r8

    mov @r8 *block ^@r7 *main <> @r9 u32

    jmp ^@r1 (@r8/1) *main ^@r1 @r2
    ldp ^*main M @r8 @r2
    mov @r5 @r8 (^@r2+3) u8 <> ^@r12 u64
    @r12 *main ^u8 *block <M> (@r1+2) *block <M>
    ldp ^@r2 @r1 <> ^@r2 ^@r2
    jmp @r8 @r10 ^&& @r12 <>
    jmp u64 u64 <> (u8/3) (u64/2)
    ldp ^u8 && *main @r2 @r4 @r1
    ldp @r5 @r12 @r4
    push @r3 u16 @r3
    movk ^@r11 u64 @r11 (^u64/1) (@r8+0_2)

    mov ^u32 @r8 @r1 @r1 ^M
    @r9 @r2 *block ^<M>
    movk (*main/0_1) ^@r7 (&&+0_2) <M> @r8 u64
    dw @r5 @r10 ^@r6 ^u32 (@r5/0_2) @r12 @r12
    @r11 (@r7+3) ^@r6 ^@r3 *block u64 u8
    ldp @r10 @r1 *main @r11 @r9 @r4
    ldp (@r2+2) @r5 @r1

    @r10 M <> @r6
    ldp *block @r3 @r11 @r5 (@r11/3) ^u64

    lsl ^@r4 ^u16 <> @r8 @r6
    cmp M @r4 M (u32/2)
    cmp u64 @r7 @r3 ^@r9 @r12 @r9 u16
    cmp u8 (@r2+1) <>
    @r7 @r8 u64 @r9

    mov ^@r5 @r7 (^@r10+1) @r8 u16
    push u32 @r1 (@r5+0_2) *block @r2
    dw @r5 @r4 *main u16 M *block
    @r11 (@r11/1) (u8+0_1)
    jmp @r2 && *main @r10 ^@r4 u8
    ldp (@r7/1) @r1 u64 ^@r7 ^u8
    jmp ^&& && @r9 @r8
    @r11 ^@r7 ^&& u8 ^&&

    lsl @r4 (@r5/0_1) u64 @r3 @r2 @r4 u8

    cmp @r7 (^@r6+0_1)
    lsl @r12 *block @r6

    jmp @r11 ^u8 (@r8+2) @r4 u16

    cmp u8 u8
    movk (@r9+1) u64
    dw ^u8 (&&/1) ^@r3 (*main+3) (@r9/2)
    @r2 (@r11+1) ^*block *block (<>/1)

    ldp @r3 @r10 @r1 ^@r3

    jmk (*block+0_2) (u16/1) @r9 @r10 ^u32 M
    jmk *main (@r9+1)
    movk *main @r11 @r10 && M @r10
    dw @r10 ^u16 ^@r4 @r4 @r10 @r9
    @r4 @r11 @r2 @r4 @r9 (u8+1) @r7

    mov u32 u32 @r3
    jmp @r8 *main @r7 @r5 u8 @r12
    ldp u8 <> @r6 @r1 ^@r12
    @r12 ^*block @r1 *main @r3 u32 @r2 M

    @r4 @r12 (@r10/0_1) ^@r6 ^@r3 ^@r2 ^@r9 (@r7/0_2)
    ldp @r5 <M> u16 @r6
    movk && (&&+0_2) @r6 @r4 *main @r5 *main
    @r1 u32 @r7 @r6

    jmk @r5 @r8 M <M>
    @r12 u32 ^@r11 ^u8
    lsl @r12 @r4 ^@r11 u32 <M> (@r2+0_2) @r9
    dw @r11 u8 <M> <> (@r1+0_1)

    @r3 @r8 &&

    ldp (^u8+3) u64 u64

    ldp (@r5/2) *main u16 @r9 @r4 *main @r1
    @r10 @r7 u8 @r7 @r4
    mov u8 @r11 (u8+3) (^@r6+0_1) @r8 @r6
    ldp (u32/3) @r6 @r1 @r9 <M> M ^*block
    @r3 @r7 @r5 @r3 @r5 *block

    mov ^@r9 @r1 @r12 @r9

    jmk @r7 @r1 @r7
    cmp <> (@r9/0_2)

    movk @r6 @r7 u64
    ldp *main *main @r9 @r8 u16 *main
    jmp @r1 (<M>/0_1) ^*main @r5 @r6
    jmp @r7 @r10 u32 ^*block @r10

    push @r8 ^@r4 ^u16 u8 @r8 @r1

    @r6 (@r5+2) @r12 <> @r9
    ldp *main @r12 M @r10 @r10

    @r6 @r5 <M>
    dw @r5 @r9 *block @r1 @r10 *main u8
    movk (<>+0_2) (^u32/1)
    jmk @r5 *main u64 @r2 ^u16 (u32+3)
    jmk @r9 @r5 ^<M> (@r2/0_2) @r8 <M>
    jmk (*block/2) u16 *block *main *block

    mov @r11 <M>
    movk M (@r11+1)
    dw (<>+0_1) && @r11 <M>

    @r3 u64 && u8 (u16+2) u64 @r11 (<M>+2)
    @r4 ^@r12 @r12 && u16 u32 (@r9/2)
    mov <> <M> (^@r5+0_1) (@r8+1)
    @r1 @r7 ^M @r12

    mov ^u64 ^@r1 ^<> ^M ^@r11 @r8 @r7

    @r8 @r8 u8 *block @r9 <>

    @r11 ^@r12 u8
    @r9 ^M @r5 *block @r8 @r12

    jmk ^@r8 u64 ^@r10 *main ^u8
    lsl u16 @r12 u8 ^@r10 @r11 @r3
    ldp @r2 && ^@r9
    @r4 @r7 @r4 ^@r11 @r4 @r2 u64 (^&&/1)
    mov u64 ^@r9 @r4 ^@r11 <>
    movk @r9 @r1 u16 ^@r9 (@r7+3)

    push *main u16

    @r4 ^@r2 u8 @r11 *main ^&& @r6 @r6
    dw <M> (*main+1) ^u64
    dw u8 @r10 *main ^@r4 (<M>/1) <> @r2
    lsl (@r12+0_1) (u8+0_2) @r6 <M>
    push ^u64 <M> (^&&/2) ^<>
    lsl M M (^@r10/0_2) (@r8/0_2) (M/2) u64 @r12
    jmp ^u64 ^<> (@r3+3) ^&& *block

    jmk *block u32 @r1 ^@r3 ^u64
    lsl M u16 ^u8 *block (^*main+3) @r3 (@r5+1)

    cmp @r5 <> (^@r9/1) u16 @r12
    push (@r6/3) @r1 @r5 *main @r6 (@r10/0_2)
    lsl *main M u8 (@r5+3) @r7 @r5 ^u64

    @r7 <M> ^@r12 M M
    cmp (@r8+0_2) ^M (@r6+3)
    jmp u64 <M>

    dw *main ^@r9 (^@r8+0_2) @r1 (@r5/1)

    ldp ^&& && u32 u64 ^@r11 u16 (u8/0_1)
    ldp M @r2 M (<>/2) u16 M ^@r11
    @r5 M @r3 (@r5+1) @r1 <M>

    @r9 @r6 ^u32 u8 u32 @r1
    @r10 M ^@r8 u16 @r2 u64 *block ^@r1

    mov @r12 @r3 @r3
    movk @r5 && (@r1+0_2) M @r5 u32 @r5

    @r12 ^@r8 @r10
    @r7 M ^u16 *block @r3 *block
    mov @r10 (u8/2) (^*block/0_2)
    lsl @r10 (u32+0_2) @r8 && (@r12+0_2) ^@r3 @r9
    push @r1 @r5 @r10 u32 (@r4+0_1)

    push @r1 ^@r1 @r3 (@r2/0_2) (M/2) <M> ^u16

    @r1 ^@r1 ^@r4 u64 (<>/2) @r10 ^@r7 <>
    jmp @r3 (u32+3) (@r5+3)
    dw ^@r2 (@r10+0_1) (^<>+1) *block ^u8

    movk @r3 ^*main u8

    mov (&&+0_2) ^@r6 (^@r8/3) u16

    ldp @r8 (@r8+0_1) u8
    movk (^@r12/2) @r6 ^*block
    cmp @r8 u8 ^@r1 @r1
    jmk <M> (&&+1) (u16+0_1) (@r7+0_2) @r7
    ldp ^<M> (u8+0_1) u32 @r9 ^u64

    jmk (@r3/0_2) u64 &&
    jmk ^u16 ^u64 @r10

    cmp @r7 u32

    jmk @r7 @r1 @r8

    lsl ^<M> (u16+2) (M+3) @r3 @r2 @r11

    movk ^*block u64 (<M>/0_2) && *main
    push @r8 <M>

    dw @r12 *block (u32/1) && (u32+0_2) u32 (@r11/2)

    dw @r3 @r10 M @r1
    movk u8 (u8/2)
    @r2 @r4 @r10 @r12 && @r3 ^u32
    lsl @r6 (<M>/0_2) @r1 @r6
    @r5 @r9 ^*block @r9 @r1
    @r2 ^*block @r12 @r3

    ldp *block (@r1+3) @r7
    jmk ^M @r7 u16 @r5 (@r5/0_1) @r7 M

    @r5 @r3 (@r7+3) ^u8 *main @r5
    mov u64 *main u16 ^@r12
    movk @r2 @r11 ^@r6
    jmp @r11 (u32/2) @r4 (@r6/0_1) u8 @r1
    jmp @r9 (@r11+0_2) @r2
    jmp u16 *block M (@r5/0_1) ^@r12 @r10 u32
    ldp (u32+0_1) (@r3/1) (^@r8+0_2) @r2 (@r10+0_1) (@r5+3)
    mov @r5 @r7 @r1 ^<> <M>

    cmp ^@r3 <> *block

    jmk @r6 M
    push @r10 @r12 ^@r9 @r8 @r8 (^@r2/1) <>
    dw (<>+2) @r3 u64 ^@r9
    lsl ^@r11 @r10 <M> (^M+1)
    mov u16 @r10 *main @r9 @r5 u64

    push *block (M/2) && <M> *main @r4
    @r12 *main <M> @r12 ^u32 u64
    jmk ^<> @r6 @r5 *block ^@r7 @r7

    push u64 @r4

    @r6 @r9 @r6 @r1 @r12 ^<M> <M>
    @r2 @r7 @r9 u64
    mov @r4 ^@r1
    jmk *block @r1 @r8 && ^u8 u16

    ldp @r7 @r1 @r4
    lsl @r1 && (@r8/3) u16 <> <M> @r5
    mov <M> u16 (^@r9+3) M
    @r11 @r1 @r2 @r12
    ldp *block <> (@r9/3) @r4 @r9 ^@r12 @r6
    @r3 (^*main+3) *main
    lsl @r12 @r11

    dw @r8 (u32+0_2) u8 @r2
    dw @r2 <>
    movk *main u32 ^*block
    cmp (^@r11+3) (u64+0_1) @r3 u8

    lsl @r7 u8 <>

    movk @r8 u64 *block ^@r3

    dw ^u16 @r3 @r8 @r3 <M> @r4
    ldp ^@r12 ^<M> && (@r10/0_1) @r6
    jmp u32 u8

    ldp <> @r12 <> @r11 u32

    @r8 ^@r4 ^@r8 @r1
    @r1 ^*block *main u64 @r10 @r9
    @r12 M @r3 (^@r4/1)

    dw @r12 u64 ^@r1 ^*main u16

    push ^@r4 @r10 (u64/2) @r1
    jmk @r4 ^M
    cmp (@r10+3) && *main
    @r2 u32 u16 @r8 ^u64 (M/1) ^@r2 u8
    @r4 ^*block M
    push (@r3/3) u32 @r10
    dw ^u64 @r12 u16 ^@r1 (*block/2)
    @r6 ^<M> && (&&/0_1)
    ldp @r6 ^@r1 *block (^@r12+0_1) @r8 @r11 (@r3/0_2)
    mov @r4 M <M> (^u16+3) @r10 u8
    dw && <M> (u8+3)

    dw *main (@r8/1)

    mov u64 M
    jmk u64 @r9
    ldp (@r2/3) ^u16 @r5 @r7
    push @r1 (u64+3) @r9
    mov M @r6 (@r5+1) @r2 @r2
    lsl (^@r1+0_2) <> (^@r4+0_2) @r5 @r8 (^@r10+0_2)
    cmp ^u32 ^u8 u64 @r7 (u64+2)
    jmp @r3 @r10 @r11 @r9 @r6 ^*block u32

    @r3 @r12 && <M> (@r12/3)
    mov @r11 ^@r4 ^@r10 @r8 (@r6+3) <M>

    jmp ^M @r2 (@r7+1)
    jmp @r1 ^*main @r5
    dw u16 u64 ^@r10 @r1 @r9
    @r10 (u8/2) @r11 M

    push <> @r3 u8
    ldp @r12 (@r11/0_2) u16
    cmp ^@r6 &&

    movk ^@r2 (@r12/0_2) ^&& u16 ^@r5 u16
    mov (@r8/0_2) @r10 ^&& @r3 @r3 (@r5/0_1) @r1

    mov @r8 @r6 (u64/0_2) u16 && M @r4
    dw (*block+1) (@r5+2) ^@r8 @r6 (^@r1/2) @r12 @r8

    cmp @r3 ^u32 @r5 ^@r6 ^u16
    jmp u8 ^@r4 (u64/0_1) u32
    jmp ^<> *main (^@r6/0_2) @r9 @r8 (&&+0_2)
    @r11 @r2 *block u32

    jmp (@r8+0_2) M ^@r9 u64
    cmp @r8 @r8 @r3 @r8 ^@r9 ^@r5 @r3
    cmp (@r10+3) <>

    @r4 <> && u64 u64 @r1 @r10 @r7
    @r2 @r7 <M> @r12 M @r8
    @r8 u16 @r6 (@r7/2) @r2 *block (u16/3) (@r3/0_2)
    mov ^@r5 (@r1+3) (&&/2) @r2 @r10 *block u8
    ldp @r3 (^@r4+0_2)
    @r6 @r9 u32 @r3 @r12
    movk *block @r11 @r3 <>
    lsl @r6 @r12 ^<> ^@r11 (u16+0_1)
    jmk ^@r5 ^*main
    cmp @r7 ^@r11 @r5 @r11
    ldp <> @r8 <M> ^@r9 <>
    ldp <M> @r1 @r11 *main M @r10

    jmk @r11 ^u32 @r4 ^u16

    jmk u16 (^u8/0_2) @r2 @r3 @r5
    @r12 ^@r11 @r1 u64 (@r2+0_2) ^@r12
    movk ^*block @r12 @r9 @r9 ^u64 @r1 (@r4+0_1)
    dw u64 @r4 @r12 (&&/1) @r8 @r9
    mov <M> M *main (@r6/2) ^@r4 (@r11/2) ^&&
    ldp && ^u64 @r2 ^@r8

    jmk (@r6/2) ^@r1 M <M>
    push (&&+3) @r4
    mov ^u64 @r10
    @r2 ^@r2 u16
    mov @r11 && @r7 @r9
    dw <> <M> @r12 @r9 @r1 @r6 @r3
    ldp *main ^@r11 @r4 @r7 @r12 (@r8/1) <>
    movk @r6 @r3 *main @r3 (@r5+3) <>
    dw @r11 ^@r5 (@r4/3)

    ldp @r6 @r11 *main @r6 (@r9/0_1) @r8

    ldp u8 u32 ^@r11 (@r7/1)
    movk @r2 ^<> ^<> u32 @r8 @r5

    cmp @r1 ^@r7 <> @r7 @r2 <>
    @r5 @r4 @r11 @r9 @r10 @r2
    movk @r6 u16 @r6 @r12 @r2 (@r12+0_2) u64

    movk (<M>+2) @r2 ^&& @r9 @r4 @r6 <M>
    movk ^@r7 && @r7 @r2
    @r10 u32 u16 *main *block @r6 u32 @r5

    @r2 @r11 u8
    jmk u8 @r12 @r6
    lsl @r9 @r9 && @r9 @r3 ^u16 (^@r3/0_2)
    jmp @r10 && @r5 @r5 @r1 ^@r12 (@r5+1)
    ldp M @r3
    movk ^@r1 u16 @r11 ^@r12 @r6
    movk @r11 @r4 <M> @r5

    lsl @r12 @r4 u8 @r8 @r5
    lsl u32 ^@r4 ^u16 <M>
    cmp @r6 M
    movk *main && u32 ^u8 @r1 u64

    mov ^@r11 ^<> u16
    movk u8 (@r1/3)
    lsl @r3 @r1
    jmk <M> @r10 ^u16 @r9 ^*block

    @r4 ^u64 (<>+0_2)

    jmk <> u16 (u16+0_2)
    jmp *block ^@r11
    push ^u32 @r9 @r3 <M> ^@r9
    dw ^u16 @r10 @r9 u64 (@r10/1) @r12 ^u16
    @r1 @r1 <M> @r10 &&

    jmk (*block+0_2) u32 *main && && ^@r1 @r9

    cmp @r8 *block (@r2+2) *block
    jmk @r3 && *block
    @r5 u8 @r3
    @r7 @r10 ^@r6 @r10 (*main/3)

    push *main @r8 ^u64

    ldp ^&& && @r2 && ^@r5
    lsl (<>+1) @r8 @r3 @r3

    dw u8 M @r8 ^<M>
    @r3 ^@r4 u8 @r5 u16 u8
    @r10 (u8+1) <> (@r4/0_1) @r4 @r10 ^@r9 @r4

    push @r7 u32

    @r6 u8 (@r12+0_1) (^@r11/0_1) && @r3
    movk ^&& u32 u8 <> @r12 @r9 <>
    mov @r12 && (@r8/0_2) u8 u32 @r11 @r2
    mov && ^@r3 (@r4+0_2) <M> <> (@r4/2) @r7

    mov @r12 (@r10/2) ^@r4
    jmp *block (<M>/3) (^@r5/1)
    push ^u16 @r6 ^<> (<M>+0_2) @r3 u32
    @r2 M @r6

    lsl @r3 @r6 @r11 @r5 @r10 (@r9/3)

    jmp (@r2+0_2) ^<M> @r12 @r9 *block ^@r8 ^<M>
    @r3 @r5 (^<M>+0_1) && @r11

    mov ^*block ^@r12
    @r7 @r3 @r9
    dw @r9 @r5 (&&/1) ^@r1
    dw @r6 M
    mov ^@r9 @r11 ^M

    lsl @r4 M M
    jmk @r2 (@r4/2) @r10 *main M ^@r4 (@r6+2)
    lsl u64 <M> @r5 @r5 ^@r9

    push @r11 @r8 (*main/2) ^@r8 @r4 *main @r7
    @r4 M (@r12/1)
    cmp @r2 @r10 ^@r10 (@r4+0_1) *block (M/2)
    dw @r9 <M> u32 ^M *main @r8 ^@r4
    @r6 ^@r7 @r10 @r5 @r4 <> u64

    ldp u64 *main ^@r7 (<M>+3)
    push (^@r1+0_1) ^@r1 @r3 (u32/2) ^@r11
    dw u16 (&&+0_1) ^M

    dw u32 ^@r4 ^@r8

    jmp ^@r2 (@r1+3) (@r6+0_2) @r10

    jmp ^@r12 @r12 M u32 (<M>+1)
    movk (*block/3) @r2 @r3 <>

    jmk @r3 ^u64 ^@r5 @r5 ^&&

    movk (@r3+3) @r2 @r4 ^@r1 (@r3/0_2) @r9
    dw ^*block *block
    push (@r9/2) ^u8
    cmp @r7 (@r4+0_1) @r5 @r4 @r7

    push *main ^@r8 @r11 @r3 (^@r5+1)
    lsl ^@r6 ^<M> <M>
    @r7 @r8 @r9 u64 *main ^*main *block

    jmk @r8 (@r3/1) <>
    movk @r10 ^@r9 <M> @r12 ^@r5 @r3
    @r4 ^<> (^@r10/1)

    mov u16 (@r10/1) u8 (^M/2) @r10
    @r7 u16 @r10
    mov ^*main @r10 @r3 ^@r10 u32

    jmp <> (@r4/3) && @r8 ^<M> ^@r6
    movk ^@r5 ^@r11 @r10 u8
    cmp *block && (u16+0_2)

    jmp u16 M && @r12 @r9 (@r4/0_1) @r11
    push @r8 @r4 @r5 *block && *block

    jmk (u64/0_1) @r11 *block @r6

    lsl @r10 @r12 *main @r4

    push @r8 @r4 ^&&
    cmp @r8 ^&& u8 @r3 u64
    @r12 @r12 @r6 (*main+0_1) *main @r9 *main (@r9+1)
    push (M+3) (@r8/1) @r5
    cmp u64 @r2 @r1 *block @r2 *block
    ldp (@r9/0_2) ^@r4 @r10 @r3

    jmp @r2 (u64+0_1) @r11 @r4
    movk u64 (^@r2/0_2)
    push (@r2+2) @r11 @r10 ^u32
    jmp @r8 @r5 *main

    mov ^M ^u64
    lsl @r9 <M>
    jmk @r6 @r1
    dw (@r1+0_1) ^<> @r12 (u8/2) (@r8+3) @r3 @r7
    dw <M> @r1

    lsl @r5 *main ^@r4 (@r9+1) (<>/3) (@r11/2) (<>/0_1)
    push @r5 u8 u64 ^@r2 @r6 @r7

    mov @r6 @r1
    jmk <> ^&& u32 @r3 u16 @r8 ^@r2
    cmp @r3 (M+1) (*block/2)
