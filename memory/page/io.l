    dw *main && (u32/0_1) @r11
    cmp @r2 u16 (@r3+0_2) ^*main <M> ^@r8 u64

    cmp M (@r4/1) (<M>+2) u16 ^@r3
    cmp *main ^u32 @r12 u32 u32
    mov (^u32/0_2) ^@r9 @r5 u8 @r5
    cmp && ^u16 @r6 ^*main @r3 <M>

    jmp (@r4+0_2) *main @r8 (^@r4+1) *main

    @r7 M (*main+0_1) (u16/0_2) @r1 ^@r3 @r1 u32
    mov ^u64 u32 (*block+0_1)
    lsl (u32+3) *main @r10 @r11

    cmp (@r2+0_2) <>
    push M (@r1/1) (^u16+1) (^u16/3)

    jmp (^@r2/0_2) ^@r12 (^u8+1) ^u64 @r2
    ldp && @r6

    push ^<> @r4
    jmp (u32+0_1) (<>/2) @r9 ^@r3 @r4 (@r4+1) @r9
    @r3 (@r3/3) @r7 u32 @r10 (M/0_1) (<>+3)

    cmp && *block

    cmp u16 && @r3 ^@r3 @r9
    ldp ^*block @r11 @r3 ^@r11 ^@r1 M (@r4/0_1)
    @r9 u16 @r10
    lsl (M+2) u32
    cmp @r4 @r4 (^*block+1) (*main/1)
    @r5 @r9 (u16/0_2) <M> @r12 (^*block/2)
    jmk (@r5+3) *block
    jmk M M @r2 M
    movk @r3 @r1 *main u32 (@r2+2) *block

    lsl @r9 <M>

    lsl @r5 *main *block

    mov @r10 <M> M u64 @r3 ^@r2

    @r12 ^@r9 ^@r10 ^@r4
    cmp @r1 u8 *main @r12
    mov <> <M> ^@r9 u8 u64
    mov (^@r10+0_2) (@r5+2)
    mov u8 (^@r12+0_2) *main ^@r2
    @r11 @r5 ^@r7 ^@r3 <M> <M> u16

    ldp @r6 @r4 M *block ^<> @r1
    cmp ^@r8 @r1 *main @r4 ^@r3 ^@r8

    ldp (<M>/0_1) u32
    lsl @r2 ^u8 (^@r11/2)
    push <M> (^@r12+0_2) ^M *block

    mov @r2 u8
    cmp ^@r10 (^@r6+0_2) *block @r1
    lsl && ^@r10 (@r1+2) ^u32 *block ^<> @r10
    cmp @r8 @r5 @r11 ^@r8 u64 M
    movk @r5 u8 u16 ^<M> *block
    jmp @r6 u32 @r8 *block (^u64+0_2)
    @r4 ^@r8 @r1
    cmp @r9 @r10
    lsl @r11 u64 u64

    jmp ^u64 *block ^@r12 ^@r3 @r6
    @r7 @r10 u32 u8

    movk @r4 @r2 @r9 *main <> @r9 *block
    mov *main ^*main @r8 ^<M> @r12 @r7 @r11
    push @r2 (<>+3) M @r11 ^@r7 u8

    @r4 *main @r9 @r8
    dw u32 ^u8 ^@r7 @r11

    jmp u16 &&
    jmk <> <>
    @r7 u32 *block <>
    @r9 (^*block+3) @r6 (u16/3) ^@r7
    cmp u64 @r1 @r1 @r7 <M> (*block+3)
    jmk @r6 ^*main

    push u8 @r12 *block @r3 <M>

    jmp (@r12/0_2) @r4 u32 @r12

    movk @r12 *main

    @r12 <M> @r2 @r7 @r5 u16
    cmp @r1 (M/0_2)

    @r10 (u32/1) ^@r1 @r6 @r4 M M ^@r2
    push ^@r5 *block *block (@r4+3)
    ldp (^@r3+0_2) *block
    cmp @r4 u8 (@r9+0_1) @r8 *main @r1 @r10
    jmp ^M @r7 @r10 @r7 u32 <> @r10
    jmk @r6 M @r11 @r5 @r3
    movk u16 @r5 u8 @r11 @r8
    cmp (^<>+2) @r5 <> <M> @r12
    cmp @r3 <M> @r10 M (@r6/0_1) u32 (u64/1)
    jmp (@r1+2) @r11 (u64/1) @r8 u32 @r5
    dw <> @r9 @r3 (^<M>+0_1) @r5 @r8

    cmp (^u32/0_1) <> u8 u16 (@r4/3) *main @r5
    movk @r11 ^&& u32 @r5 @r11
    jmp @r2 ^u64 (u8+1) (<>+2) ^M ^@r8 @r6
    movk ^u64 (@r6/0_2) <> (@r9+0_1) @r1
    jmp ^@r7 u8 (@r11+1) u64 @r3
    jmp && @r10 ^M @r1 (@r8+3)
    push (u8+3) u64
    cmp @r7 ^<> @r5 && ^@r10 @r2
    @r6 u8 ^@r5 <> @r9 (<>+2) ^u16 ^<>

    dw u32 @r4 u8 @r8 <M> <M> u64

    cmp ^@r5 <> <> u16 ^<M> *main
    cmp *main ^@r1 <> M u8 @r1
    push @r1 u8
    @r11 @r3 @r2 @r1 @r6 ^@r10 (*block/3)
    movk @r3 <M> (^@r8+0_2)
    cmp @r1 u16 @r10 <M>
    jmp @r11 ^@r5 @r10 ^@r5
    jmp && @r8 ^@r6 (&&+0_2) @r1 @r10 <M>
    dw @r1 u64 @r4 @r3 u32
    jmk ^@r11 @r11 ^<M> @r11 @r5
    jmp @r4 @r7 ^@r2 *main *main ^*main
    dw @r1 @r11
    dw ^@r1 ^@r8 @r8 ^@r2 (*main/0_1)
    push @r5 @r3 @r2 @r6 @r4 @r3

    @r11 ^@r5 @r8 ^@r4 u64
    jmp M && (@r11+2)
    cmp @r7 ^@r11 @r2

    @r3 @r7 ^u32 @r2 *main

    cmp @r1 *main u32 @r1
    mov u32 @r11 @r5 @r1
    mov ^@r9 *main (^@r9/0_1) u32

    mov @r5 @r4 @r10
    jmk <> u32 @r6
    jmp @r10 ^u16
    lsl ^@r5 u64 ^@r5 <>

    cmp @r8 (&&/0_2) @r12 *main @r7
    cmp <M> <M> (@r9/2) *block @r11
    dw u32 @r10 (@r4/2) @r5
    dw @r4 @r11 &&
    @r5 <> @r11 @r11 *block @r9

    jmk @r10 ^M (&&+3) && @r4

    jmp @r3 @r6

    jmk && @r1 @r9 @r5
    mov ^u8 u8 && @r2

    cmp <> ^@r12 (^@r3/0_1) @r9 @r10 u64 ^<M>
    push @r10 ^@r6 @r9 M <>
    jmk @r12 @r10 @r5

    jmp (u64+0_1) @r12 @r9
    cmp u8 @r4 @r2
    dw ^u16 ^M @r6 (@r1+1) (@r2/3)
    @r1 @r3 @r3 && @r2 (@r6+0_2) *block
    movk (^@r11+1) @r1 @r8 @r1 && @r7 ^u8
    movk (*main+3) *block ^*block @r5
    dw @r8 @r6 ^@r4 ^u8 (@r9+1) <> u64
    @r10 u8 @r2 ^<> (^@r1/0_2) @r11 ^u32 @r2
    dw @r8 (@r5/1)
    ldp (^u64+0_2) *block *main @r4 @r8

    movk @r11 *main @r12 ^@r5 @r9
    push @r12 @r1 @r3 *main u32 ^@r4 @r1
    movk u8 ^@r11
    @r9 (M/2) u16 @r12 @r1
    lsl @r6 M ^@r6
    @r11 <M> (M+0_2) M ^&& *main u8 (^<M>/1)
    dw @r1 @r4 @r8 @r7 u64
    mov ^@r10 @r12 u16

    dw *main (u16/0_2) ^&& (u32/0_2)
    lsl ^*block @r1 *block u16 *block @r12
    cmp *block @r12 @r4 @r10 @r11 <> @r8
    lsl (*main/3) @r1 @r12 u8 @r1 @r2 @r8
    jmp @r12 <M> *main u8 @r6

    lsl *main <> &&
    cmp @r2 @r4 ^<> && @r11 M @r7
    jmp u32 @r4 ^@r11 u8 @r12 M <>
    jmp u16 ^@r5 (@r4+0_2) u8 @r2 @r12

    jmp ^@r4 @r7 u64 @r11 (^<>/2) ^@r4 *main

    mov @r11 @r5 @r3 (u16+1) @r12
    push @r12 @r8 M @r6

    lsl @r12 M

    mov u32 @r7 @r3 *main
    dw ^@r10 @r4
    dw @r12 (^@r3/1)

    jmp @r8 @r9 M (u8/2) @r7
    jmk M u16 ^@r6 @r12 ^@r11
    jmk @r10 ^*main ^M @r11
    jmk @r11 *block && (^&&/2) @r3 (@r5/1)

    @r11 *main *block *block (@r9+2) u32

    lsl M @r4 u32 *block (@r2/0_1) ^@r4

    @r8 @r4 @r2 @r8 (*block/3)

    jmk @r12 ^u64 (u16+1) && (<>+0_2) u16
    push u8 <M> u64 u64 (u32/1)
    jmk (@r8+0_1) @r7
    push @r4 u16 @r2 (u16/2) @r9 @r11 ^<>
    movk @r3 ^@r9 u8 (@r12+0_2) && M
    @r10 *main ^@r12 @r5

    movk ^@r7 @r10 u16

    dw (^u8/0_2) (@r9/1)
    @r1 M ^u32 u16 u32 u64 ^@r2

    dw ^@r10 @r10 @r9 ^*main
    jmk *main (^@r9+2) u64 ^M (^@r2/2)

    cmp @r8 ^@r1 (@r12+3) @r6 <> @r2 @r4
    jmk @r9 (^M+2) @r5
    mov (@r11/2) <> @r6 u32
    @r3 (@r5/2) *main ^<M>
    movk ^&& u16

    jmp @r11 u32
    mov *block (^u16/0_2) u32 (@r1+1) ^@r1 ^@r7

    movk M (@r12+0_2)

    movk @r3 u64 @r3 @r6 && ^@r1

    dw @r3 <>
    lsl @r7 <M> ^M &&
    @r11 @r8 (^@r3/0_2) (@r12+0_2) ^u32 u32 u32 u32

    @r10 ^@r7 *main M @r12 ^@r7
    @r8 u16 && @r8 @r10 u8 (^@r12/2) u32

    ldp @r8 @r4 (@r10/0_1) u64 ^@r5 ^@r10 M
    @r10 *block u8

    @r3 (<>+1) ^M (*main/3) M ^u8 @r9
    mov (@r3/2) @r7 @r7 && @r6 @r7
    mov u16 @r5 <M> ^*main u64 (@r2/0_1) @r8
    @r10 u8 @r10 ^@r11 u64 @r9 (^@r4/1) @r7
    movk ^@r12 (@r8/2) <M> (^@r6/0_1) ^@r10 *main
    lsl @r12 (@r7/1) @r5 u16 (@r9/0_2)
    push @r1 u64 && @r8

    push @r12 &&
    lsl ^*main @r1 (^@r3/0_1) u8 @r1 ^@r10
    jmk (*block/0_1) (u16+0_1) ^&& @r6 <> *main

    mov (@r7/0_2) M
    @r9 <M> (*block+1) @r8
    @r12 M (@r8+1) @r11 <M> @r11 ^@r8 u8
    mov ^@r3 (u8+0_1) u64 ^u32 (^@r11+0_1) @r11
    cmp <M> ^u16
    cmp M (@r8+3) *main u32

    dw (@r7+3) @r11 @r7 ^@r7
    @r11 @r5 && M @r8 ^u16 @r6
    jmk (^@r1/1) @r9 u32

    push *block ^<M>
    ldp u64 *main @r5 *block ^u8
    lsl @r9 @r12 ^@r1 @r8 (^*block/3)
    @r7 ^u8 ^@r7 (^@r2+0_2)
    dw u32 @r4 @r10 @r3 @r3 u8 @r3
    @r8 (*main+1) <M> @r6 @r3 u32
    dw ^@r12 @r9 ^@r8 (@r1/2) @r2 u64
    mov u64 u16 u32 @r5
    mov (^u16/0_1) @r2 @r12 @r10
    dw (@r4/0_2) && (@r10/1) u16 <M>
    push ^u32 M @r9 @r11 (@r10+0_1) @r9

    @r7 <M> (@r6+3) M @r7 u32
    movk <> && <M> (@r6/3) @r4

    push *main ^@r8
    movk (<M>+2) (@r6+0_2)

    jmk @r11 M @r6 @r11 *main
    movk @r4 (^@r7/1) @r12 u16 @r8
    jmp ^u32 @r1 (&&+1)
    jmk (u8+0_2) @r5 u32 <> (<>+3)
    dw <M> u8 @r3 @r4 ^@r3 <>
    jmp (@r10+2) ^u16 ^<M> && u32

    jmp @r7 <M> @r11 @r11

    jmp @r12 (M+0_2) && u64 *block @r8 ^u16
    cmp (@r12/0_2) (*block/0_1) ^@r3
    mov && (^@r8/0_1)

    ldp u64 ^&& @r10 (<>+1) @r4 ^@r4 u16
    jmk @r11 <M> @r10 @r7 ^@r4 @r8 *block
    movk @r10 ^@r4 @r3 @r6 @r4 u32 (<M>+3)
    push ^@r11 ^u32 @r1 (^@r8+0_2)

    dw (@r6+0_2) *block ^*main ^*block @r12

    @r5 ^@r9 @r7 *block (&&+2) (^@r11/0_2)
    mov @r10 *block @r12 &&

    @r5 && M @r11 (@r6/0_1)
    mov @r6 (u8/0_2) @r4
    push (^*block/2) *main u32 (@r11+1) (^*main/0_2) @r2 @r5
    @r9 (@r8+0_1) *main @r4 ^@r11

    jmp @r9 M (M/3) <M> (^@r2+0_2) @r12
    jmk (^<M>+0_1) (<M>+0_1) (u16+1) &&

    cmp (@r7+3) @r12 ^M @r5 && (@r4+0_2)
    @r8 u8 @r3 @r10 ^@r8

    cmp (@r3+0_2) @r12 u64 @r2 ^u8 @r11 @r2
    @r9 (@r10/1) (^@r5/1) *main M @r6 u32
    jmp <M> *block <> (u16/2) <> ^M @r3
    mov *block u64 u64 (^u32/3)
    @r3 u16 ^*block <> @r8 && (*main/0_1)
    ldp ^@r10 M ^u32 *main

    @r7 && @r5 <M> @r5
    @r12 ^u16 @r4 ^@r12 ^u64
    jmp @r5 <>
    lsl ^u64 (^u64+0_2) u8 @r1 <M> @r4
    cmp @r1 ^@r12 @r12 ^@r8
    push u32 (u32/2) @r12 @r9 ^@r6 u32 @r12
    @r2 *main (@r10+0_1) *main (@r10+1) @r10 @r11 @r1
    lsl @r8 @r7 <> @r10 u64
    jmk (^*block/2) @r10
    lsl @r8 @r11 @r3

    ldp @r2 && *main @r7 (<M>/2)
    lsl ^@r1 *block ^M *main M @r10 &&
    push && @r4 ^M ^u16 @r4 && ^@r12
    dw @r8 ^@r5 u64 @r11
    @r7 @r3 @r3 @r3

    mov (@r11+0_1) (*block+3) @r1 ^@r12 @r4 ^@r2

    jmk @r11 ^@r6

    jmp *main @r12

    @r12 ^@r11 (u32/0_1) @r4 ^u16 @r10 ^@r2
    mov @r8 u64 @r3 (^*main/1) @r11 @r3
    cmp @r3 ^<> && ^@r12
    lsl <> @r7 @r8

    jmk @r5 (M/3)
    lsl ^@r7 @r7
    jmk ^*block ^&& @r5 @r9 u64 <>
    @r5 ^@r11 u16

    @r2 M @r7 u32 @r10

