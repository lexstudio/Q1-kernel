    @r4 ^@r10 @r10 @r8
    mov && ^@r10 ^&&
    dw ^<> ^@r3 (@r5/1)
    cmp M (@r10/3)
    @r2 (*main/0_1) @r4 <> (<M>+3)
    jmk <> (*block+2) @r9 @r10
    push ^@r5 && @r6 @r6 u16

    dw @r4 (@r7+3) @r3 u64 <M> @r4 <M>

    jmp @r5 ^@r8
    movk ^@r2 @r8 @r7 (@r5/0_2)

    ldp ^u16 (@r9+1) ^@r2 @r3
    jmk <> @r9 u8 @r5 (@r6/0_2)

    mov u8 u32 @r5 @r4
    cmp @r10 @r8 <M> @r1 *main

    movk @r11 @r3 @r5
    movk ^u64 && @r4 (@r1+2) ^<M> @r11 u64
    ldp *main @r9 (*block/3) (u64+0_1)
    push @r4 <> *main <> @r5 @r1
    jmk && @r5 ^@r4
    push @r6 @r3 @r10 (u32/0_2) @r4 u16 (@r12+0_1)
    movk (u64/2) @r11 @r3 @r4
    mov (^<M>+0_1) @r10 @r12 @r11 u32 u64 (@r3+2)
    movk (@r3+1) u64 @r7 u64 @r2 @r4

    mov @r10 @r11 @r1 @r1 u16 M
    lsl (&&/1) @r1 (@r2/3) (*block/0_2) ^u8
    dw ^@r1 @r4 ^@r1 @r10 (u32/1)
    cmp @r4 ^@r6 && @r6 @r9
    jmp ^@r11 u64 @r7
    movk <> @r9

    cmp M @r10 M ^u32 @r9
    @r1 @r5 *main (<>/3)
    push (u8+0_2) @r1

    @r3 u64 @r10 @r8 @r7 @r8 @r10 @r4
    dw @r10 M
    jmk ^*main ^@r12 ^@r5 @r11 @r7
    @r11 (@r4/0_1) && (@r10+0_1) ^u16
    @r12 @r6 <> (^@r7/1) ^u64
    jmp ^u8 <M> *main (u8+2)
    ldp <> u32 ^&& @r12 @r9 (@r8/0_1) @r4
    cmp (u16+3) (@r5+2) @r11
    ldp @r1 <M> ^u64 @r12 @r1 @r8
    lsl @r3 @r5 ^@r8 @r7 @r11

    jmk @r2 @r12
    jmk @r12 @r12 u16 @r4

    mov (*block+1) @r3 ^@r1 <> @r8 ^@r12
    lsl @r7 @r6

    dw (u32+0_2) (@r12+0_2) ^@r2 (*main+1) (u64/1)
    lsl ^@r1 @r7 (@r9+0_1) <> @r10 @r2

    @r2 @r8 <>
    lsl *main (@r4/0_1) @r8 *block *main
    cmp ^<M> @r2

    movk && <M> (@r11+2) @r2 (@r12+2) @r3 *main

    cmp ^@r11 ^*block

    movk (^@r5/3) @r8 @r2 ^u32 (^*block+0_2) ^@r11
    dw u16 *main u32 @r8 ^@r5 @r11 @r10
    ldp ^M @r3
    @r10 @r4 @r3 (@r5/3) u32

    jmp && ^@r2 @r6 (^@r4/1) ^<M> @r9
    @r9 @r6 @r11 (*main+2)
    @r4 @r11 <> ^u32 @r11 ^@r11 u16 u64

    cmp (^M/2) (u32+0_1)
    lsl && M @r8 @r12 @r12
    mov (@r1+2) @r4 @r5
    cmp ^@r3 u64 ^@r11 @r10 @r1
    ldp @r3 @r5 @r6 u32
    movk @r11 M u8 u32 (@r6+1) && (@r12+0_2)
    @r2 @r3 ^u8

    jmk (@r5/0_2) @r5 <M> u8 *main @r4 @r9
    jmp u64 u8 ^*main

    mov ^@r9 @r6 ^*block @r8

    push M @r9 @r10
    movk <M> M ^@r7 @r7 @r7 @r10
    movk *main ^u64 @r12 ^&& ^@r8
    mov @r12 ^@r3
    lsl u32 @r7 ^@r2 @r11 ^@r3 ^*block

    jmk <> @r3 @r9 @r11
    ldp @r11 ^@r8 ^@r1

    mov @r3 && ^u16
    ldp (@r10+2) &&
    dw *main (@r7/2)

    cmp ^@r10 u16 @r1 ^@r7 @r5
    jmp M u32 ^@r10

    push u16 @r12 @r2 (u32/1) M @r4
    ldp (^M/0_2) (u32+1) M (^@r9+2) <M> ^@r7
    jmk @r2 <M> (@r2+2)

    dw (<M>/2) u16 @r5

    dw @r11 (@r7/2) @r9 ^@r2
    movk u8 ^@r4 (^@r2/1) (@r3+1) @r12 @r12 (*main/0_1)
    @r3 @r3 @r7

    @r12 *main (@r5/2) @r10 @r6 ^@r7 @r5 @r5
    movk (*main/0_1) @r1 ^@r3 @r9 ^u64

    lsl @r2 @r7 (^@r9/3) @r3 @r9 @r2 (@r4+2)
    movk @r2 (^@r10+3) *main (@r2/0_1)
    ldp @r3 ^@r12 <M> @r10 *main
    @r12 (^@r6/0_2) (*main+3) *main @r1 (@r11/1)

    @r9 (^M/0_1) @r10 u64
    jmp u8 @r4 @r9 @r10 @r10 u8 @r2
    jmk @r4 (@r9+0_1)
    movk @r1 u8 *main
    jmk u8 && @r12 ^u32 (^u64/0_2) @r10 @r4
    mov *main <>
    lsl @r2 <> ^@r7
    dw @r4 @r12 u64

    @r1 @r9 (@r7/0_1) ^@r6 M @r3 <M> u32
    jmk <M> && (<M>+2)
    jmk u16 (@r11/0_1) @r7 && ^u8 (u16/1) @r11
    movk u64 ^@r10
    lsl *main *main @r5 (@r9+2)

    lsl @r8 ^*main

    ldp (&&+1) <M> (@r9/2) u32 (^@r9/3)
    mov @r8 @r8 (@r3/0_1) <>

    cmp M @r12 u32 @r10
    @r12 @r3 u16

    cmp (<M>/3) @r5 *main @r7 && u16 u32

    jmk ^M (@r9+0_1) <>

    jmp u32 ^@r6 @r9 && (<>/3) ^@r6
    cmp @r2 @r12 ^@r7 @r5 @r2 @r11
    lsl ^M @r3
    movk *block u32 u64 @r2

    @r11 @r8 ^@r5 @r12
    push @r11 @r5 @r5 @r7 *block

    @r7 *main u8 (@r7/1) @r1 ^@r7

    cmp @r7 ^@r10 u32 u64 *main @r1 M
    cmp (M+0_2) ^&& @r4
    @r9 u16 M *block &&
    push @r12 *block && @r4
    @r11 M <M>
    dw ^@r11 (*main+0_1) (@r3+0_1) <M> <> @r12 @r10
    dw (@r6/2) (<M>+2)
    @r8 @r8 @r3 @r9 u8 <>
    lsl @r9 *block
    push M u8 ^*block M

    lsl @r8 <M> *main (@r1/0_2) (<M>+3)
    jmp @r1 ^u64 u64

    dw (<M>+0_2) @r11 ^@r10 @r12 (^@r3/1) u64 @r7
    jmk ^@r11 @r7 *main

    lsl u32 ^u16 ^@r5 u64 ^M
    ldp <> ^@r5 @r10 M
    jmp @r5 *main

    push @r9 *block (<M>/2) *main @r6
    mov @r7 @r3 @r1 @r7 (@r8/3) (u8/3)

    @r6 u8 u64 *main
    jmp @r2 @r7 (@r9/2) @r8 ^M @r12

    @r10 @r12 ^u16 (<>/3) *main
    @r1 @r4 (@r11/2) @r7 u8 (u64/3)

    mov ^@r3 ^*block <M> u64 @r12 @r10 (u64/0_2)

    mov @r1 (u8/3) (u8/3) @r9 @r2
    push @r10 (@r3/3) (u32/3) @r6 (u16/2)

    jmp @r4 @r7
    @r11 @r10 *main ^*block
    @r4 *main @r7 (u8/3) @r5 ^u8 @r2 @r3

    @r12 <> u8 @r1 <M> @r7

    ldp u64 (^@r9+0_1) @r9 ^u8
    push ^u64 @r4 u64 ^u32 u16 ^@r8 (^@r6+3)
    lsl (^u32/0_1) @r7 @r6 M @r6
    dw && M <M> @r9 *block
    lsl @r7 ^@r1
    ldp ^@r8 @r7
    dw (*main/2) ^@r11 (M+1) @r7 ^<M> @r10 u8
    movk ^@r5 <> @r4 *main @r7 @r6 (@r5+1)
    mov @r4 ^u16 ^@r2 && @r5 @r4
    push @r5 u16 (^*main+0_1) @r12 @r6 u64 (@r2+1)

    lsl ^<M> *main u16
    jmk @r12 M @r1 ^u32 @r8 @r3

    jmp *main @r3 @r2 @r5
    push @r4 ^u16 @r4 @r4
    mov @r7 u32 <M> u16 <> @r8 @r6
    dw @r7 @r5 @r6
    ldp (^<>/2) @r1 @r10 u16 ^@r1

    cmp @r9 <>
    movk u64 @r11 ^@r4
    movk u8 M ^M <> @r11 ^@r6
    ldp @r5 ^<>
    @r12 (u64+3) @r6 <> @r4 *main
    jmk (@r3/0_1) @r6 u32
    movk && ^u16 @r11 u8 (^u32+1) (@r4+3) @r5

    jmp ^@r10 M
    mov (@r12/2) ^@r1 @r7
    movk @r8 @r5 @r5 (^u8/0_2) *main <M> @r10
    ldp (@r7/1) @r8 <M> u64
    cmp @r12 <> @r1 @r7 (*block/3)

    jmk @r11 *main *main @r5
    movk u16 @r8

    @r12 u8 u16
    ldp @r7 (^@r11+3) @r8 @r12 *main <> ^@r3

    @r4 @r8 @r10 (u64/2) (^@r3+1) u32 ^u16
    jmp @r1 @r10 @r5 *main M @r8
    mov @r3 @r2 M u32

    mov @r12 ^@r12 @r10 ^<M>
    jmp <> @r4 (u64+0_1) M
    jmk <M> *main
    jmk ^@r3 @r4 @r12 ^@r6
    jmp @r10 *block (*main+3) (@r7/2) *block ^u8

    ldp u64 ^@r10 &&
    mov (^@r3/0_2) <M> @r4
    jmp (<M>/0_2) *block @r11

    jmp && @r10 (^@r7+3)
    push @r5 u8 @r8 *block ^@r3 (u8/0_1) @r10
    cmp u8 (@r11/0_2) @r7 @r1 ^u64 (u16/2) (^@r1/1)
    lsl ^*main @r5 @r3
    ldp u32 ^@r11
    dw @r9 ^@r4 M @r3
    movk ^<> @r10 ^@r4 @r2

    @r10 (^@r10+0_2) @r3 @r11 u16 ^@r5 ^@r7 @r9
    movk <> @r2 @r6 u64
    jmk && (@r1/3) (@r8/0_2) ^&& @r2 <M>
    jmp @r1 (^<>+0_2) u32 @r12 @r3 ^@r9
    ldp @r7 (^u8+3) ^@r11
    dw (u8+0_1) u32

    cmp (@r8/1) (&&/3) <M> @r5 @r4
    push (u8/2) @r4 (^@r2/0_1)
    movk (*block+1) ^<> <M>
    mov <M> (@r9+3) ^@r2

    cmp (@r3/3) @r6 ^@r4 @r1 ^@r10

    jmp @r11 @r8 <M> ^@r10
    jmk (@r9/2) @r2 ^@r11 *block *block

    dw @r8 M u8 ^@r10
    jmk u8 (u16/0_1) ^u64 u64
    @r12 @r5 (^@r5/0_2) @r7 @r10 ^*main
    lsl ^@r12 (u32/0_1) <> *main ^@r12 (*block+3)
    movk u16 @r12 <> @r2 @r2 (^u32+0_1) (@r1+2)
    @r1 <M> @r12
    movk ^@r7 ^M @r10 (*main+2)
    cmp @r3 (^@r12+3) @r6 @r2 <M> ^*block (u16/0_2)

    cmp @r7 (^<M>/0_1) @r1

    @r2 && @r12 ^@r10

    jmk u32 @r4 @r8 @r7 @r3

    jmp ^@r11 (^@r10/2) @r3 *block @r10 @r9 @r8
    ldp u64 @r8
    @r10 ^@r9 ^@r4 @r4 @r10
    jmp <> (u64/1) && (@r3+1) ^@r11

    lsl ^u8 ^@r10 @r8 (@r2+1) ^M u8

    mov @r6 @r2 @r2 (u32/0_1)
    mov && && ^u8
    push @r12 @r8 @r7 <> &&
    jmk @r3 @r3 *block <M> ^@r5 *block @r11
    jmk (<>+0_1) ^&& ^@r6
    cmp u16 && @r11 @r1 u64
    mov @r1 @r7 u8 @r9 && @r12
    ldp @r4 u16 @r1 u32 M
    @r6 @r10 (u32/1) @r3 @r5 M *block
    cmp ^@r2 <M> ^<M> u8
    movk @r4 <> ^@r8 u64

    @r6 u32 && <>
    @r3 @r10 (@r10+0_2) u32

    jmk && u64
    movk <M> ^@r4 (M+2)

    cmp @r1 @r11 (@r1/0_1) @r12 @r5 @r3
    jmk ^@r3 u64 u64 ^u32 ^@r6 @r10
    mov <M> (@r3+2) (@r7+0_2) (<M>+0_1) M
    @r9 (^@r2+2) M u16 (u16+0_1) <M> u32

    jmp @r11 <> *main u64 @r2
    lsl u8 M @r1 @r5 u16 u8

    mov ^u32 u8 ^M ^&& (M+2)
    movk u8 ^@r9 u16 @r10 @r10 @r5 &&

    mov @r7 (^@r6+2) ^@r9 *block && @r2 u32

    @r10 @r12 @r4 (<M>+3) @r12 ^@r1

    push @r11 @r9 @r6 @r10 @r12 <M> @r4

    movk <> @r12
    jmp u32 ^@r2
    push @r12 (@r12+1) M
    dw @r1 <M>
    cmp (M/2) @r3 *block <> u8 u64 <>

    ldp *block ^<> ^@r11 @r3 <>
    lsl *block @r1 u16
    push @r11 ^@r4 ^u32
    ldp @r4 ^<>

    dw @r7 ^@r12 u32 u8 @r8 <> *block

    ldp *block <M> u8 @r4 *main
    cmp @r4 @r11 @r8 @r1 u8 M
    movk *main ^*main @r12 @r6 (@r5/3)
    cmp (*main/2) *block (@r6/1) && @r3 @r3 @r1

    jmp M @r3 @r5
    @r6 @r3 @r1
    lsl (u16+0_1) ^<M> @r5 ^@r11

    push ^@r10 u16 @r12
    jmk @r9 (^@r8+0_2) @r4
    cmp (*block/0_1) @r11 (@r11+2) *main (^@r3+0_2) @r2 @r3
    movk @r8 (u32/3) @r1 ^@r8 @r8

    @r12 M @r5 @r9

    push @r10 @r3 @r8 @r6 @r10 u8 ^@r1
    mov @r10 ^@r4 ^@r1 u32 u16
    mov && (@r8/0_1) u8 @r5 @r3 @r2 <>
    jmp @r2 u16 @r5 @r10
    cmp M @r2 u32 (@r4/2) @r4

    jmp @r12 <M> u64
    lsl @r8 *block
    jmp @r1 @r8 && ^&& @r11 ^@r8 (M/0_1)
    jmk *block ^@r1 @r12
