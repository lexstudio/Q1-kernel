    lsl @r7 @r11 u8
    lsl ^u32 (u32+3) <> M ^@r10

    ldp u64 @r7
    @r11 (^u16+0_1) @r1 @r3 && @r4
    push (<M>+1) @r5 @r8 u8 @r8
    cmp @r7 && @r11 u64 @r11
    lsl ^@r7 ^@r4 @r1 ^@r7
    ldp ^@r2 @r7 ^*block ^@r9 @r12 @r12 @r7
    lsl <M> ^@r5 @r12

    ldp M @r6 (u32+2) <> @r10 *block
    ldp @r6 ^@r2 ^@r9 (^u8/2)
    @r2 @r4 *block @r11
    push @r6 (u64/3) @r4 (@r5+3) ^@r1 @r7
    @r5 ^<> @r4 (<M>+0_1) (@r3/0_2) ^@r4 ^@r5 u32
    cmp u16 @r12 u64 @r8
    ldp @r8 ^@r12 (^@r2+1) (@r4/1) @r5 @r11
    jmp ^u64 @r7 @r8

    @r4 ^M ^@r8 (*main/2) && @r4 ^<M> M
    mov @r12 @r1
    push ^@r12 *block ^*block @r11 @r11 @r9 *main
    cmp @r12 && *main @r3 (*main+0_2)
    cmp ^@r1 && && @r8 ^@r3 (^@r10/2)
    cmp (u32+0_1) <M> ^*block ^@r2
    @r9 (<M>+0_2) @r11 @r5 (@r5+0_1) @r9 && M
    push ^&& &&
    jmp (@r4/1) u32 @r11 u64

    jmk (u8/0_2) @r5 (@r1/2) *block u64 @r7 u32
    @r1 u16 @r9 @r3 (<M>+1) ^u16
    cmp && ^<>
    @r3 @r12 && <M>
    jmp ^*main (@r1/2) ^@r2 ^@r1 <M> *main
    movk ^*main u8 @r2 @r1 ^@r4

    push @r9 ^u64 ^<M> <M> u16
    push ^@r8 ^@r6
    @r7 ^u8 @r11 *main ^u8
    cmp u16 u32 @r12 @r10
    ldp ^u8 u16 @r2 @r4
    ldp u16 @r5 <>
    ldp <M> @r12 @r6 @r3 @r4 (&&+2)
    lsl @r10 (*block+0_2) @r6 u8
    mov @r5 (<M>/1) <M> ^u16 ^u8
    jmp && <M> ^u32
    dw u32 (<M>/2) <M> @r11 u64 @r12 (^@r6+0_1)

    @r1 @r6 &&
    jmk (^M/1) ^u16 *block M @r10 @r6 ^@r11
    @r6 *block (@r7/3) @r10 @r12 u64
    push ^@r3 @r11 ^@r1 M *main (@r6+2) u32

    cmp (@r11/2) @r6 @r4 u8

    dw && ^<> u32 ^@r4
    cmp @r4 ^*main @r3 @r4 @r5

    jmp u8 ^@r2 (u16/0_1) @r8 u16

    lsl *block (&&/2) *main ^@r8
    jmp ^@r2 *main *main @r11 u32
    movk <M> @r2 ^<M> @r1

    dw @r11 (u32/3) ^u64 ^@r9

    cmp M *block
    jmp @r6 ^<> ^@r2 @r2
    @r5 @r8 (@r4/3) @r12 @r9 @r8

    @r6 ^u16 @r5 @r5 M
    lsl *block @r5 @r12 @r10 M @r12
    movk @r11 @r9 @r6

    jmp @r11 @r11

    mov && ^@r3 @r5 *main (^@r3/2)
    @r3 u16 ^M
    mov u32 (@r2+3) *main ^u64 u16 u8
    dw @r7 ^*main @r5

    cmp @r7 u8 @r12 @r3
    push *main @r4 ^@r11
    dw @r9 @r3 @r3
    push @r10 (@r11+1) (^M/1) @r4 @r2 ^<>
    dw M @r3 @r8 @r12

    push u32 (@r2+3) ^@r3 u8 u8 @r10 ^u32
    dw ^@r2 @r2 @r10 @r2 ^@r6 u64
    dw @r2 u16 <M> (^u32+2) u64 @r9 (@r5+3)
    dw @r4 ^<>

    jmp ^@r11 u64
    @r3 @r10 @r1 ^M M <M> @r1

    jmp ^M u16 @r10 <M> M && ^@r5

    lsl @r4 u64

    cmp *block u16 <> ^<>
    jmk ^*block @r11 @r7
    movk ^&& (@r2+0_1) ^@r11 (*main/2) @r4 ^M
    jmk @r7 @r12 @r12 (@r11+3) *block @r6 ^*block

    movk ^u8 (@r2+0_2) @r2 @r10 &&
    @r6 @r6 ^@r9 @r12 @r6 @r9 @r10 u64
    ldp @r12 @r5 ^u8 (^@r12/2) ^@r10

    dw @r12 @r2 @r4
    jmk @r1 @r6 @r6 M

    ldp @r5 u32 ^*main
    ldp (@r2+0_1) @r12 @r4 @r10
    @r3 *block @r6 ^@r7 @r8 ^@r8
    push @r10 ^<M> @r6 ^<>
    cmp @r11 @r6 (^<M>/2) @r12 @r9 ^@r7 u8

    @r5 (^u8/0_1) @r8
    jmp u64 @r10 ^u16 u16
    lsl ^@r9 (@r10+1) @r10
    cmp ^@r1 @r4 @r7 @r8 u32 <> @r7
    @r9 ^@r5 (u16/0_1) (^u16+2)
    dw (@r11/0_1) @r10
    ldp ^u64 u64

    lsl ^<> @r1 @r10 u32 @r12

    cmp *block (^@r8+3) ^u8
    mov ^<M> (@r7/0_2) ^u32 @r6

    ldp ^@r1 @r6 (@r8/2) ^@r12 ^@r5

    @r4 @r3 @r10 u8
    @r3 @r11 ^u16 u64 @r5
    lsl <M> && @r6 (^@r2+2) @r8 M ^u64
    dw *block ^u32 ^@r9 u64 ^@r10 (M+0_2)
    @r9 @r9 @r6 (@r9/0_2)
    dw u8 u32 ^@r2
    ldp @r11 (@r3/0_2) <M> ^@r8
    lsl && @r9 @r6 @r9 <> <M>

    movk u32 ^@r5 @r3 ^*block
    push @r7 u16
    lsl ^<M> (*block+0_1) *main ^@r9
    dw ^u64 (u8/0_2) @r1 @r5 *block *main

    jmk @r6 u32 ^*main
    @r12 @r1 ^<> u32 ^@r8 ^@r5 @r8 *block
    dw ^&& (@r2+0_1) @r3 u8 u8 u8 @r7
    jmk @r2 @r6
    jmp @r8 @r5 *block @r7 <> @r11
    dw @r5 (u8/2) @r4 @r3
    lsl *main (@r4+0_2) ^@r4 @r8 @r2
    dw (^u64/1) u32
    mov M u64
    push @r5 @r7

    jmk *block <M> @r4 ^@r5
    push <> ^u64 M @r4 (@r9/0_1) ^@r8 @r4
    ldp @r5 @r11

    @r11 @r4 @r11 (@r7+1) ^u32 <M> <M>
    @r2 u32 *block @r6 @r3
    lsl @r1 <> <M> (u64/0_2) @r5 @r1
    dw ^@r12 u8 @r2
    lsl @r9 @r9 @r2

    mov @r9 u32

    @r7 (^u8+3) u32 u8
    lsl @r6 (@r2+1) u8 u64
    mov @r1 @r5
    push ^u32 u64
    @r6 ^M @r10 @r8 ^*main *block <M> @r12
    movk @r10 (*main/0_2)
    jmp @r4 @r9 @r10 @r10 @r6 (@r11/3)
    jmk u16 ^M *main @r12 *block

    mov (@r9+0_2) u32 (@r5/0_2) @r4
    push (^&&+2) ^M @r4 @r6

    ldp *main (^u32+0_1)

    @r11 (@r11+1) (^u32+0_2) ^u32 ^u64
    @r11 u16 @r2 u64
    @r6 @r11 <M> @r12 @r7
    jmp *main u64 @r12
    jmp @r6 <M> ^@r12 ^*block *main (@r5+0_1)
    dw ^*main @r11

    lsl @r11 @r5 ^<M> @r4 ^@r6 (u8+3)
    movk M u64 ^<M> <>

    cmp M (@r1/0_1)

    @r12 (@r9+0_2) @r12 @r7 u16 *main u32 <>
    @r1 ^*main *main ^<> ^@r8 ^@r1 *block
    movk (^u32+0_1) (*main+0_2) @r2 u32

    @r4 u64 u32 <M> ^@r10 @r6

    jmk (@r8+0_2) ^@r8 (^u8/1) ^@r5 ^*main (^@r7/0_2) @r3
    ldp @r11 *block

    lsl ^u32 (@r5/2) ^@r12 (@r2+2) *block u8

    lsl @r10 ^@r9
    movk @r3 && @r6 u8 @r6 ^<M>
    @r7 (^@r6/1) @r7
    mov (<>/3) @r3
    ldp ^M (^&&+0_2) @r10 ^@r1
    mov (&&/0_2) @r5 (&&+3) @r5 (u32+0_2) @r6 @r8

    push @r11 u64 @r10 (*block/1) @r1 @r4 @r5
    push @r10 u16 @r5 @r9

    mov ^@r12 @r12 @r3 @r9
    push ^@r11 (@r2+3) <M> @r8
    cmp u16 @r9 (u32/2) @r4 @r1 (@r8+3) (@r6/0_2)

    jmk @r11 ^@r8
    mov (@r9+0_1) ^@r3 u8

    dw u16 @r5 u16 (*block/1) @r5 @r4 u64
    @r1 ^u16 @r5 (@r5/3) (@r5/0_1) @r1 @r9 *block
    @r4 u16 @r8 @r10
    mov <> @r11 u32 u64 u32 (<M>/1) @r6
    @r7 && ^@r12 @r1 u8
    mov (^<M>+1) u8 @r5 @r2 (@r4+0_1) (@r9+0_2)

    @r11 @r10 (@r5/0_2) (^u8+2) @r2
    jmp (@r12/0_1) @r11 (@r1+1) @r4
    jmp @r3 @r11 u64 ^@r8 *block
    ldp ^@r11 @r2 <M> @r1 @r12 ^*block *main
    jmk <M> ^<M>
    @r12 <M> u8 (@r7/0_1) ^@r12 @r9 M @r1
    @r5 (@r4/1) @r11 && (@r1+3) (^&&+0_1) (@r10+0_1)
    mov *main @r6 (M/0_2) u32 ^&& @r5 <>

    jmk @r5 *main @r2 @r7 @r5
    push @r4 @r8 ^*main u16 <> ^@r4 @r1
    jmp (^@r1/0_2) *block ^*main
    ldp @r12 @r8
    movk @r8 (^@r4+0_1) && M ^M @r4 @r4
    dw && u8 @r12 ^*block u64 (@r11/3) @r6

    dw @r6 ^@r7 u16 ^@r3 ^@r3 ^u8 @r7
    jmp @r6 (@r5+0_2) @r4 (^M/2)

    lsl @r5 *block @r4 *main
    dw ^@r10 ^@r1

    dw *main *main ^@r1 M *main ^*main @r7
    push ^@r2 M
    cmp *block ^@r12 ^&& ^u32

    ldp @r3 @r12 <M> ^u16 u32
    ldp @r2 <> (@r7+0_2) <> ^&&
    push (<>+0_2) (*block/0_1) (@r1/0_1) u16
    lsl (^@r2+0_1) u16 *main
    jmk @r3 @r2 (@r12/2)
    jmp @r4 @r4 (u8/2) @r12 u32
    ldp @r1 ^@r4
    mov ^@r4 @r7 @r11 ^@r9 (^@r12+0_2) @r4 *block
    ldp @r5 <> ^&& @r4 *block ^u8 u8
    movk @r6 @r6 u16 @r7
    @r5 ^M *main ^u64 u32
    dw (^*main+0_1) ^@r11

    jmk (<M>/0_1) @r5 ^*main

    lsl @r3 (@r10+2)
    @r12 @r4 <> *main
    ldp @r5 @r5 (u16/2) u16 u16 *block u16

    jmk u32 && ^@r4 ^*main

    push *main u32 (^@r7+3)
    jmp ^u8 *main
    @r2 (@r1/0_2) @r9
    @r8 @r4 @r5 u64 ^@r1 u64 @r4 @r2

    movk @r9 @r7
    lsl u16 (^@r2/0_1)
    movk <> @r4
    jmp @r4 @r7 M u32 *main
    cmp @r1 @r11 @r9 @r12 ^M M ^@r11
    lsl ^@r5 @r2 (@r7/0_2)

    dw @r10 @r3 @r2 @r3 ^u8 @r8 u16
    lsl @r10 (@r6+0_2)

    jmk ^@r11 u16 ^<M>
    cmp u32 (u16+0_1) ^@r5 @r11 u16 @r10
    @r2 <> ^@r3 u64 &&

    @r5 @r6 (^@r2/0_1) u16
    push && @r8 @r10

    mov u16 @r10 (u32+0_1) ^@r10 ^u8 <> <M>

    push *main @r2 @r4 (u16+0_1) @r10 @r6
    jmk ^<M> (*main+1) ^*main ^@r12 @r4
    push @r10 (@r2+1) @r3 u8 ^u8
    mov *main (^&&/2) @r2

    jmp @r7 u32 ^@r10 ^@r6 @r9 @r9
    movk <> ^*block (u64+1) @r6 u64
    @r4 @r3 *block @r6

    ldp @r6 ^@r1 ^u32 ^u64 @r10
    jmp && @r10 u32 (*block+0_1) @r2 && (@r2/1)

    lsl <M> *main *main @r5 ^@r3
    mov u16 <> *main <M> *block @r7 (M/3)

    lsl @r10 u32 @r11 <M> ^@r5
    dw (*main/2) ^@r2 u32 @r1

    @r9 ^@r1 (u32/1) <> ^M ^@r6 ^*main
    mov (M/3) ^@r11 (<M>+2) *main @r8 u16
    lsl @r9 @r3 @r9 @r11 ^&& u16
    cmp *main (@r9/0_1) u32 M @r2 @r1
    jmp (@r10/1) @r9 ^*main u64 (@r9+3)
    mov ^@r4 u64

    jmp @r1 (@r2/0_2) @r11
    mov ^@r7 (@r5+0_1) @r4 *block u16
    movk u8 @r10 @r2 *block <> @r1
    push <> ^@r12 ^@r10

    @r7 <> (^@r1/2) (u8+0_1) @r2 ^u16
    jmk (^@r1/1) @r6 (@r4+0_2) <M> u64
    @r3 M @r6 @r6 @r8 ^u32 (@r5/0_2)
    jmp <M> @r4 M @r8 @r3 (^@r3+1) (<M>+1)
    @r7 @r6 ^M *block @r4
    lsl ^<M> ^u32 (@r10+0_1) @r9

    lsl (@r5+0_1) @r12

    cmp ^@r9 @r3 <M> @r9 u16
    jmk (@r11+2) u64 M (@r2/1)

    @r8 ^*main @r11 (u64+2) @r6 @r12 (@r11/0_1)
    @r6 ^<> u16 M *main

    @r2 @r6 @r3 @r2 u64 @r5
    movk ^<M> (@r10/1) u64 <M>
    @r10 u16 u8 ^<> ^<M> ^@r1 ^<> @r9
    ldp @r10 @r11 @r12 ^u8

    @r9 ^@r12 ^@r3 <M> <M>
    mov (@r5+2) (^@r5/0_1) ^&&
    @r10 @r3 @r6 (@r4/0_2) ^*main @r2
    jmk @r5 @r11 ^@r12
    jmp @r11 (^@r3+3) ^@r10
    jmk && <M> ^@r5 @r11 @r9 ^@r6
    lsl @r9 @r4 (@r3/0_2) @r2 <>
    jmk @r10 @r12 (u64/0_2) *block
    jmk (u16+0_1) && @r10 <> @r7
    lsl @r3 @r8 @r9
    @r7 u8 ^*block
    cmp ^@r10 *block <M> *block
    @r9 ^<M> && *main @r1 u8 (^u64+3)

    ldp <> (@r5+1) (@r4+1)
    @r2 (^&&/0_1) @r2 (u16/0_1)
    @r6 @r2 ^@r6 ^M @r6
    mov @r1 ^M *main @r4 @r8 @r11

    @r9 @r6 u16 @r3
    dw u64 *block ^u64 u32 *block
    mov @r4 @r7 (&&+3) && *main @r10 u32
    @r6 @r5 @r5 @r3 u8 @r10 @r7
    dw @r7 @r3 @r1 @r12
    lsl <> u32 <> u8 @r2
    jmk u64 @r4

    cmp ^@r10 @r4 @r11 ^u64 (@r8/0_2) @r2 ^u16
    lsl (@r4/0_2) @r7 @r10

    mov *block @r1 @r10 @r2 *main ^@r1
    mov (@r1/0_2) @r3
    movk u64 (@r3+1) ^@r9 @r8 ^u64 ^@r6 (@r2/1)
    lsl *main (^u64+2) @r11 ^@r3 u64 (@r2/0_1) *main
    push *main *block @r4
    @r5 *block u64 u64 ^<M>
    dw && M @r7
    mov @r6 u64 ^<M> <M>

    cmp @r7 u8 <>
    jmk *block @r11

    movk @r11 *block
    mov u32 ^@r5 *block @r9 <M>
    push && ^@r8 @r4 *block ^*main
    jmk @r3 (@r12+2) && ^&&
    mov @r1 u64 (u32+2) u8

    jmp ^@r8 @r8 u8 @r1 ^@r8
    ldp @r12 M u32 @r12
    push @r6 @r12 @r8 (@r12+2) ^@r9 ^@r10
    cmp M @r1 <> @r11 (u16+0_1) @r5
    @r10 *main M @r11 u32 u64 (@r4+2) @r10
    ldp @r1 u64 @r10
    movk ^@r2 (@r10+0_2) (*block/1) @r2 *block *block @r3
    lsl u16 u64 @r5 u8 @r7 *block ^@r5
